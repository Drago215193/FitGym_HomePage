%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1505.m00.i121.n040.S.c12.T-shirt vector design for bodybuilders and fitness club.eps
%%Creator: Adobe Illustrator(R) 18.1
%%For: ??????? ??????
%%CreationDate: 5/5/2015
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.1.1 x446 R agm 4.7721 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c014 79.156821, 2014/08/29-03:07:50        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmp:ModifyDate>2015-05-05T10:51+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-05-05T10:50:59+03:00</xmp:CreateDate>
         <xmp:MetadataDate>2015-05-05T10:51+03:00</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe Illustrator CS5.1</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYqxTzD+a35b+Xbw2OteY7GzvV+3avMrSp/ronJl/wBkMVVvLX5l/l/5&#xA;muDbaD5gsdQuhU/Vopl9YgbkiJqOR7gYqyXFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;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&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:DocumentID>xmp.did:3F5D4AA9F0F2E41193A2C8CFC78D0660</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:3F5D4AA9F0F2E41193A2C8CFC78D0660</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>uuid:1bb0f6be-76da-402c-9c49-9ecdf601cd18</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:3C5D4AA9F0F2E41193A2C8CFC78D0660</stRef:instanceID>
            <stRef:documentID>xmp.did:3C5D4AA9F0F2E41193A2C8CFC78D0660</stRef:documentID>
            <stRef:originalDocumentID>uuid:1bb0f6be-76da-402c-9c49-9ecdf601cd18</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EFC2C6F66AF2E4119008F12FFF6AB40A</stEvt:instanceID>
                  <stEvt:when>2015-05-04T22:58:16+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:385D4AA9F0F2E41193A2C8CFC78D0660</stEvt:instanceID>
                  <stEvt:when>2015-05-05T09:33:37+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:395D4AA9F0F2E41193A2C8CFC78D0660</stEvt:instanceID>
                  <stEvt:when>2015-05-05T10:45:30+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3A5D4AA9F0F2E41193A2C8CFC78D0660</stEvt:instanceID>
                  <stEvt:when>2015-05-05T10:45:46+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3B5D4AA9F0F2E41193A2C8CFC78D0660</stEvt:instanceID>
                  <stEvt:when>2015-05-05T10:48+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3C5D4AA9F0F2E41193A2C8CFC78D0660</stEvt:instanceID>
                  <stEvt:when>2015-05-05T10:48:35+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3F5D4AA9F0F2E41193A2C8CFC78D0660</stEvt:instanceID>
                  <stEvt:when>2015-05-05T10:51+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <dc:format>application/postscript</dc:format>
         <pdf:Producer>Adobe PDF Library 9.9</pdf:Producer>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
397.08 232.771 mo
397.08 328.045 319.853 405.272 224.58 405.272 cv
129.307 405.272 52.0801 328.045 52.0801 232.771 cv
52.0801 137.499 129.307 60.272 224.58 60.272 cv
319.853 60.272 397.08 137.499 397.08 232.771 cv
cp
.968627 .576471 .117647 rgb
f
235.231 53.3354 mo
235.329 53.3461 235.341 53.3579 235.321 53.3676 cv
236.221 53.6879 238.826 53.0269 239.413 52.52 cv
238.583 52.0527 237.042 51.6957 236.578 51.6957 cv
236.654 52.5082 236.04 53.1601 235.231 53.3354 cv
cp
1 1 1 rgb
f
232.957 51.6957 mo
232.367 51.7519 230.785 51.7744 230.552 52.3862 cv
231.256 52.9375 233.027 53.415 234.198 53.227 cv
233.218 53.0014 233.237 52.3784 232.957 51.6957 cv
cp
f
230.797 53.8735 mo
230.785 53.8066 230.762 53.6978 230.731 53.6831 cv
230.754 53.7451 230.777 53.8125 230.797 53.8735 cv
cp
.701961 .701961 .701961 rgb
f
241.517 212.027 mo
248.606 212.52 252.555 214.419 251.997 211.852 cv
251.782 210.77 246.664 208.063 240.994 208.155 cv
231.536 208.325 228.62 208.454 230.102 218.653 cv
230.102 218.653 230.209 211.279 241.517 212.027 cv
cp
f
228.927 52.6016 mo
228.927 52.6006 li
228.923 52.6001 228.919 52.6001 228.913 52.5996 cv
228.919 52.6001 228.923 52.6011 228.927 52.6016 cv
cp
f
214.432 53.0107 mo
214.407 53.0229 214.373 53.0312 214.343 53.0414 cv
214.393 53.061 214.635 53.0619 214.432 53.0107 cv
cp
f
218.265 73.0376 mo
218.352 73.1392 218.306 73.1753 218.271 73.1953 cv
218.271 73.2061 218.273 73.2168 218.273 73.2275 cv
218.3 73.2314 218.352 73.2334 218.434 73.2373 cv
218.374 73.1978 218.351 73.0845 218.265 73.0376 cv
cp
f
214.343 53.0414 mo
214.323 53.0317 214.335 53.0209 214.432 53.0107 cv
213.625 52.8417 213.116 52.2421 213.213 51.4809 cv
212.262 51.8217 211.156 51.7622 210.326 52.2124 cv
210.935 52.7002 213.458 53.349 214.343 53.0414 cv
cp
1 1 1 rgb
f
235.321 53.3676 mo
235.292 53.3569 235.257 53.3481 235.231 53.3354 cv
235.05 53.3984 235.272 53.3915 235.321 53.3676 cv
cp
.701961 .701961 .701961 rgb
f
254.808 194.499 mo
254.808 194.499 261.74 196.681 260.68 200.4 cv
259.754 203.734 260.058 206.174 252.707 207.57 cv
251.541 207.799 252.707 207.57 255.424 208.669 cv
258.031 209.705 253.171 214.335 253.498 216.111 cv
253.915 214.143 258.405 210.556 260.045 208.907 cv
261.744 207.246 265.192 206.537 266.658 203.767 cv
261.385 206.537 261.899 196.847 264.175 194.836 cv
268.051 194.834 272.31 190.583 274.31 187.251 cv
274.742 186.484 275.098 185.772 275.252 185.183 cv
274.803 185.444 274.4 185.681 274.022 185.886 cv
270.444 187.746 268.434 187.083 266.658 183.229 cv
265.742 181.329 263.942 177.163 260.523 177.621 cv
264.293 182.566 265.709 187.492 264.818 190.316 cv
264.275 191.943 259.635 192.951 254.808 194.499 cv
cp
f
251.161 177.945 mo
248.806 176.502 245.953 175.267 242.616 174.426 cv
239.132 173.549 235.94 172.865 233.48 173.251 cv
230.447 173.714 228.555 175.786 228.555 181.108 cv
228.555 190.704 236.74 188.653 244.729 188.653 cv
252.72 188.653 258.446 192.548 258.446 187.841 cv
258.446 184.68 255.894 180.88 251.161 177.945 cv
cp
f
254.486 240.633 mo
258.832 239.76 261.506 238.305 266.713 237.711 cv
267.352 239.334 267.917 240.846 268.455 241.933 cv
270.853 246.648 273.161 251.575 275.512 256.234 cv
273.11 250.48 269.872 244.044 267.711 237.605 cv
267.768 237.604 267.851 237.602 267.944 237.598 cv
267.202 235.25 li
267.11 235.262 267.02 235.281 266.972 235.295 cv
266.429 233.535 268.326 231.002 268.041 229.267 cv
269.049 226.075 269.049 226.075 269.049 226.075 cv
265.13 227.113 253.551 230.83 249.309 231.627 cv
244.07 232.588 239.649 233.639 233.372 234.834 cv
243.911 234.834 256.488 231.122 265.695 228.809 cv
265.913 231.323 265.1 233.4 265.896 235.475 cv
256.626 237.074 248.112 240.863 239.053 242.255 cv
243.815 242.238 249.789 241.568 254.486 240.633 cv
cp
f
216.979 51.4506 mo
216.979 51.4506 217.089 52.12 216.733 52.3705 cv
216.586 52.6269 216.586 52.6269 215.936 53.0629 cv
217.059 53.0864 218.581 52.6323 219.186 52.1353 cv
218.608 51.6143 217.55 51.4931 216.979 51.4506 cv
cp
1 1 1 rgb
f
241.684 201.45 mo
248.729 202.007 256.121 202.364 256.121 199.743 cv
256.121 194.9 249.277 194.986 242.171 194.986 cv
235.063 194.986 227.521 193.319 229.744 205.493 cv
229.744 205.493 232.769 200.754 241.684 201.45 cv
cp
.701961 .701961 .701961 rgb
f
203.464 69.1548 mo
203.306 70.0757 203.509 71.1821 203.297 72.0215 cv
203.113 72.2261 li
203.12 72.3545 203.464 72.2656 203.279 72.6064 cv
201.824 71.3647 201.363 69.6211 202.931 68.2065 cv
201.395 67.374 201.125 65.7471 203.075 64.9434 cv
203.113 62.6631 201.284 63.9395 200.884 65.2192 cv
200.204 63.9326 199.919 61.9565 201.088 60.7363 cv
202.286 61.6787 203.56 64.332 203.86 65.7998 cv
204.145 67.0781 203.645 67.9829 203.464 69.1548 cv
cp
207.514 52.8423 mo
206.618 53.0166 206.652 55.499 206.618 56.3125 cv
206.184 55.3169 205.86 50.2246 205.702 49.1011 cv
206.618 52.2061 207.443 52.835 207.514 52.8423 cv
cp
208.324 43.813 mo
209.456 42.2314 212.797 42.626 214.057 42.8135 cv
215.928 43.0791 221.394 42.8345 222.061 45.0166 cv
222.735 49.3096 220.647 47.2881 218.263 45.8096 cv
217.086 45.062 213.843 43.3516 211.133 44.29 cv
210.432 44.2944 209.736 44.457 209.089 44.7788 cv
208.699 44.9805 208.376 45.269 208.089 45.584 cv
207.848 45.7549 207.599 45.9507 207.371 46.1777 cv
207.064 46.4917 206.81 46.853 206.618 47.2305 cv
206.81 46.0146 207.684 44.5654 208.324 43.813 cv
cp
212.447 37.9541 mo
213.135 37.667 214.12 37.29 215.389 37.1328 cv
216.653 36.9697 218.178 37.064 219.817 37.5444 cv
220.65 37.7646 221.501 38.1162 222.351 38.4458 cv
223.211 38.7402 224.116 39.0371 224.936 38.8115 cv
225.826 38.5605 226.691 38.0317 227.623 37.7539 cv
228.502 37.4404 229.398 37.2817 230.213 37.209 cv
231.879 37.0503 233.399 37.189 234.666 37.418 cv
235.905 37.6719 236.892 38.0303 237.552 38.3569 cv
238.219 38.6782 238.544 38.9922 238.544 38.9922 cv
238.544 38.9922 238.193 38.7461 237.515 38.5146 cv
236.841 38.291 235.851 38.0713 234.632 37.9482 cv
233.372 37.8486 231.879 37.8423 230.275 38.105 cv
229.455 38.229 228.636 38.4277 227.768 38.7358 cv
226.932 39.0195 226.087 39.5532 225.086 39.8579 cv
224.557 39.9922 224.044 39.9727 223.547 39.8682 cv
223.066 39.7563 222.622 39.5938 222.169 39.4219 cv
221.284 39.064 220.49 38.6729 219.682 38.4214 cv
218.098 37.8608 216.646 37.6318 215.41 37.6646 cv
214.173 37.6904 213.16 37.9355 212.479 38.1162 cv
211.797 38.3145 211.421 38.4678 211.421 38.4668 cv
211.422 38.4678 211.779 38.2656 212.447 37.9541 cv
cp
224.859 34.812 mo
227.108 34.812 228.927 34.9917 228.927 35.2183 cv
228.927 35.4443 227.108 35.624 224.859 35.624 cv
222.631 35.624 220.834 35.4443 220.834 35.2183 cv
220.834 34.9917 222.631 34.812 224.859 34.812 cv
cp
241.169 43.7256 mo
241.688 44.0288 242.576 45.6191 242.856 46.3535 cv
241.688 44.0288 239.58 44.1104 238.122 44.0752 cv
237.546 44.0645 233.031 44.6685 232.211 45.1855 cv
230.876 46.001 226.725 49.3306 227.401 45.0381 cv
228.065 42.8481 233.557 43.1011 235.381 42.8345 cv
236.663 42.647 240.016 42.1479 241.169 43.7256 cv
cp
244.556 49.1011 mo
244.421 50.2246 244.098 55.3169 243.663 56.3125 cv
243.606 55.499 243.663 53.0166 242.758 52.8423 cv
242.506 52.8423 li
242.872 52.2061 243.533 51.4038 243.533 51.4038 cv
244.23 50.1211 244.51 49.3335 244.556 49.1011 cv
cp
239.998 65.2275 mo
239.578 67.0073 239.945 68.7754 240.039 70.5679 cv
239.508 69.2246 238.717 67.4253 238.554 65.9878 cv
238.552 66.0054 238.546 66.0313 238.544 66.0571 cv
238.544 65.9277 li
238.546 65.9517 238.552 65.9775 238.554 65.9878 cv
238.781 63.9126 240.826 61.4937 241.677 59.5249 cv
241.752 61.4307 240.469 63.4175 239.998 65.2275 cv
cp
236.211 54.2998 mo
236.23 54.2051 232.177 54.9385 230.793 53.7114 cv
230.801 53.8105 230.805 53.8706 230.805 53.8911 cv
230.882 54.1758 230.979 54.2202 231.182 54.5737 cv
232.124 55.272 234.32 56.3892 235.277 56.6475 cv
234.666 56.5894 232.832 55.9492 232.211 55.7729 cv
232.211 55.8081 232.246 55.8247 232.284 55.8594 cv
232.211 55.8198 232.128 55.7676 232.023 55.71 cv
231.088 55.4229 230.182 54.936 229.63 54.0684 cv
229.638 54.0732 li
229.496 53.938 229.398 53.7939 229.314 53.6436 cv
229.089 53.3667 228.972 53.0474 228.929 52.7041 cv
228.909 52.7466 228.868 52.3154 228.868 52.3154 cv
228.856 52.2012 228.856 52.0942 228.864 51.9678 cv
229.061 48.457 236.99 46.5869 239.349 50.3374 cv
236.016 48.7422 231.039 49.2471 229.424 51.3052 cv
229.424 51.3052 236.303 48.2324 240.994 52.7217 cv
240.944 52.7891 240.841 52.8252 240.646 52.8394 cv
238.632 54.0239 238.632 54.0239 236.211 54.2998 cv
cp
234.153 77.9023 mo
234.153 77.9023 235.69 75.4766 235.767 73.5601 cv
235.868 71.9243 235.537 69.457 235.537 69.457 cv
238.311 73.6787 236.386 76.397 234.153 77.9023 cv
cp
230.213 61.606 mo
230.299 61.6641 229.575 59.5249 230.223 61.207 cv
229.575 59.5249 li
231.721 61.5 233.901 66.3193 234.852 68.8433 cv
234.864 68.8721 234.88 68.8994 234.892 68.9277 cv
234.888 68.9224 234.88 68.9141 234.878 68.9077 cv
234.88 68.9146 234.882 68.9214 234.884 68.9277 cv
234.803 68.8062 234.715 68.7065 234.666 68.6069 cv
234.651 68.5859 234.632 68.561 234.617 68.5376 cv
233.479 67.0396 231.766 65.5654 230.811 63.9673 cv
230.679 64.5381 230.238 64.8916 229.404 64.5625 cv
229.398 64.5439 li
228.34 64.542 228.001 64.356 227.317 65.0625 cv
227.317 65.0625 226.561 65.1396 226.463 64.9438 cv
225.329 62.3062 229.008 62.9976 229.64 63.832 cv
230.447 63.4707 230.447 62.4839 230.213 61.606 cv
cp
230.558 71.4839 mo
228.754 70.8799 226.785 71.6909 224.993 71.3555 cv
223.201 71.6909 221.524 71.145 219.721 71.7681 cv
218.454 72.5044 216.971 72.1904 216.121 70.8545 cv
219.004 71.2388 218.934 69.689 220.547 69.1782 cv
222.516 68.5654 223.454 69.8442 224.993 70.1113 cv
226.547 69.8442 227.471 68.5654 229.416 69.1782 cv
231.057 69.689 232.3 70.3794 234.05 70.5679 cv
232.914 71.7036 231.846 72.2402 230.558 71.4839 cv
cp
224.849 76.3687 mo
221.099 76.5483 218.338 75.7988 218.273 73.2275 cv
218.236 73.2231 218.248 73.2144 218.271 73.1953 cv
218.27 73.1567 218.263 73.1001 218.265 73.0376 cv
220.169 74.7075 223.418 74.4121 224.866 74.5913 cv
228.858 74.3999 230.532 74.3379 231.992 73.0376 cv
231.113 76.4497 228.338 76.2036 224.849 76.3687 cv
cp
228.227 85.4341 mo
227.196 85.4478 226.852 84.2451 225.883 84.3018 cv
224.607 84.3804 225.01 84.9663 224.077 85.4399 cv
223.152 85.8711 221.807 85.2954 220.877 85.0884 cv
220.664 84.9604 li
222.472 84.9346 224.133 82.9858 226.167 82.9858 cv
228.171 82.9858 228.572 84.3208 231.649 84.3208 cv
231.16 84.8799 228.915 85.4097 228.227 85.4341 cv
cp
214.722 69.457 mo
214.722 69.457 214.39 71.9243 214.493 73.5601 cv
214.59 75.4766 216.121 77.9023 216.121 77.9023 cv
213.896 76.397 211.946 73.6787 214.722 69.457 cv
cp
215.387 68.9277 mo
215.399 68.8994 215.415 68.8721 215.417 68.8433 cv
216.376 66.3193 218.676 61.5 220.82 59.5249 cv
220.873 59.4502 219.981 61.6641 220.044 61.606 cv
219.817 62.4839 219.813 63.4707 220.638 63.832 cv
221.27 62.9976 224.849 62.5688 223.893 64.9365 cv
223.796 65.1289 223.893 65.3184 223.677 65.1147 cv
223.594 65.9277 221.919 64.542 220.872 64.5439 cv
220.853 64.5625 li
220.018 64.8916 219.601 64.5381 219.443 63.9673 cv
218.514 65.5654 216.801 67.0396 215.663 68.5376 cv
215.645 68.561 215.626 68.5859 215.61 68.6069 cv
215.542 68.7065 215.454 68.8062 215.394 68.9277 cv
215.396 68.9214 215.399 68.9146 215.401 68.9077 cv
215.398 68.9141 215.391 68.9224 215.387 68.9277 cv
cp
209.066 52.8394 mo
208.848 52.8252 208.745 52.7891 208.704 52.7217 cv
213.343 48.2437 220.244 51.3052 220.244 51.3052 cv
218.65 49.2471 213.674 48.7422 210.325 50.3374 cv
214.722 46.5806 221.117 48.5801 220.822 52.3154 cv
220.822 52.3154 220.781 52.7466 220.762 52.7041 cv
220.717 53.0474 220.579 53.3667 220.374 53.6436 cv
220.296 53.7939 220.173 53.938 220.052 54.0732 cv
220.061 54.0684 li
219.485 54.936 218.604 55.4229 217.666 55.71 cv
217.562 55.7676 217.482 55.8198 217.383 55.8594 cv
217.423 55.8247 217.458 55.8081 217.496 55.7729 cv
216.859 55.9492 215.027 56.5894 214.411 56.6475 cv
215.368 56.3892 217.564 55.272 218.486 54.5737 cv
218.711 54.2202 218.787 54.1758 218.905 53.8911 cv
218.906 53.8706 218.91 53.8105 218.918 53.7114 cv
217.527 54.9385 213.459 54.2051 213.479 54.2998 cv
211.036 54.0239 211.036 54.0239 209.066 52.8394 cv
cp
211.421 66.0571 mo
211.418 66.0313 211.412 66.0054 211.41 65.9878 cv
211.269 67.4253 210.496 69.2246 209.947 70.5679 cv
210.037 68.7754 210.429 67.0073 209.974 65.2275 cv
209.518 63.4175 208.216 61.4307 208.331 59.5249 cv
209.16 61.4937 211.205 63.9126 211.41 65.9878 cv
211.412 65.9775 211.418 65.9517 211.421 65.9277 cv
211.421 66.0571 li
cp
246.397 65.7998 mo
246.697 64.332 247.995 61.6787 249.169 60.7363 cv
250.36 61.9565 250.076 63.9326 249.395 65.2192 cv
248.997 63.9395 247.151 62.6631 247.206 64.9434 cv
249.134 65.7471 248.864 67.374 247.328 68.2065 cv
248.895 69.6211 248.434 71.3647 246.98 72.6064 cv
246.816 72.2656 247.138 72.3545 247.167 72.2261 cv
246.977 72.0215 li
246.748 71.1821 246.975 70.0757 246.813 69.1548 cv
246.619 67.9829 246.138 67.0781 246.397 65.7998 cv
cp
205.12 73.8384 mo
205.181 74.0039 li
205.683 71.293 205.222 69.3477 204.852 65.0625 cv
204.246 58.0869 205.477 56.1943 205.477 56.1943 cv
203.636 61.4302 207.437 65.5376 207.156 70.6255 cv
207.025 72.7041 206.148 74.7441 206.096 76.9443 cv
206.599 79.2534 207.94 81.3267 209.834 82.7729 cv
208.742 79.4463 210.326 72.374 210.326 71.5649 cv
210.326 72.6841 210.139 82.9868 215.387 84.3208 cv
226.463 89.6504 236.072 83.6182 236.71 83.2788 cv
240.311 80.0098 240.118 76.1797 240.118 71.5649 cv
240.118 74.7983 241.352 78.7842 240.641 82.0684 cv
243.316 81.2393 243.583 76.77 243.56 73.2949 cv
243.372 72.4023 243.158 71.5195 243.104 70.6255 cv
242.821 65.5376 246.623 61.4302 244.803 56.1943 cv
244.803 56.1943 247.06 57.5571 245.85 64.439 cv
245.159 68.3037 244.575 71.293 245.1 74.0039 cv
245.161 73.8384 li
245.852 76.2725 248.342 74.0781 249.037 72.8672 cv
249.994 71.1895 249.789 69.3276 249.988 67.3906 cv
250.178 65.3394 250.838 63.6958 251.195 61.7798 cv
251.552 59.7095 250.525 59.1509 248.659 59.1196 cv
248.334 59.5024 248.044 59.7041 247.434 59.52 cv
248.219 56.9019 247.643 51.9658 247.329 49.2207 cv
246.695 42.8687 246.159 38.856 241.336 34.0791 cv
237.133 29.9224 227.95 26.9717 221.272 28.1816 cv
215.83 29.2524 211.858 31.1943 208.945 34.0791 cv
204.122 38.856 203.333 44.9585 202.7 51.311 cv
202.411 54.0679 202.058 56.9019 202.825 59.52 cv
202.216 59.7041 201.945 59.5024 201.621 59.1196 cv
199.733 59.1509 198.706 59.7095 199.075 61.7798 cv
199.427 63.6958 200.081 65.3394 200.29 67.3906 cv
200.481 69.3276 200.286 71.1895 201.243 72.8672 cv
201.938 74.0781 204.428 76.2725 205.12 73.8384 cv
cp
f
170.79 121.879 mo
171.843 120.671 173.069 119.819 174.074 118.738 cv
174.061 117.331 173.995 115.948 173.651 114.579 cv
174.224 115.38 174.988 115.856 175.691 116.301 cv
181.29 117.151 186.947 115.206 192.605 116.298 cv
195.261 116.82 197.669 117.432 200.481 117.258 cv
203.794 117.051 204.246 115.948 205.477 113.306 cv
205.878 115.07 204.39 116.694 203.297 117.871 cv
204.914 117.054 li
204.324 120.154 197.785 118.521 195.807 118.109 cv
191.438 117.21 187.443 116.86 183.1 117.701 cv
174.417 119.411 168.935 125.398 165.177 133.085 cv
166.43 129.389 168.233 124.827 170.79 121.879 cv
cp
221.752 116.463 mo
223.453 117.173 226.632 117.162 228.572 116.204 cv
228.116 119.919 222.679 120.99 221.752 116.85 cv
221.752 116.463 li
cp
244.803 113.306 mo
246.014 115.948 246.486 117.051 249.789 117.258 cv
252.602 117.432 255.02 116.82 257.653 116.298 cv
263.313 115.206 268.991 117.151 274.582 116.301 cv
275.289 115.856 276.057 115.38 276.606 114.579 cv
276.264 115.948 276.197 117.331 276.184 118.738 cv
277.209 119.819 278.415 120.671 279.468 121.879 cv
282.047 124.827 283.852 129.389 285.082 133.085 cv
281.346 125.398 275.843 119.411 267.159 117.701 cv
262.815 116.86 258.842 117.21 254.451 118.109 cv
252.494 118.521 245.936 120.154 245.345 117.054 cv
246.977 117.871 li
245.891 116.694 244.403 115.07 244.803 113.306 cv
cp
159.024 160.895 mo
160.966 160.97 162.822 158.766 164.983 157.283 cv
167.377 155.64 169.543 153.68 171.604 151.696 cv
173.983 149.383 175.648 146.556 177.935 144.254 cv
177.257 146.972 176.16 149.574 175.339 152.231 cv
174.854 153.813 174.275 155.386 174.026 157.018 cv
173.923 157.765 173.959 158.586 173.925 159.387 cv
174.118 159.724 174.315 160.073 174.506 160.427 cv
174.556 160.499 174.604 160.594 174.636 160.666 cv
174.816 160.995 174.972 161.328 175.117 161.658 cv
175.135 161.695 175.155 161.716 175.169 161.757 cv
175.318 162.091 175.456 162.43 175.583 162.776 cv
180.239 166.529 186.455 169.376 192.044 170.351 cv
191.826 170.344 191.593 170.326 191.361 170.304 cv
191.442 170.318 191.511 170.337 191.581 170.351 cv
191.468 170.35 191.341 170.345 191.229 170.343 cv
191.244 170.345 191.258 170.349 191.272 170.351 cv
185.643 170.315 181.849 169.085 176.923 167.695 cv
176.994 168.18 177.073 168.65 177.123 169.123 cv
177.142 169.242 177.157 169.384 177.174 169.504 cv
177.204 169.731 177.238 169.939 177.264 170.163 cv
186.738 173.956 210.719 174.274 219.362 165.376 cv
220.565 162.812 221.564 160.062 222.277 157.231 cv
222.755 154.024 222.839 150.764 222.574 147.62 cv
222.255 143.956 222.278 140.205 221.575 136.56 cv
221.043 133.918 221.048 132.759 219.743 130.432 cv
218.285 127.867 216.889 125.126 214.474 122.551 cv
215.022 122.959 217.001 123.185 220.428 127.69 cv
222.484 131.008 224.749 134.129 225.311 135.109 cv
225.883 134.129 231.18 125.177 235.909 122.798 cv
233.19 125.413 232.779 127.55 231.522 129.726 cv
230.215 132.052 229.221 133.918 228.695 136.56 cv
227.992 140.205 228.003 143.956 227.686 147.62 cv
227.421 150.764 227.525 154.024 227.992 157.231 cv
228.695 160.062 229.716 162.812 230.897 165.376 cv
239.563 174.274 263.521 173.956 272.996 170.163 cv
273.021 169.94 273.055 169.737 273.083 169.515 cv
273.101 169.389 273.118 169.241 273.138 169.116 cv
273.208 168.646 273.288 168.178 273.338 167.695 cv
268.414 169.085 264.616 170.315 258.986 170.351 cv
259.002 170.349 259.016 170.345 259.029 170.343 cv
258.932 170.345 258.813 170.35 258.679 170.351 cv
258.76 170.337 258.838 170.318 258.921 170.304 cv
258.667 170.326 258.456 170.344 258.228 170.351 cv
263.826 169.376 270.043 166.529 274.698 162.776 cv
274.803 162.432 274.962 162.096 275.103 161.764 cv
275.105 161.715 275.128 161.689 275.149 161.64 cv
275.314 161.32 275.445 160.995 275.622 160.676 cv
275.675 160.598 275.727 160.498 275.778 160.42 cv
275.946 160.068 276.148 159.722 276.355 159.387 cv
276.342 159.187 276.336 158.983 276.33 158.78 cv
276.318 158.189 276.328 157.578 276.232 157.018 cv
276.006 155.386 275.427 153.813 274.931 152.231 cv
274.099 149.574 273.002 146.972 272.325 144.254 cv
274.633 146.556 276.275 149.383 278.655 151.696 cv
280.728 153.68 282.882 155.64 285.289 157.283 cv
287.438 158.766 289.293 160.971 291.257 160.895 cv
292.116 160.861 293.023 160.367 293.995 159.122 cv
299.01 152.627 300.398 143.585 299.189 135.549 cv
298.358 130.048 295.074 123.873 290.914 120.063 cv
288.925 118.24 286.685 116.618 284.244 115.407 cv
283.232 114.895 282.066 114.276 281.001 113.893 cv
280.643 113.771 280.163 113.701 279.674 113.648 cv
279.286 113.668 278.844 113.849 278.433 114.369 cv
278.419 114.289 278.401 114.212 278.421 114.374 cv
278.259 113.959 278.113 113.538 277.916 113.142 cv
277.9 113.114 277.855 113.076 277.816 113.036 cv
277.816 112.9 li
277.642 112.583 277.495 112.265 277.293 111.956 cv
277.281 111.935 277.266 111.915 277.254 111.912 cv
276.727 110.995 276.084 110.152 275.352 109.359 cv
275.103 108.995 274.856 108.649 274.607 108.315 cv
271.82 105.153 267.95 101.993 264.163 99.6968 cv
257.867 95.9087 252.602 94.7432 248.958 94.4429 cv
249.425 99.1206 249.827 103.91 251.771 108.203 cv
248.373 103.502 248.273 97.3408 247.159 91.9297 cv
246.087 86.6992 245.632 80.2744 245.677 75.3149 cv
245.153 75.2793 245.677 75.3149 245.213 74.7983 cv
245.275 75.2222 245.327 75.6299 245.349 76.0415 cv
245.566 80.0107 244.133 83.3174 241.75 85.9297 cv
240.648 89.1387 239.68 92.5625 238.104 95.7529 cv
235.736 100.409 231.889 106.929 231.636 112.176 cv
231.632 107.884 232.302 104.09 234.214 100.171 cv
234.547 99.479 234.917 98.772 235.305 98.0664 cv
236.11 95.8076 237.479 88.9644 235.903 88.9644 cv
233.858 88.9644 229.346 95.3301 226.167 95.2134 cv
223.205 95.0869 222.63 94.6968 217.684 91.0557 cv
211.474 86.498 210.893 88.707 213.572 95.4336 cv
214.423 97.0557 215.322 98.6494 216.066 100.171 cv
217.956 104.09 218.628 107.884 218.622 112.176 cv
218.37 106.929 214.522 100.409 212.178 95.7529 cv
210.579 92.5625 209.622 89.1387 208.509 85.9297 cv
206.149 83.3174 204.714 80.0107 204.909 76.0415 cv
204.932 75.6299 204.982 75.2222 205.05 74.7983 cv
204.582 75.3149 205.127 75.2793 204.582 75.3149 cv
204.627 80.2744 204.171 86.6992 203.113 91.9297 cv
202.006 97.3408 201.908 103.502 198.51 108.203 cv
200.432 103.91 200.855 99.1206 201.323 94.4429 cv
197.673 94.7432 192.395 95.9087 186.118 99.6968 cv
182.455 101.923 178.715 104.933 175.956 107.995 cv
175.776 108.262 175.602 108.554 175.442 108.833 cv
174.552 109.705 173.763 110.674 173.112 111.726 cv
173.082 111.752 173.06 111.801 173.045 111.849 cv
172.835 112.189 172.64 112.538 172.465 112.9 cv
172.465 113.036 li
172.424 113.076 172.38 113.114 172.355 113.142 cv
172.169 113.538 172.002 113.959 171.839 114.374 cv
171.839 114.373 li
171.839 114.373 171.839 114.373 171.838 114.374 cv
171.858 114.212 171.84 114.289 171.825 114.369 cv
171.436 113.849 170.994 113.668 170.584 113.648 cv
170.097 113.701 169.639 113.771 169.282 113.893 cv
168.215 114.276 167.027 114.895 166.019 115.407 cv
163.597 116.618 161.335 118.24 159.354 120.063 cv
155.206 123.873 151.9 130.048 151.081 135.549 cv
149.881 143.585 151.263 152.627 156.286 159.122 cv
157.239 160.367 158.141 160.861 159.024 160.895 cv
cp
f
96.9048 297.151 mo
97.2695 298.66 97.6436 300.133 98.0151 301.656 cv
98.5962 303.909 99.1909 306.066 99.7739 308.212 cv
98.7871 304.473 97.8237 300.773 96.9048 297.151 cv
cp
f
72.3716 276.774 mo
72.3335 276.893 72.3579 276.949 72.3936 276.958 cv
72.3862 276.912 72.3789 276.844 72.3716 276.774 cv
cp
f
87.8916 249.116 mo
87.8916 249.065 87.894 249.02 87.8945 248.97 cv
87.8931 248.127 87.9019 248.12 87.939 247.23 cv
83.7612 248.299 79.6157 249.358 78.0474 249.764 cv
76.584 250.14 74.7329 257.323 74.0117 260.476 cv
74.0117 260.476 74.0117 260.476 74.0112 260.476 cv
76.8555 249.27 83.6323 250.404 87.8916 249.116 cv
cp
1 1 1 rgb
f
71.7368 266.647 mo
71.7329 266.439 71.73 266.264 71.728 266.085 cv
71.73 266.264 71.7329 266.439 71.7368 266.647 cv
71.7368 266.647 li
cp
.701961 .701961 .701961 rgb
f
106.613 234.449 mo
106.867 233.42 106.922 233.545 107.294 232.771 cv
93.332 236.356 li
93.2109 236.373 93.0757 236.43 92.9482 236.509 cv
92.9468 236.509 92.9463 236.51 92.9453 236.51 cv
92.8262 236.568 92.708 236.67 92.5698 236.771 cv
92.5688 236.773 92.5684 236.773 92.5669 236.773 cv
91.8442 237.438 91.1494 238.84 90.6753 241.166 cv
90.7925 241.113 90.1733 245.622 90.0005 247.474 cv
89.9897 247.713 89.9795 247.956 89.9717 248.209 cv
91.6694 234.891 101.339 235.77 106.613 234.449 cv
cp
1 1 1 rgb
f
141.796 289.48 mo
141.803 289.44 141.81 289.401 141.817 289.361 cv
141.77 289.189 141.751 288.968 141.718 288.79 cv
141.796 289.48 li
cp
.701961 .701961 .701961 rgb
f
136.316 284.34 mo
131.119 265.789 125.215 251.004 120.146 241.895 cv
128.63 259.444 132.098 271.284 135.129 284.625 cv
135.53 284.527 135.932 284.438 136.316 284.34 cv
cp
f
124.534 293.071 mo
124.664 293.497 124.796 293.968 124.926 294.436 cv
124.962 294.515 124.998 294.637 125.035 294.758 cv
128.059 294.067 131.104 293.335 134.194 292.697 cv
136.404 292.216 138.624 291.797 140.868 291.402 cv
141.098 289.692 141.419 288.154 141.517 287.242 cv
141.647 288.287 li
141.563 287.323 141.592 286.328 141.727 285.334 cv
135.965 286.473 130.263 287.8 124.592 289.215 cv
124.406 290.445 124.392 291.758 124.534 293.071 cv
cp
f
71.7446 267.127 mo
71.7407 266.951 71.7402 266.786 71.7368 266.647 cv
71.6836 266.879 71.6372 267.137 71.7446 267.127 cv
cp
f
138.255 299.037 mo
138.958 302.31 139.709 305.758 140.554 309.492 cv
141.27 313.828 142.063 318.353 142.996 323.143 cv
144.221 330.111 145.691 337.489 146.261 344.719 cv
146.321 342.511 146.267 339.919 146.091 336.928 cv
145.456 326.258 143.32 312.869 140.005 298.69 cv
139.42 298.789 138.833 298.928 138.255 299.037 cv
cp
f
125.732 333.902 mo
121.729 323.672 117.655 311.11 113.489 297.688 cv
110.917 289.369 108.896 280.756 107.49 272.535 cv
104.929 260.22 104.919 254.217 105.151 250.65 cv
105.148 250.565 105.148 250.483 105.146 250.399 cv
100.157 252.268 94.7021 253.429 90.126 255.893 cv
90.1309 255.933 90.1343 256.012 90.1392 256.096 cv
90.186 256.791 90.2422 257.502 90.2808 258.22 cv
90.3008 258.445 90.3228 258.715 90.3442 258.942 cv
90.3887 259.427 90.436 259.913 90.4644 260.428 cv
90.4937 260.707 90.5215 260.986 90.5527 261.27 cv
90.6069 261.785 90.6431 262.266 90.7026 262.791 cv
90.7739 263.389 90.8281 263.993 90.9087 264.647 cv
90.9458 264.926 90.9663 265.205 90.999 265.486 cv
91.0679 266.019 91.1401 266.512 91.1929 267.052 cv
91.2188 267.215 91.2471 267.423 91.2734 267.586 cv
91.4316 268.831 91.6025 270.054 91.791 271.342 cv
95.998 269.099 97.3955 268.094 102.914 266.032 cv
105.916 287.56 117.646 316.102 123.037 328.171 cv
127.333 339.583 131.944 349.183 136.206 354.433 cv
132.76 350.137 129.274 342.917 125.732 333.902 cv
cp
f
105.104 246.94 mo
100.005 247.714 95.1851 249.596 90.2979 251.226 cv
90.187 251.271 90.0825 251.298 89.9585 251.315 cv
89.9805 252.724 90.0415 254.219 90.126 255.893 cv
94.7021 253.429 100.157 252.268 105.146 250.399 cv
105.109 249.233 105.094 248.064 105.104 246.94 cv
cp
1 1 1 rgb
f
139.511 296.641 mo
139.875 296.592 140.239 296.503 140.603 296.418 cv
140.545 295.905 140.535 295.395 140.54 294.83 cv
138.699 295.25 136.848 295.7 135.019 296.199 cv
132.081 296.934 129.138 297.804 126.171 298.654 cv
126.384 299.003 126.613 299.311 126.835 299.564 cv
130.505 298.686 134.162 297.825 137.828 297.011 cv
137.829 297.019 137.831 297.026 137.833 297.035 cv
138.401 296.934 138.958 296.791 139.514 296.653 cv
139.513 296.649 139.512 296.645 139.511 296.641 cv
cp
.701961 .701961 .701961 rgb
f
218.959 53.6831 mo
218.934 53.6978 218.926 53.8062 218.914 53.8735 cv
218.933 53.8125 218.935 53.7451 218.959 53.6831 cv
cp
f
220.763 52.6006 mo
220.763 52.6016 li
220.767 52.6011 220.772 52.6001 220.776 52.5996 cv
220.771 52.6001 220.767 52.6001 220.763 52.6006 cv
cp
f
274.653 277.652 mo
274.646 277.659 274.637 277.659 274.629 277.677 cv
274.756 277.695 274.925 277.717 275.092 277.735 cv
274.925 277.69 274.764 277.659 274.653 277.652 cv
cp
f
72.4463 277.387 mo
72.4312 277.292 72.4165 277.152 72.4019 277.015 cv
72.3677 277.027 72.3335 277.044 72.2573 277.073 cv
67.5063 278.693 63.106 280.321 58.686 281.853 cv
58.5547 281.866 58.4292 281.894 58.2871 281.91 cv
58.2876 282.795 58.3745 284.043 58.4829 285.476 cv
63.3804 283.457 67.8213 281.872 72.7026 279.869 cv
72.6187 279.061 72.5181 278.262 72.4463 277.387 cv
cp
1 1 1 rgb
f
87.2397 335.466 mo
85.355 330.924 83.5835 326.017 81.9526 320.951 cv
80.3125 316.566 78.8135 311.749 77.4976 306.69 cv
77.3193 306.001 77.165 305.307 76.9985 304.614 cv
75.6719 299.441 74.6226 294.431 74.27 290.166 cv
73.605 286.41 73.1362 283.436 72.7554 280.286 cv
72.7373 280.134 72.7207 280.022 72.7026 279.869 cv
67.8213 281.872 63.3804 283.457 58.4829 285.476 cv
58.7568 288.719 59.2109 292.781 59.4507 295.022 cv
59.4507 295.022 59.9604 297.204 59.9604 297.205 cv
66.1763 294.584 70.4653 293.697 72.7642 292.302 cv
75.3799 302.7 80.1299 322.534 87.2412 335.47 cv
87.2412 335.47 87.2397 335.468 87.2397 335.466 cv
cp
.701961 .701961 .701961 rgb
f
96.0317 302.188 mo
92.3721 287.922 89.7949 274.159 88.6226 262.646 cv
83.9111 264.205 78.6211 265.775 73.8989 267.995 cv
74.0366 272.981 74.5781 278.795 75.5645 285.32 cv
77.8999 284.313 85.5806 280.54 87.939 279.59 cv
89.9585 293.428 105.798 336.442 109.478 342.32 cv
104.503 330.949 99.6724 316.342 96.0317 302.188 cv
cp
f
88.3657 260.065 mo
83.9351 261.247 74.2559 264.048 73.8652 263.956 cv
73.8384 265.216 73.853 266.572 73.8989 267.995 cv
78.6211 265.775 83.9111 264.205 88.6226 262.646 cv
88.5215 261.786 88.4487 260.894 88.3657 260.065 cv
cp
1 1 1 rgb
f
71.7275 266.085 mo
71.728 266.085 li
71.7212 265.458 71.7188 264.872 71.7271 264.3 cv
69.5522 264.839 67.4155 265.384 65.7368 265.808 cv
62.9072 266.534 li
61.3813 266.93 59.2495 272.177 58.3682 278.69 cv
58.3682 278.69 58.3682 278.691 58.3682 278.692 cv
61.0835 268.756 63.2715 267.251 71.7275 266.085 cv
cp
f
47.0527 302.288 mo
47.3618 296.296 47.5913 291.872 52.4556 291.173 cv
54.0601 290.474 53.6079 291.148 56.6777 290.424 cv
56.5435 289.322 56.5747 289.531 56.5044 288.476 cv
56.3984 288.505 56.3125 288.52 56.208 288.52 cv
53.8613 289.197 51.7388 289.791 50.8179 289.989 cv
47.1245 290.882 45.9385 297.088 47.1523 306.017 cv
47.1978 305.979 47.2554 305.944 47.3169 305.906 cv
47.1914 304.647 47.0908 303.44 47.0527 302.288 cv
cp
f
47.8516 309.677 mo
47.8521 309.676 47.8521 309.676 47.8521 309.676 cv
47.7646 309.213 47.689 308.772 47.6152 308.315 cv
47.689 308.772 47.7642 309.213 47.8516 309.677 cv
cp
.701961 .701961 .701961 rgb
f
48.0386 310.784 mo
47.9585 310.406 47.9019 310.046 47.8521 309.676 cv
47.8521 309.676 47.8521 309.676 47.8516 309.677 cv
47.9014 310.046 47.959 310.407 48.0386 310.784 cv
cp
f
47.6152 308.315 mo
47.5708 308.052 47.5493 307.804 47.5229 307.502 cv
47.4468 307.015 47.3726 306.481 47.3276 306.012 cv
47.3286 306.012 47.3296 306.011 47.3296 306.011 cv
47.3267 305.978 47.3203 305.94 47.3169 305.906 cv
47.2554 305.944 47.1978 305.979 47.1523 306.017 cv
47.3125 307.178 47.5356 308.45 47.77 309.712 cv
47.7964 309.699 47.8247 309.689 47.8516 309.677 cv
47.7642 309.213 47.689 308.772 47.6152 308.315 cv
cp
f
47.6152 308.315 mo
47.689 308.772 47.7646 309.213 47.8521 309.676 cv
51.3477 308.129 54.3721 305.563 58.2876 304.307 cv
58.1377 303.2 58.0161 302.068 57.9253 300.974 cv
54.5269 302.639 51.0625 304.207 47.646 305.879 cv
47.5459 305.941 47.4272 305.975 47.3301 306.011 cv
47.3735 306.481 47.4468 307.014 47.5229 307.502 cv
47.5493 307.804 47.5703 308.052 47.6152 308.315 cv
cp
1 1 1 rgb
f
62.9751 321.475 mo
61.8804 318.907 60.9048 316.057 60.0591 313.034 cv
59.2598 310.053 58.6675 307.111 58.2876 304.307 cv
54.3721 305.563 51.3477 308.129 47.8521 309.676 cv
47.9019 310.046 47.9585 310.406 48.0386 310.784 cv
47.959 310.407 47.9014 310.046 47.8516 309.677 cv
47.8247 309.689 47.7964 309.699 47.77 309.712 cv
48.1606 311.693 48.6318 313.775 49.2339 315.96 cv
49.3457 316.408 56.8423 313.492 58.2598 313.06 cv
60.0039 317.451 64.4805 327.674 67.5063 331.861 cv
65.7026 328.453 64.2148 324.916 62.9751 321.475 cv
cp
.701961 .701961 .701961 rgb
f
47.5229 307.502 mo
47.4468 307.014 47.3735 306.481 47.3301 306.011 cv
47.3301 306.011 47.3286 306.012 47.3276 306.012 cv
47.3726 306.481 47.4468 307.015 47.5229 307.502 cv
cp
f
159.165 289.907 mo
158.884 290.424 li
157.513 287.242 157.329 285.756 157.227 283.652 cv
157.058 280.478 158.095 279.358 157.993 276.19 cv
158.645 280.793 159.618 283.931 159.165 289.907 cv
cp
152.997 290.098 mo
152.524 289.072 152.955 285.831 153.335 283.146 cv
153.315 283.147 153.297 283.152 153.277 283.155 cv
153.384 282.402 153.526 281.658 153.611 280.996 cv
153.614 280.996 153.618 280.995 153.621 280.994 cv
153.666 280.681 153.706 280.391 153.724 280.106 cv
153.727 279.976 153.741 279.814 153.748 279.719 cv
153.894 277.022 153.894 277.022 153.209 271.679 cv
153.489 272.751 li
155.146 277.3 155.13 287.884 152.997 290.098 cv
cp
149.206 287.477 mo
150.012 285.027 150.103 282.796 150.067 280.472 cv
150.026 281.31 li
150.032 281.049 150.046 280.775 150.067 280.466 cv
150.037 278.538 149.925 276.576 150.041 274.433 cv
149.606 267.588 147.896 260.074 145.555 254.566 cv
148.416 259.774 151.077 267.356 151.296 272.194 cv
151.718 278.581 151.433 282.696 149.206 287.477 cv
cp
171.275 278.693 mo
170.374 276.261 168.998 273.372 167.443 271.349 cv
166.738 270.392 165.837 269.639 164.914 268.9 cv
163.648 267.487 162.26 265.9 161.55 264.856 cv
161.434 264.683 161.312 264.506 161.247 264.345 cv
161.18 265.517 161.146 266.654 161.156 267.744 cv
161.157 267.83 161.161 267.869 161.162 267.954 cv
161.169 268.434 161.179 268.89 161.203 269.323 cv
161.221 269.672 161.251 270.004 161.277 270.339 cv
161.277 270.534 161.281 270.694 161.299 270.888 cv
161.299 270.887 161.298 270.886 161.298 270.886 cv
161.298 270.886 161.298 270.887 161.298 270.888 cv
159.618 265.23 159.4 255.523 159.952 249.956 cv
160.319 246.222 161.627 241.913 161.681 237.902 cv
161.682 237.785 161.677 237.692 161.677 237.598 cv
161.677 237.359 161.679 237.121 161.669 236.902 cv
161.66 236.704 161.639 236.503 161.628 236.303 cv
161.628 236.178 161.627 236.029 161.613 235.904 cv
161.587 235.677 161.547 235.475 161.509 235.25 cv
161.492 235.15 161.48 235.037 161.46 234.944 cv
161.44 234.73 161.383 234.523 161.329 234.313 cv
161.3 234.211 161.279 234.098 161.269 233.984 cv
160.236 238.119 159.037 242.473 158.358 246.744 cv
157.655 251.134 158.682 255.885 156.004 259.563 cv
156.004 259.561 156.004 259.561 156.004 259.561 cv
156.004 259.561 156.004 259.561 156.004 259.563 cv
156.714 254.673 156.102 249.372 156.331 244.336 cv
156.567 238.646 158.533 233.388 159.654 227.829 cv
159.766 227.248 159.871 226.658 159.966 226.075 cv
159.997 225.906 160.025 225.738 160.052 225.571 cv
160.105 225.153 160.17 224.732 160.222 224.309 cv
160.229 224.143 160.253 223.975 160.274 223.811 cv
160.344 223.258 160.403 222.711 160.425 222.178 cv
160.426 222.178 160.427 222.178 160.427 222.175 cv
160.431 222.127 160.431 222.083 160.434 222.034 cv
160.476 221.477 160.508 220.936 160.523 220.388 cv
160.527 220.242 160.521 220.081 160.523 219.938 cv
160.527 219.634 160.525 219.333 160.522 219.023 cv
160.522 218.89 160.526 218.766 160.522 218.645 cv
160.517 218.423 160.497 218.206 160.487 217.984 cv
160.484 217.956 160.481 217.907 160.479 217.858 cv
160.465 217.551 160.453 217.244 160.428 216.92 cv
160.428 216.919 160.427 216.919 160.427 216.919 cv
160.406 216.677 160.392 216.419 160.365 216.182 cv
160.347 216.019 160.327 215.855 160.309 215.688 cv
160.294 215.529 160.281 215.389 160.261 215.249 cv
160.261 215.249 160.261 215.247 160.261 215.246 cv
160.224 214.983 160.192 214.708 160.147 214.45 cv
160.125 214.304 160.102 214.18 160.081 214.054 cv
160.056 213.904 160.052 213.753 160.025 213.584 cv
160.024 213.584 li
159.97 213.315 159.902 213.054 159.863 212.77 cv
159.801 212.504 159.746 212.215 159.698 211.95 cv
159.628 211.661 159.544 211.391 159.487 211.123 cv
159.462 211.023 159.436 210.947 159.413 210.846 cv
159.364 210.668 159.339 210.488 159.284 210.31 cv
159.284 210.308 159.283 210.308 159.283 210.308 cv
159.209 210.077 159.145 209.83 159.063 209.58 cv
159.046 209.545 159.03 209.489 159.013 209.432 cv
158.993 209.317 158.952 209.202 158.912 209.064 cv
158.87 208.942 158.829 208.819 158.805 208.676 cv
158.71 208.426 158.627 208.156 158.525 207.904 cv
158.509 207.858 158.494 207.811 158.478 207.787 cv
158.405 207.537 158.318 207.287 158.24 207.057 cv
158.24 207.057 158.239 207.055 158.239 207.053 cv
158.119 206.752 158.008 206.46 157.9 206.174 cv
157.893 206.153 157.885 206.136 157.878 206.116 cv
157.775 205.873 157.701 205.653 157.593 205.409 cv
157.592 205.407 157.592 205.407 157.592 205.407 cv
157.462 205.081 157.32 204.752 157.182 204.426 cv
157.174 204.408 157.167 204.391 157.16 204.374 cv
157.06 204.163 156.987 203.953 156.888 203.761 cv
156.73 203.414 156.565 203.063 156.402 202.713 cv
156.386 202.683 156.371 202.65 156.356 202.615 cv
156.284 202.437 156.194 202.258 156.119 202.077 cv
155.934 201.69 155.734 201.313 155.537 200.93 cv
155.458 200.752 155.365 200.578 155.284 200.4 cv
153.93 199.055 149.872 194.712 148.504 193.564 cv
149.008 193.65 150.576 194.931 151.997 196.079 cv
151.997 196.08 151.998 196.08 152 196.082 cv
152.404 196.335 152.794 196.592 153.173 196.889 cv
153.191 196.912 153.211 196.933 153.242 196.936 cv
153.61 197.228 153.97 197.512 154.324 197.807 cv
154.328 197.77 154.342 197.714 154.35 197.655 cv
154.354 197.636 154.359 197.619 154.363 197.592 cv
154.367 197.563 154.37 197.536 154.376 197.507 cv
154.376 197.507 154.376 197.507 154.376 197.506 cv
154.394 197.447 154.421 197.367 154.428 197.286 cv
154.428 197.286 li
154.44 197.269 154.446 197.234 154.46 197.2 cv
153.894 195.88 153.491 194.481 153.502 192.941 cv
153.535 193.007 153.543 193.077 153.574 193.124 cv
153.574 193.124 153.575 193.124 153.575 193.124 cv
153.543 192.927 153.52 192.733 153.483 192.547 cv
153.624 192.848 153.759 193.161 153.895 193.48 cv
153.95 193.6 154.006 193.717 154.062 193.826 cv
154.134 194.029 154.23 194.233 154.302 194.441 cv
154.65 195.287 155.005 196.175 155.399 197.074 cv
155.844 197.857 156.799 199.14 157.275 199.922 cv
157.505 200.141 157.733 200.365 157.942 200.6 cv
157.942 200.603 157.942 200.605 157.942 200.608 cv
158.155 200.706 158.368 200.792 158.581 200.868 cv
158.645 200.893 158.705 200.917 158.778 200.94 cv
158.931 200.976 159.083 201.024 159.234 201.063 cv
159.307 201.081 159.359 201.1 159.432 201.114 cv
159.637 201.142 159.841 201.166 160.043 201.181 cv
160.051 201.182 160.052 201.183 160.052 201.184 cv
160.064 201.185 160.083 201.183 160.103 201.184 cv
160.309 201.194 160.513 201.194 160.715 201.177 cv
160.783 201.171 160.87 201.153 160.937 201.143 cv
161.092 201.141 161.225 201.127 161.355 201.098 cv
161.456 201.076 161.534 201.047 161.628 201.022 cv
161.751 200.985 161.869 200.962 161.985 200.926 cv
162.088 200.892 162.169 200.85 162.271 200.811 cv
162.382 200.781 162.513 200.73 162.623 200.669 cv
162.705 200.622 162.807 200.593 162.888 200.54 cv
163.017 200.475 163.124 200.427 163.229 200.354 cv
163.331 200.294 163.41 200.255 163.51 200.193 cv
163.615 200.112 163.738 200.049 163.845 199.961 cv
163.921 199.91 164.02 199.847 164.095 199.773 cv
164.222 199.7 164.326 199.599 164.441 199.517 cv
164.522 199.441 164.615 199.387 164.686 199.31 cv
164.795 199.21 164.923 199.097 165.029 198.999 cv
165.114 198.921 165.177 198.859 165.26 198.786 cv
165.382 198.665 165.503 198.516 165.645 198.388 cv
165.688 198.336 165.754 198.276 165.819 198.205 cv
166.001 198.003 166.181 197.807 166.358 197.6 cv
166.381 197.546 166.425 197.488 166.47 197.454 cv
166.602 197.284 166.733 197.106 166.883 196.935 cv
166.936 196.848 167.007 196.755 167.079 196.67 cv
167.177 196.531 167.275 196.392 167.393 196.234 cv
167.449 196.136 167.527 196.042 167.604 195.93 cv
167.691 195.792 167.786 195.656 167.884 195.516 cv
167.956 195.396 168.018 195.296 168.096 195.182 cv
168.176 195.036 168.278 194.895 168.357 194.753 cv
168.434 194.649 168.489 194.525 168.563 194.42 cv
168.66 194.277 168.737 194.129 168.834 193.967 cv
168.886 193.861 168.96 193.755 169.012 193.626 cv
169.105 193.478 169.192 193.33 169.271 193.179 cv
169.34 193.074 169.387 192.948 169.455 192.842 cv
169.544 192.685 169.622 192.526 169.714 192.368 cv
169.755 192.248 169.817 192.148 169.878 192.028 cv
169.955 191.854 170.051 191.68 170.125 191.505 cv
170.177 191.42 170.23 191.326 170.259 191.229 cv
170.376 191.007 170.468 190.795 170.58 190.585 cv
170.599 190.527 170.613 190.468 170.64 190.432 cv
170.769 190.153 170.889 189.896 170.997 189.619 cv
171.036 189.552 171.072 189.465 171.11 189.392 cv
171.178 189.209 171.268 189.02 171.332 188.835 cv
171.378 188.724 171.422 188.638 171.467 188.529 cv
171.52 188.367 171.594 188.206 171.653 188.047 cv
171.69 187.952 171.734 187.836 171.78 187.743 cv
171.825 187.595 171.889 187.448 171.953 187.29 cv
171.997 187.185 172.018 187.091 172.061 186.976 cv
172.12 186.838 172.175 186.701 172.213 186.567 cv
172.255 186.451 172.296 186.357 172.337 186.243 cv
172.369 186.112 172.421 185.986 172.472 185.86 cv
172.509 185.751 172.527 185.663 172.561 185.556 cv
172.611 185.429 172.659 185.308 172.705 185.185 cv
172.716 185.086 172.75 185.008 172.781 184.91 cv
172.827 184.786 172.871 184.665 172.892 184.53 cv
172.919 184.463 172.948 184.373 172.974 184.31 cv
173.018 184.163 173.059 184.045 173.077 183.928 cv
173.097 183.858 173.119 183.786 173.138 183.739 cv
173.195 183.56 173.23 183.388 173.274 183.229 cv
173.422 182.645 173.573 182.063 173.689 181.506 cv
173.69 181.504 173.69 181.502 173.691 181.499 cv
173.729 181.33 173.762 181.169 173.776 181.015 cv
173.862 180.634 173.933 180.276 173.99 179.899 cv
174 179.84 174.013 179.781 174.023 179.744 cv
174.023 179.744 li
174.053 179.577 174.083 179.407 174.111 179.249 cv
174.144 178.939 174.186 178.631 174.233 178.322 cv
174.26 178.136 174.285 177.949 174.295 177.763 cv
174.295 177.762 174.295 177.759 174.296 177.757 cv
174.304 177.687 174.315 177.64 174.322 177.571 cv
174.352 177.321 174.367 177.095 174.392 176.845 cv
174.427 176.489 174.466 176.132 174.471 175.779 cv
174.473 175.754 174.473 175.73 174.475 175.72 cv
174.512 175.165 174.533 174.605 174.541 174.044 cv
174.542 173.967 174.542 173.896 174.543 173.81 cv
174.546 173.447 174.535 173.095 174.527 172.744 cv
174.522 172.556 174.526 172.361 174.518 172.169 cv
174.517 172.148 174.517 172.127 174.516 172.106 cv
174.466 170.911 174.367 169.724 174.21 168.537 cv
174.021 168.169 li
174.078 168.211 174.118 168.269 174.176 168.331 cv
174.096 167.677 173.977 167.048 173.863 166.421 cv
173.754 165.802 173.605 165.202 173.464 164.593 cv
173.458 164.564 173.453 164.533 173.445 164.502 cv
173.44 164.5 173.435 164.484 173.43 164.463 cv
173.429 164.46 173.428 164.456 173.427 164.453 cv
173.346 164.074 173.23 163.698 173.134 163.322 cv
173.08 163.145 173.054 162.968 172.998 162.791 cv
172.96 162.679 172.922 162.568 172.882 162.436 cv
172.882 162.435 li
172.712 161.872 172.531 161.288 172.354 160.706 cv
168.924 160.645 163.97 162.185 161.528 163.896 cv
157.206 166.945 158.35 171.087 155.921 175.097 cv
155.921 175.097 155.921 175.097 155.921 175.096 cv
155.92 175.097 155.92 175.097 155.92 175.098 cv
156.127 170.815 157.328 166.31 155.084 162.341 cv
154.807 161.874 154.545 161.403 154.261 160.954 cv
154.246 160.912 154.233 160.871 154.208 160.828 cv
153.931 160.395 153.674 159.943 153.395 159.517 cv
153.136 159.071 152.856 158.631 152.601 158.19 cv
152.559 158.13 152.516 158.06 152.488 158.012 cv
152.237 157.586 151.983 157.159 151.755 156.751 cv
151.716 156.681 151.676 156.617 151.637 156.564 cv
151.413 156.134 151.174 155.723 150.945 155.284 cv
150.912 155.219 150.899 155.174 150.865 155.108 cv
150.636 154.682 150.415 154.23 150.208 153.789 cv
150.205 153.735 150.182 153.679 150.158 153.633 cv
149.947 153.167 149.748 152.702 149.569 152.223 cv
149.558 152.194 149.548 152.164 149.538 152.134 cv
149.377 151.703 149.238 151.236 149.109 150.783 cv
149.002 150.458 148.92 150.126 148.83 149.777 cv
148.825 149.772 148.819 149.753 148.814 149.731 cv
148.811 149.714 148.805 149.697 148.802 149.68 cv
148.27 151.52 146.602 154.428 146.669 156.124 cv
146.225 155.389 146.139 154.314 146.197 153.111 cv
146.197 153.111 li
146.142 152.577 146.137 151.998 146.167 151.402 cv
146.169 151.371 146.171 151.357 146.174 151.331 cv
146.192 151.145 146.215 150.958 146.244 150.77 cv
146.252 150.708 146.264 150.657 146.272 150.607 cv
146.317 150.335 146.35 150.084 146.413 149.81 cv
146.451 149.655 146.49 149.499 146.513 149.344 cv
146.539 149.253 146.567 149.15 146.595 149.064 cv
146.671 148.802 146.73 148.553 146.819 148.306 cv
146.718 148.419 146.639 148.551 146.539 148.669 cv
146.486 148.747 146.412 148.848 146.341 148.927 cv
146.187 149.145 146.04 149.366 145.895 149.586 cv
145.892 149.591 145.89 149.595 145.886 149.599 cv
145.814 149.684 145.762 149.776 145.689 149.874 cv
145.688 149.876 145.688 149.877 145.686 149.879 cv
145.533 150.121 145.387 150.348 145.242 150.597 cv
145.217 150.637 145.193 150.657 145.169 150.693 cv
145.138 150.743 145.106 150.792 145.098 150.828 cv
144.903 151.164 144.718 151.493 144.546 151.831 cv
142.864 155.143 142.223 159.019 141.325 162.598 cv
139.916 168.251 137.763 177.184 139.708 183.167 cv
139.816 182.229 139.932 181.099 140.155 179.927 cv
140.164 179.885 140.171 179.835 140.181 179.784 cv
140.184 179.694 140.206 179.582 140.23 179.492 cv
140.263 179.35 140.295 179.21 140.332 179.055 cv
140.351 178.989 140.364 178.91 140.37 178.852 cv
140.418 178.68 140.464 178.506 140.517 178.336 cv
140.535 178.251 140.547 178.174 140.571 178.106 cv
141.193 176.022 142.241 174.136 144.17 173.475 cv
144.84 168.474 146.638 163.049 146.664 157.999 cv
146.664 158.02 146.662 158.044 146.662 158.077 cv
146.662 158.074 146.662 158.071 146.662 158.068 cv
146.663 158.038 146.665 158.02 146.665 157.999 cv
146.632 167.113 145.717 176.208 145.868 185.473 cv
145.868 185.472 145.868 185.471 145.867 185.47 cv
145.867 185.473 li
145.711 185.047 145.578 184.641 145.456 184.211 cv
144.583 181.269 144.402 178.245 143.428 175.305 cv
140.728 178.137 140.068 182.578 139.448 186.914 cv
139.303 189.055 138.831 191.217 138.255 193.284 cv
138.255 193.298 138.255 193.313 138.254 193.326 cv
137.824 194.831 137.348 196.273 136.861 197.648 cv
135.336 202.132 135.681 207.106 136.189 211.727 cv
137.352 222.131 142.025 229.495 146.199 238.93 cv
146.198 238.93 146.198 238.93 146.197 238.93 cv
146.198 238.93 li
142.536 235.924 140.685 230.122 138.693 225.944 cv
136.234 232.518 138.98 243.421 141.528 249.459 cv
141.601 249.642 141.701 249.877 141.779 250.069 cv
141.901 250.316 142.003 250.612 142.122 250.87 cv
142.144 250.955 142.179 251.013 142.215 251.08 cv
142.219 251.089 142.222 251.098 142.226 251.105 cv
142.244 251.148 142.262 251.191 142.28 251.235 cv
142.424 251.585 142.569 251.943 142.715 252.31 cv
142.745 252.382 142.775 252.415 142.805 252.483 cv
142.966 252.886 143.128 253.298 143.291 253.719 cv
143.301 253.745 143.312 253.77 143.323 253.797 cv
143.34 253.817 li
143.346 253.817 143.347 253.827 143.347 253.841 cv
143.528 254.294 143.699 254.755 143.874 255.22 cv
143.88 255.236 143.896 255.293 143.918 255.35 cv
144.098 255.848 144.275 256.309 144.445 256.818 cv
144.449 256.829 144.452 256.838 144.455 256.848 cv
145.53 259.935 146.377 263.236 146.475 266.307 cv
146.475 266.308 146.475 266.309 146.475 266.309 cv
146.476 266.356 146.476 266.402 146.477 266.439 cv
146.477 266.439 li
146.486 266.786 146.486 267.14 146.47 267.487 cv
146.47 267.487 li
146.516 269.695 146.445 271.849 145.549 275.499 cv
145.339 276.809 144.953 278.314 144.305 280.096 cv
144.105 281.128 143.941 282.218 143.814 283.367 cv
143.982 286.653 144.181 290.164 143.342 293.079 cv
143.242 294.199 143.193 295.322 143.528 296.298 cv
143.7 296.479 143.897 296.592 144.112 296.695 cv
144.37 296.764 144.805 296.846 145.31 296.93 cv
144.174 295.039 145.231 291.868 146.261 289.58 cv
146.29 289.542 146.341 294.853 146.362 294.828 cv
146.385 295.469 146.525 295.924 146.754 296.256 cv
146.787 296.232 146.822 296.232 146.854 296.215 cv
146.863 296.282 146.903 296.394 146.94 296.506 cv
147.65 297.205 148.88 296.825 149.826 295.581 cv
151.455 294.077 152.997 297.506 156.513 296.468 cv
159.214 293.301 161.451 295.73 163.165 295.411 cv
163.49 295.341 163.765 295.258 164.04 295.19 cv
164.169 295.084 164.317 294.942 164.523 294.816 cv
165.13 294.354 165.656 293.96 166.118 293.617 cv
166.483 292.831 166.446 291.945 166.583 291.066 cv
166.551 290.2 166.198 280.464 164.821 275.261 cv
165.437 275.983 166.076 276.459 166.682 277.659 cv
166.811 278.147 166.93 278.696 167.057 279.272 cv
169.638 279.061 169.872 279.02 170.477 278.851 cv
170.674 278.798 170.914 278.734 171.275 278.693 cv
cp
f
278.163 278.771 mo
267.226 277.726 254.112 277.435 244.38 277.403 cv
238.074 277.141 231.775 276.978 225.514 276.978 cv
205.976 276.978 186.654 278.324 167.684 280.898 cv
167.938 282.124 168.141 283.625 168.329 285.613 cv
168.489 286.297 168.635 287.026 168.792 287.756 cv
168.794 287.762 168.795 287.767 168.796 287.772 cv
179.012 286.753 200.37 284.855 216.073 284.499 cv
219.023 284.557 221.989 284.672 224.942 284.83 cv
223.893 284.928 222.795 285.014 221.61 285.087 cv
205.433 285.857 181.152 287.849 169.249 289.583 cv
169.377 290.056 169.541 290.508 169.706 290.922 cv
169.715 290.941 169.744 290.962 169.766 290.978 cv
169.755 290.982 169.746 290.982 169.736 291 cv
169.771 291.083 169.809 291.164 169.847 291.245 cv
169.85 291.253 169.853 291.261 169.857 291.269 cv
172.005 290.97 174.18 290.642 176.363 290.379 cv
176.359 290.367 176.355 290.356 176.351 290.345 cv
176.746 290.287 177.156 290.271 177.569 290.213 cv
177.563 290.226 177.556 290.238 177.55 290.25 cv
184.165 289.423 190.84 288.764 197.565 288.228 cv
196.536 288.245 li
206.562 287.472 216.611 287.009 226.643 286.901 cv
226.62 286.901 226.595 286.899 226.586 286.898 cv
226.586 286.897 li
226.586 286.897 li
226.654 286.857 227.298 286.854 228.441 286.888 cv
232.479 286.864 236.475 286.901 240.512 287.008 cv
252.198 287.2 263.85 287.857 275.283 288.972 cv
276.852 289.204 278.436 289.404 280.025 289.613 cv
280.147 289.12 280.394 288.54 280.673 288.051 cv
256.082 286.3 242.271 285.561 232.861 285.373 cv
226.157 284.923 li
226.185 284.921 226.214 284.918 226.229 284.916 cv
226.229 284.916 li
229.295 284.697 232.649 284.571 236.71 284.498 cv
238.368 284.481 240.077 284.47 241.817 284.462 cv
250.943 284.491 263.221 284.951 281.41 286.178 cv
281.432 286.038 281.461 285.856 281.508 285.715 cv
281.747 282.91 282.005 280.843 282.309 279.346 cv
282.309 279.343 282.309 279.34 282.31 279.338 cv
282.055 279.297 281.773 279.262 281.502 279.222 cv
280.377 279.061 279.292 278.931 278.163 278.771 cv
cp
f
344.858 248.51 mo
344.853 248.672 344.852 248.871 344.846 249.035 cv
345.056 252.645 345.055 258.647 342.513 270.958 cv
341.103 279.137 339.088 287.796 336.509 296.115 cv
332.363 309.543 328.264 322.111 324.28 332.343 cv
320.741 341.352 317.257 348.522 313.775 352.859 cv
318.031 347.592 322.665 337.965 326.96 326.596 cv
332.373 314.48 344.059 285.988 347.106 264.416 cv
352.602 266.478 353.999 267.487 358.206 269.727 cv
358.414 268.478 358.566 267.212 358.748 266.009 cv
358.773 265.806 358.775 265.646 358.781 265.443 cv
358.855 264.94 358.93 264.397 358.999 263.904 cv
359.036 263.634 359.071 263.333 359.106 263.071 cv
359.147 262.421 359.227 261.778 359.302 261.144 cv
359.357 260.65 359.414 260.156 359.465 259.715 cv
359.478 259.416 359.483 259.077 359.515 258.781 cv
359.56 258.328 359.607 257.837 359.65 257.351 cv
359.674 257.112 359.695 256.872 359.719 256.622 cv
359.776 255.92 359.82 255.215 359.836 254.519 cv
359.838 254.496 359.839 254.471 359.84 254.444 cv
354.544 252.501 349.643 250.947 344.858 248.51 cv
cp
f
308.35 286.711 mo
308.492 285.67 li
308.574 286.537 308.878 288.122 309.15 289.831 cv
311.351 290.226 313.592 290.623 315.823 291.081 cv
318.895 291.719 321.933 292.451 324.983 293.143 cv
325.02 293.06 325.025 292.935 325.051 292.81 cv
325.202 292.385 325.356 291.919 325.464 291.452 cv
325.605 290.183 325.592 288.872 325.384 287.597 cv
319.742 286.19 314.056 284.907 308.27 283.721 cv
308.406 284.714 308.456 285.715 308.35 286.711 cv
cp
f
303.597 158.03 mo
303.597 158.02 303.595 158.016 303.595 157.999 cv
303.595 158.018 303.597 158.021 303.597 158.044 cv
303.597 158.039 303.597 158.035 303.597 158.03 cv
cp
f
303.955 347.103 mo
303.916 346.376 303.85 345.577 303.803 344.693 cv
303.85 345.578 303.916 346.376 303.955 347.103 cv
cp
f
323.824 297.037 mo
320.836 296.23 317.938 295.357 314.977 294.582 cv
313.134 294.127 311.305 293.678 309.456 293.242 cv
309.47 293.787 309.452 294.34 309.395 294.83 cv
309.757 294.898 310.121 294.981 310.485 295.071 cv
310.47 295.13 310.456 295.189 310.442 295.204 cv
311 295.323 311.596 295.446 312.14 295.531 cv
312.149 295.524 312.161 295.477 312.171 295.432 cv
315.855 296.232 319.493 297.069 323.16 297.991 cv
323.383 297.695 323.619 297.387 323.824 297.037 cv
cp
f
303.928 335.356 mo
303.729 338.304 303.677 340.9 303.735 343.148 cv
304.283 335.873 305.775 328.496 307.013 321.526 cv
307.935 316.785 308.727 312.258 309.442 307.882 cv
310.262 304.207 311.018 300.772 311.714 297.505 cv
311.152 297.365 310.589 297.27 309.978 297.131 cv
306.693 311.316 304.552 324.655 303.928 335.356 cv
cp
f
308.275 287.185 mo
308.244 287.403 308.204 287.575 308.157 287.789 cv
308.163 287.818 308.171 287.826 308.179 287.863 cv
308.275 287.185 li
cp
f
329.869 240.283 mo
324.781 249.389 318.877 264.219 313.685 282.773 cv
314.085 282.87 314.478 282.916 314.843 283.013 cv
317.902 269.672 321.365 257.874 329.869 240.283 cv
cp
f
299.956 272.817 mo
300.055 274.962 299.96 276.958 299.929 278.889 cv
299.95 279.158 299.964 279.432 299.993 279.736 cv
299.929 278.899 li
299.894 281.18 300.007 283.455 300.77 285.883 cv
298.58 281.125 298.299 276.965 298.679 270.622 cv
298.94 265.74 301.58 258.185 304.442 252.994 cv
302.121 258.46 300.414 266.016 299.956 272.817 cv
cp
297 288.52 mo
294.86 286.311 294.827 275.688 296.53 271.138 cv
296.787 270.064 li
296.113 275.45 296.113 275.45 296.227 278.103 cv
296.234 278.243 296.248 278.362 296.264 278.534 cv
296.291 278.777 296.332 279.071 296.379 279.403 cv
296.381 279.403 296.385 279.403 296.387 279.403 cv
296.495 280.1 296.591 280.806 296.72 281.547 cv
296.702 281.544 296.683 281.542 296.663 281.538 cv
297.043 284.267 297.472 287.477 297 288.52 cv
cp
292.77 282.08 mo
292.682 284.184 292.485 285.67 291.113 288.852 cv
290.853 288.291 li
290.378 282.315 291.339 279.177 291.982 274.573 cv
291.924 277.741 292.954 278.905 292.77 282.08 cv
cp
306.183 281.796 mo
306.041 280.645 305.891 279.511 305.68 278.478 cv
305.021 276.696 304.637 275.196 304.448 273.882 cv
303.57 270.275 303.481 268.122 303.548 265.891 cv
303.532 265.542 303.532 265.19 303.542 264.833 cv
303.542 264.787 303.542 264.74 303.544 264.692 cv
303.628 260.597 305.115 256.13 306.68 252.224 cv
306.695 252.182 li
307.065 251.27 307.435 250.355 307.789 249.531 cv
307.789 249.523 307.789 249.516 307.789 249.507 cv
308.026 248.917 308.244 248.384 308.491 247.855 cv
310.994 241.851 313.775 230.941 311.305 224.35 cv
309.31 228.528 307.447 234.33 303.799 237.337 cv
303.799 237.336 303.799 237.336 303.799 237.336 cv
303.799 237.336 303.799 237.336 303.797 237.337 cv
306.699 230.797 309.826 225.267 311.853 219.023 cv
312.257 218.514 312.65 218.002 313.044 217.493 cv
313.063 217.436 313.072 217.361 313.072 217.282 cv
313.169 216.913 313.265 216.51 313.361 216.111 cv
313.416 215.701 313.508 215.308 313.596 214.889 cv
313.684 214.469 313.771 214.071 313.805 213.64 cv
313.913 213.023 314.011 212.371 314.092 211.727 cv
314.578 207.106 314.923 202.132 313.414 197.648 cv
312.933 196.273 312.435 194.831 312.008 193.326 cv
312.008 193.313 312.008 193.298 312.008 193.284 cv
311.427 191.217 310.963 189.055 310.834 186.914 cv
310.789 186.631 310.745 186.371 310.7 186.088 cv
310.602 185.379 310.501 184.67 310.365 183.969 cv
310.141 182.613 309.863 181.29 309.458 180.036 cv
309.431 179.949 309.406 179.882 309.377 179.796 cv
309.35 179.734 309.318 179.652 309.289 179.577 cv
309.223 179.406 309.195 179.233 309.131 179.07 cv
308.97 178.704 308.835 178.351 308.644 177.996 cv
308.592 177.889 308.545 177.801 308.492 177.696 cv
308.492 177.644 308.454 177.573 308.416 177.501 cv
308.322 177.351 308.231 177.199 308.15 177.055 cv
308.121 176.961 308.059 176.894 308.001 176.8 cv
307.911 176.683 307.828 176.563 307.776 176.426 cv
307.755 176.415 307.727 176.385 307.704 176.352 cv
307.568 176.183 307.447 176.016 307.328 175.856 cv
307.271 175.786 307.208 175.72 307.149 175.672 cv
307.075 175.549 306.958 175.415 306.832 175.305 cv
305.719 178.673 305.678 182.132 304.392 185.473 cv
304.392 185.472 304.392 185.471 304.392 185.47 cv
304.392 185.471 304.392 185.472 304.392 185.473 cv
304.564 176.208 303.626 167.113 303.595 157.999 cv
303.62 163.049 305.419 168.474 306.087 173.475 cv
309.645 174.668 310.256 180.08 310.573 183.167 cv
310.602 182.991 310.64 182.803 310.698 182.622 cv
310.761 182.414 310.832 182.214 310.887 182.023 cv
310.914 181.902 310.932 181.797 310.957 181.68 cv
310.98 181.389 311.049 181.105 311.102 180.806 cv
311.117 180.701 311.123 180.611 311.139 180.501 cv
311.186 180.185 311.235 179.866 311.265 179.539 cv
311.272 179.451 311.274 179.382 311.28 179.294 cv
311.407 177.217 311.305 174.989 310.992 172.753 cv
310.965 172.568 310.963 172.394 310.949 172.214 cv
310.906 171.934 310.865 171.665 310.816 171.377 cv
310.779 171.162 310.737 170.967 310.698 170.751 cv
310.653 170.499 310.609 170.266 310.602 170.016 cv
310.224 167.88 309.737 165.844 309.285 164.029 cv
309.193 163.54 309.06 163.065 308.935 162.598 cv
308.059 159.019 307.418 155.143 305.713 151.831 cv
305.563 151.493 305.356 151.165 305.185 150.828 cv
305.183 150.828 li
305.125 150.745 305.063 150.657 305.004 150.577 cv
304.887 150.335 304.724 150.116 304.596 149.881 cv
304.52 149.776 304.44 149.678 304.362 149.587 cv
304.362 149.584 304.358 149.581 304.356 149.577 cv
304.295 149.489 304.273 149.423 304.216 149.337 cv
304.113 149.211 304.012 149.075 303.932 148.938 cv
303.867 148.846 303.783 148.732 303.7 148.641 cv
303.659 148.587 303.62 148.551 303.58 148.502 cv
303.569 148.428 303.515 148.373 303.46 148.305 cv
303.46 148.305 li
304.214 150.657 303.223 154.646 302.181 156.359 cv
302.145 155.511 302.164 154.442 302.146 153.368 cv
302.146 153.368 li
302.146 153.367 302.146 153.366 302.146 153.364 cv
302.1 152.879 302.026 152.385 301.936 151.879 cv
301.905 151.708 301.874 151.529 301.839 151.358 cv
301.822 151.185 301.806 151.012 301.763 150.84 cv
301.667 150.463 301.56 150.066 301.461 149.68 cv
301.338 150.232 301.169 150.764 301.028 151.284 cv
301.009 151.344 300.991 151.383 300.974 151.442 cv
300.974 151.443 300.974 151.443 300.972 151.444 cv
300.905 151.627 300.832 151.806 300.759 151.985 cv
300.758 152.079 300.724 152.194 300.683 152.286 cv
300.671 152.317 300.658 152.348 300.646 152.379 cv
300.605 152.456 300.566 152.555 300.527 152.631 cv
300.49 152.727 300.452 152.8 300.416 152.895 cv
300.416 152.958 300.395 153.043 300.359 153.111 cv
300.301 153.24 300.241 153.351 300.183 153.463 cv
300.145 153.546 300.108 153.628 300.073 153.689 cv
299.879 154.163 299.668 154.638 299.403 155.089 cv
299.401 155.092 299.399 155.094 299.399 155.098 cv
299.352 155.222 299.296 155.368 299.22 155.49 cv
299.204 155.518 299.189 155.545 299.173 155.565 cv
299.063 155.739 298.993 155.925 298.879 156.11 cv
298.85 156.163 298.822 156.214 298.795 156.264 cv
298.69 156.43 298.629 156.592 298.522 156.754 cv
298.466 156.832 298.411 156.933 298.352 157.01 cv
298.352 157.01 298.352 157.01 298.352 157.011 cv
298.307 157.139 298.239 157.255 298.161 157.366 cv
298.129 157.421 298.098 157.476 298.064 157.51 cv
298.041 157.551 298.016 157.594 297.99 157.636 cv
297.569 158.387 297.088 159.155 296.604 159.933 cv
296.539 160.044 296.487 160.157 296.405 160.291 cv
296.395 160.294 296.391 160.296 296.381 160.309 cv
296.381 160.311 296.379 160.315 296.377 160.318 cv
296.143 160.732 295.866 161.15 295.636 161.551 cv
295.494 161.819 295.342 162.067 295.175 162.341 cv
295.06 162.578 294.917 162.836 294.791 163.097 cv
294.706 163.331 294.596 163.588 294.494 163.826 cv
294.467 163.908 294.443 163.98 294.43 164.051 cv
294.395 164.227 294.33 164.404 294.275 164.583 cv
294.247 164.681 294.226 164.775 294.198 164.86 cv
294.155 165.031 294.112 165.192 294.088 165.349 cv
294.088 165.446 294.078 165.553 294.06 165.662 cv
294.032 165.808 294.003 165.955 293.979 166.102 cv
293.964 166.229 293.95 166.334 293.936 166.438 cv
293.921 166.601 293.903 166.741 293.892 166.882 cv
293.882 166.994 293.874 167.126 293.866 167.238 cv
293.859 167.374 293.852 167.511 293.848 167.656 cv
293.846 167.786 293.842 167.902 293.842 168.018 cv
293.842 168.172 293.842 168.306 293.842 168.44 cv
293.846 168.56 293.848 168.703 293.852 168.825 cv
293.857 168.952 293.863 169.08 293.868 169.23 cv
293.874 169.358 293.884 169.488 293.892 169.617 cv
293.899 169.756 293.909 169.876 293.919 169.995 cv
293.931 170.135 293.942 170.29 293.954 170.439 cv
293.964 170.538 293.976 170.641 293.985 170.758 cv
294.001 170.93 294.019 171.102 294.036 171.275 cv
294.042 171.323 294.046 171.35 294.052 171.398 cv
294.14 172.639 294.295 173.879 294.361 175.097 cv
294.361 175.096 294.361 175.096 294.361 175.096 cv
294.361 175.096 294.361 175.096 294.361 175.097 cv
294.361 175.098 li
291.932 171.087 293.055 166.945 288.753 163.896 cv
288.58 163.797 288.441 163.678 288.248 163.581 cv
288.102 163.466 287.907 163.374 287.747 163.278 cv
287.685 163.249 287.617 163.215 287.553 163.181 cv
287.408 163.104 287.305 163.048 287.153 162.972 cv
287.067 162.931 287.022 162.912 286.936 162.871 cv
286.797 162.805 286.695 162.748 286.559 162.695 cv
286.462 162.652 286.36 162.61 286.305 162.577 cv
286.165 162.528 286.027 162.468 285.927 162.409 cv
285.82 162.387 285.713 162.345 285.648 162.303 cv
285.507 162.248 285.364 162.214 285.265 162.16 cv
285.151 162.118 285.037 162.077 284.947 162.047 cv
284.822 162.007 284.677 161.956 284.572 161.906 cv
284.458 161.876 284.341 161.85 284.244 161.812 cv
284.119 161.764 283.971 161.717 283.865 161.693 cv
283.745 161.657 283.622 161.62 283.541 161.585 cv
283.397 161.542 283.25 161.522 283.146 161.482 cv
283.021 161.447 282.897 161.414 282.816 161.382 cv
282.669 161.346 282.521 161.329 282.415 161.292 cv
282.291 161.262 282.167 161.232 282.086 161.204 cv
281.939 161.175 281.787 161.16 281.681 161.128 cv
281.559 161.103 281.435 161.077 281.359 161.053 cv
281.206 161.023 281.07 160.996 280.948 160.991 cv
280.83 160.971 280.728 160.95 280.639 160.93 cv
280.482 160.906 280.367 160.885 280.224 160.864 cv
280.11 160.849 280.025 160.831 279.931 160.824 cv
279.771 160.82 279.662 160.806 279.508 160.79 cv
279.403 160.78 279.322 160.767 279.241 160.759 cv
279.072 160.745 278.95 160.736 278.787 160.728 cv
278.704 160.724 278.619 160.716 278.58 160.713 cv
278.333 160.705 278.138 160.702 277.916 160.706 cv
277.729 161.284 277.555 161.863 277.38 162.422 cv
277.351 162.524 277.322 162.605 277.293 162.706 cv
277.281 162.746 277.268 162.766 277.258 162.807 cv
277.256 162.808 277.256 162.81 277.256 162.811 cv
277.129 163.345 276.965 163.878 276.852 164.414 cv
276.852 164.418 276.852 164.423 276.852 164.428 cv
276.852 164.464 276.842 164.498 276.834 164.512 cv
276.51 165.777 276.264 167.049 276.105 168.331 cv
276.148 168.269 276.18 168.211 276.238 168.169 cv
276.07 168.537 li
275.892 169.724 275.807 170.911 275.767 172.106 cv
275.765 172.123 275.765 172.141 275.765 172.158 cv
275.763 172.164 275.763 172.169 275.763 172.175 cv
275.763 172.175 275.763 172.176 275.763 172.177 cv
275.741 172.727 275.733 173.266 275.737 173.809 cv
275.739 173.895 275.739 173.967 275.739 174.047 cv
275.749 174.604 275.771 175.163 275.807 175.72 cv
275.807 175.729 275.807 175.757 275.807 175.783 cv
275.807 176.384 275.864 176.964 275.936 177.57 cv
275.939 177.574 275.939 177.579 275.939 177.584 cv
275.946 177.65 275.958 177.703 275.966 177.771 cv
275.966 177.773 275.966 177.775 275.966 177.777 cv
276.029 178.263 276.105 178.751 276.149 179.24 cv
276.149 179.24 276.149 179.241 276.149 179.242 cv
276.165 179.361 276.185 179.458 276.205 179.576 cv
276.217 179.624 276.228 179.694 276.238 179.756 cv
276.318 180.167 276.405 180.594 276.502 181.001 cv
276.51 181.083 276.51 181.159 276.51 181.225 cv
276.531 181.329 276.551 181.415 276.571 181.509 cv
276.712 182.073 276.852 182.648 276.984 183.229 cv
277.156 183.79 277.346 184.491 277.591 185.278 cv
277.7 185.567 277.82 185.886 277.916 186.205 cv
277.928 186.258 277.957 186.335 277.982 186.41 cv
278.088 186.66 278.196 186.935 278.27 187.198 cv
278.299 187.281 278.331 187.344 278.364 187.428 cv
278.481 187.689 278.602 187.977 278.683 188.248 cv
278.719 188.337 278.756 188.404 278.791 188.493 cv
278.836 188.58 278.875 188.684 278.919 188.77 cv
278.992 189.024 279.11 189.261 279.231 189.52 cv
279.257 189.573 279.284 189.616 279.31 189.675 cv
279.388 189.923 279.514 190.174 279.645 190.438 cv
279.65 190.444 279.656 190.445 279.662 190.457 cv
279.742 190.704 279.869 190.951 279.997 191.176 cv
280.025 191.242 280.025 191.308 280.047 191.351 cv
280.183 191.61 280.32 191.848 280.419 192.106 cv
280.435 192.135 280.449 192.165 280.465 192.194 cv
280.594 192.405 280.725 192.637 280.816 192.868 cv
280.852 192.912 280.888 192.977 280.923 193.042 cv
281.068 193.273 281.177 193.525 281.33 193.773 cv
281.353 193.792 281.377 193.831 281.4 193.872 cv
281.494 194.091 281.634 194.3 281.773 194.499 cv
281.773 194.559 281.805 194.619 281.841 194.656 cv
282.001 194.898 282.135 195.135 282.285 195.353 cv
282.316 195.394 282.348 195.441 282.377 195.487 cv
282.478 195.686 282.626 195.881 282.776 196.054 cv
282.813 196.109 282.838 196.164 282.845 196.218 cv
283.016 196.419 283.18 196.635 283.324 196.848 cv
283.361 196.895 283.396 196.935 283.431 196.965 cv
283.543 197.146 283.7 197.323 283.859 197.495 cv
283.883 197.54 283.889 197.586 283.927 197.63 cv
284.109 197.807 284.25 197.995 284.439 198.179 cv
284.479 198.225 284.522 198.269 284.563 198.313 cv
284.685 198.468 284.852 198.617 284.975 198.761 cv
285.01 198.796 285.045 198.833 285.082 198.859 cv
285.274 199.031 285.427 199.187 285.623 199.335 cv
285.65 199.375 285.673 199.391 285.719 199.43 cv
285.895 199.56 286.027 199.695 286.208 199.807 cv
286.241 199.831 286.272 199.857 286.305 199.881 cv
286.464 200.006 286.67 200.12 286.832 200.248 cv
286.882 200.261 286.933 200.287 286.983 200.317 cv
287.128 200.427 287.318 200.51 287.465 200.603 cv
287.492 200.611 287.52 200.612 287.547 200.624 cv
287.756 200.725 287.927 200.792 288.102 200.867 cv
288.153 200.887 288.208 200.905 288.262 200.922 cv
288.463 200.968 288.626 201.028 288.805 201.075 cv
288.807 201.078 288.825 201.085 288.845 201.088 cv
289.064 201.135 289.242 201.143 289.466 201.164 cv
289.508 201.171 289.537 201.174 289.595 201.177 cv
289.816 201.192 289.994 201.197 290.211 201.184 cv
290.211 201.184 li
290.211 201.183 290.211 201.182 290.213 201.182 cv
290.439 201.166 290.622 201.142 290.852 201.114 cv
290.914 201.1 290.949 201.081 291.021 201.065 cv
291.196 201.024 291.329 200.976 291.507 200.939 cv
291.576 200.917 291.617 200.895 291.675 200.868 cv
291.918 200.792 292.114 200.702 292.32 200.6 cv
292.547 200.365 292.754 200.141 293.005 199.922 cv
293.033 199.829 293.112 199.725 293.198 199.594 cv
293.214 199.57 293.231 199.559 293.247 199.542 cv
293.73 198.755 294.469 197.745 294.858 197.077 cv
294.86 197.076 li
295.553 195.475 296.164 193.883 296.797 192.547 cv
296.761 192.733 296.722 192.926 296.685 193.124 cv
296.685 193.124 li
296.716 193.077 296.747 193.007 296.78 192.941 cv
296.789 194.481 296.387 195.88 295.821 197.2 cv
295.836 197.237 295.836 197.277 295.836 197.293 cv
295.836 197.319 295.836 197.348 295.838 197.376 cv
295.852 197.426 295.872 197.456 295.884 197.506 cv
295.884 197.507 295.884 197.507 295.884 197.507 cv
295.895 197.565 295.901 197.623 295.909 197.659 cv
295.917 197.716 295.933 197.771 295.935 197.807 cv
296.553 197.286 297.229 196.766 297.902 196.328 cv
298.881 195.479 299.895 194.606 300.398 194.504 cv
299.771 195.004 298.954 195.938 298.06 196.935 cv
296.917 198.23 295.761 199.643 294.997 200.4 cv
294.962 200.444 294.931 200.51 294.897 200.576 cv
294.675 201.032 294.43 201.493 294.212 201.956 cv
294.186 202.008 294.157 202.042 294.132 202.095 cv
294.088 202.205 294.058 202.333 293.995 202.44 cv
293.779 202.851 293.611 203.246 293.407 203.646 cv
293.39 203.689 293.385 203.732 293.385 203.767 cv
293.318 203.92 293.253 204.063 293.179 204.208 cv
293.12 204.323 293.063 204.459 293.023 204.574 cv
292.909 204.847 292.77 205.143 292.682 205.415 cv
292.682 205.417 292.682 205.417 292.682 205.419 cv
292.609 205.585 292.541 205.749 292.468 205.915 cv
292.32 206.298 292.173 206.681 292.018 207.062 cv
291.978 207.232 291.93 207.402 291.863 207.57 cv
291.716 207.95 291.607 208.324 291.474 208.685 cv
291.401 208.89 291.339 209.093 291.275 209.298 cv
291.198 209.636 291.078 209.974 290.975 210.313 cv
290.927 210.467 290.914 210.622 290.887 210.779 cv
290.867 210.852 290.848 210.93 290.828 210.985 cv
290.764 211.215 290.702 211.447 290.64 211.661 cv
290.612 211.762 290.583 211.848 290.572 211.955 cv
290.544 212.182 290.495 212.429 290.442 212.676 cv
290.378 212.941 290.313 213.228 290.256 213.494 cv
290.25 213.531 290.24 213.566 290.232 213.584 cv
290.232 213.584 li
290.211 213.833 290.194 214.088 290.154 214.32 cv
290.131 214.465 290.109 214.608 290.084 214.741 cv
290.055 214.91 290.021 215.08 289.998 215.252 cv
289.998 215.252 289.998 215.254 289.996 215.257 cv
289.962 215.517 289.94 215.776 289.911 216.038 cv
289.876 216.337 289.869 216.628 289.853 216.922 cv
289.83 217.218 289.822 217.496 289.807 217.791 cv
289.792 218.072 289.767 218.347 289.759 218.649 cv
289.753 218.843 289.757 219.025 289.757 219.227 cv
289.759 219.35 289.757 219.449 289.757 219.549 cv
289.759 219.836 289.751 220.1 289.757 220.391 cv
289.757 220.393 289.757 220.396 289.757 220.398 cv
289.763 220.573 289.776 220.753 289.786 220.932 cv
289.795 221.11 289.805 221.291 289.816 221.471 cv
289.828 221.693 289.834 221.934 289.853 222.176 cv
289.869 222.529 289.888 222.911 289.929 223.289 cv
289.956 223.535 289.974 223.753 290.004 224.001 cv
290.06 224.446 290.137 224.881 290.21 225.333 cv
290.211 225.506 290.219 225.689 290.254 225.882 cv
290.369 226.533 290.501 227.175 290.604 227.829 cv
290.763 228.521 290.914 229.208 291.07 229.892 cv
291.222 230.473 291.335 231.05 291.499 231.627 cv
291.513 231.662 291.526 231.721 291.54 231.779 cv
291.673 232.393 291.853 233.027 291.988 233.639 cv
292.126 234.114 292.265 234.611 292.356 235.086 cv
292.392 235.201 292.425 235.32 292.46 235.455 cv
292.596 235.94 292.685 236.428 292.814 236.914 cv
292.832 236.988 292.85 237.064 292.867 237.115 cv
292.995 237.607 293.072 238.123 293.186 238.617 cv
293.212 238.719 293.239 238.826 293.263 238.945 cv
293.373 239.442 293.433 239.945 293.523 240.455 cv
293.547 240.571 293.566 240.692 293.59 240.819 cv
293.6 240.854 293.605 240.916 293.613 240.975 cv
293.592 241.002 293.568 241.031 293.547 241.06 cv
293.609 241.595 293.66 242.177 293.689 242.719 cv
293.894 247.8 293.282 253.101 293.995 257.989 cv
293.993 257.988 li
293.993 257.988 293.993 257.988 293.993 257.989 cv
291.293 254.27 292.321 249.561 291.618 245.129 cv
291.588 244.724 291.507 244.349 291.425 243.954 cv
291.425 243.953 li
291.413 243.971 291.401 243.988 291.388 244.001 cv
291.277 243.503 291.214 243 291.096 242.541 cv
291.063 242.401 291.033 242.261 291.002 242.165 cv
290.838 241.323 290.618 240.5 290.436 239.689 cv
290.392 239.525 290.348 239.357 290.301 239.18 cv
290.107 238.323 289.869 237.469 289.669 236.625 cv
289.483 235.83 289.258 235.021 289.082 234.243 cv
289.059 234.149 289.035 234.076 289.012 233.984 cv
289.008 233.995 289.008 234.005 289.005 234.015 cv
288.925 234.277 288.858 234.565 288.805 234.834 cv
288.805 234.936 288.805 235.018 288.792 235.121 cv
288.753 235.32 288.722 235.523 288.694 235.738 cv
288.683 235.842 288.669 235.923 288.659 236.021 cv
288.628 236.3 288.605 236.574 288.594 236.872 cv
288.592 236.894 288.592 236.903 288.59 236.916 cv
288.578 237.219 288.576 237.502 288.58 237.788 cv
288.582 237.895 288.584 237.981 288.588 238.089 cv
288.594 238.305 288.603 238.517 288.616 238.742 cv
288.622 238.826 288.628 238.932 288.634 239.016 cv
288.657 239.322 288.685 239.61 288.718 239.898 cv
288.72 239.918 288.722 239.939 288.724 239.957 cv
288.759 240.25 288.8 240.557 288.805 240.846 cv
288.814 240.949 288.829 241.059 288.845 241.17 cv
288.88 241.377 288.917 241.584 288.954 241.835 cv
288.972 241.898 288.987 242.003 289.003 242.109 cv
289.059 242.405 289.115 242.701 289.166 242.998 cv
289.166 242.999 289.166 243.001 289.166 243.002 cv
289.193 243.316 289.258 243.648 289.324 243.985 cv
289.344 244.049 289.365 244.156 289.385 244.264 cv
289.44 244.52 289.497 244.778 289.51 245.05 cv
289.553 245.261 289.595 245.444 289.638 245.67 cv
289.673 245.815 289.708 246.001 289.743 246.144 cv
289.753 246.206 289.765 246.268 289.774 246.33 cv
289.776 246.329 289.776 246.329 289.776 246.328 cv
289.78 246.325 289.78 246.323 289.782 246.32 cv
289.869 247.012 289.972 247.688 290.045 248.342 cv
290.574 253.907 290.378 263.634 288.698 269.272 cv
288.86 267.297 288.862 265.082 288.771 262.772 cv
288.685 262.932 288.563 263.081 288.463 263.28 cv
287.758 264.328 286.353 265.906 285.082 267.329 cv
284.183 268.066 283.236 268.82 282.533 269.735 cv
281.021 271.756 279.645 274.69 278.721 277.078 cv
279.082 277.162 279.322 277.227 279.52 277.278 cv
280.124 277.402 280.367 277.461 282.94 277.661 cv
283.066 277.082 283.18 276.573 283.316 276.072 cv
283.899 274.854 284.58 274.411 285.175 273.689 cv
283.82 278.871 283.448 288.584 283.413 289.496 cv
283.541 290.33 283.535 291.259 283.883 292.025 cv
284.341 292.385 284.889 292.739 285.474 293.199 cv
285.657 293.372 285.828 293.468 285.977 293.592 cv
286.231 293.685 286.506 293.771 286.832 293.796 cv
288.545 294.129 290.783 291.685 293.482 294.852 cv
297 295.893 298.541 292.46 300.169 294.008 cv
301.119 295.209 302.346 295.59 303.057 294.891 cv
303.094 294.823 303.139 294.71 303.166 294.598 cv
303.197 294.63 303.228 294.654 303.228 294.683 cv
303.474 294.352 303.589 293.853 303.612 293.213 cv
303.645 293.279 303.706 287.927 303.735 287.993 cv
304.764 290.281 305.822 293.428 304.665 295.314 cv
305.192 295.23 305.65 295.19 305.885 295.124 cv
306.078 295.011 306.298 294.864 306.448 294.726 cv
306.781 293.751 306.744 292.627 306.678 291.461 cv
305.816 288.549 306.035 285.039 306.183 281.796 cv
cp
f
378.259 265.036 mo
378.259 265.036 li
378.265 264.863 378.267 264.683 378.269 264.481 cv
378.267 264.683 378.263 264.86 378.259 265.036 cv
cp
f
391.629 277.078 mo
391.629 277.077 391.629 277.077 391.629 277.077 cv
390.758 270.605 388.64 265.357 387.089 264.961 cv
384.259 264.234 li
382.581 263.793 380.445 263.266 378.27 262.685 cv
378.278 263.28 378.276 263.886 378.269 264.481 cv
378.27 264.48 li
386.727 265.68 388.932 267.14 391.629 277.078 cv
cp
1 1 1 rgb
f
360.024 246.635 mo
360.019 246.384 360.007 246.105 359.997 245.857 cv
359.82 244.006 359.188 239.52 359.321 239.553 cv
358.826 237.254 358.152 235.852 357.407 235.18 cv
357.405 235.179 357.405 235.178 357.405 235.178 cv
357.311 235.076 357.172 234.975 357.029 234.916 cv
357.029 234.916 357.027 234.916 357.027 234.914 cv
356.93 234.834 356.786 234.797 356.666 234.763 cv
342.702 231.177 li
343.076 231.951 343.129 231.825 343.379 232.867 cv
348.639 234.176 358.345 233.297 360.024 246.635 cv
cp
f
362.102 247.376 mo
362.103 247.435 362.105 247.487 362.105 247.507 cv
366.365 248.831 373.162 247.697 375.992 258.872 cv
375.992 258.87 375.992 258.868 375.992 258.866 cv
375.286 255.736 373.412 248.556 371.949 248.192 cv
370.367 247.786 366.229 246.726 362.059 245.656 cv
362.094 246.497 362.103 246.511 362.102 247.376 cv
cp
f
377.625 275.196 mo
377.619 275.226 377.609 275.297 377.603 275.365 cv
377.639 275.334 377.668 275.275 377.625 275.196 cv
cp
.701961 .701961 .701961 rgb
f
378.259 265.036 mo
378.259 265.208 378.257 265.379 378.253 265.511 cv
378.36 265.522 378.313 265.307 378.259 265.036 cv
cp
f
222.378 218.653 mo
223.88 208.454 221.842 208.155 212.397 208.155 cv
205.291 208.155 200.568 211.831 200.568 211.831 cv
200.568 214.456 204.132 213.163 211.137 212.027 cv
221.752 210.323 222.378 218.653 222.378 218.653 cv
cp
f
399.195 288.418 mo
398.259 288.178 396.137 287.58 393.79 286.946 cv
393.685 286.918 393.576 286.888 393.516 286.859 cv
393.422 287.916 393.453 287.752 393.319 288.852 cv
396.383 289.575 395.938 288.879 397.542 289.58 cv
402.383 290.281 402.659 294.725 402.943 300.717 cv
402.906 301.842 402.808 303.039 402.704 304.305 cv
402.723 304.307 402.786 304.341 402.848 304.382 cv
404.079 295.508 402.87 289.266 399.195 288.418 cv
cp
1 1 1 rgb
f
402.29 307.331 mo
402.181 307.935 402.071 308.538 401.98 309.206 cv
402.072 308.537 402.181 307.935 402.289 307.331 cv
398.935 305.506 395.496 303.68 391.756 302.468 cv
391.379 305.348 390.758 308.373 389.938 311.418 cv
389.092 314.463 388.115 317.289 387.022 319.896 cv
385.804 323.298 384.294 326.836 382.489 330.248 cv
385.496 326.059 390.016 315.865 391.762 311.449 cv
393.176 311.919 400.631 314.822 400.763 314.388 cv
401.427 311.94 401.976 309.572 402.369 307.385 cv
402.355 307.366 402.322 307.349 402.29 307.331 cv
cp
.701961 .701961 .701961 rgb
f
402.289 307.331 mo
402.289 307.331 402.289 307.331 402.29 307.331 cv
402.325 307.111 402.369 306.92 402.369 306.741 cv
402.369 306.918 402.324 307.111 402.289 307.331 cv
cp
f
401.98 309.206 mo
402.071 308.538 402.181 307.935 402.29 307.331 cv
402.289 307.331 402.289 307.331 402.289 307.331 cv
402.181 307.935 402.072 308.537 401.98 309.206 cv
cp
f
402.691 304.397 mo
402.69 304.397 402.689 304.397 402.688 304.397 cv
402.629 304.913 402.55 305.406 402.473 305.94 cv
402.55 305.407 402.633 304.912 402.691 304.397 cv
cp
f
402.473 305.94 mo
402.434 306.194 402.404 306.439 402.369 306.741 cv
402.369 306.92 402.325 307.111 402.29 307.331 cv
402.322 307.349 402.355 307.366 402.369 307.385 cv
402.554 306.37 402.711 305.348 402.848 304.382 cv
402.786 304.341 402.723 304.307 402.704 304.305 cv
402.699 304.309 402.692 304.353 402.688 304.397 cv
402.689 304.397 402.69 304.397 402.691 304.397 cv
402.633 304.912 402.55 305.407 402.473 305.94 cv
cp
f
217.303 172.915 mo
215.01 172.818 212.217 173.442 209.197 174.188 cv
205.709 175.066 202.761 176.377 200.39 177.882 cv
195.813 180.807 193.368 184.512 193.368 187.626 cv
193.368 192.33 201.876 189.085 209.867 189.085 cv
217.878 189.085 223.259 190.466 223.259 180.87 cv
223.259 174.977 220.893 173.07 217.303 172.915 cv
cp
f
185.886 168.993 mo
184.989 168.682 184.09 168.354 183.19 168.019 cv
184.074 168.374 184.975 168.708 185.886 168.993 cv
cp
f
210.325 194.986 mo
203.224 194.986 196.359 194.9 196.359 199.743 cv
196.359 202.364 204.349 202.438 211.41 201.88 cv
220.325 201.185 222.756 205.493 222.756 205.493 cv
224.977 193.319 217.415 194.986 210.325 194.986 cv
cp
f
353.114 295.541 mo
352.163 299.162 351.208 302.901 350.224 306.639 cv
350.807 304.493 351.383 302.294 351.981 300.084 cv
352.373 298.561 352.747 297.048 353.114 295.541 cv
cp
f
361.282 261.839 mo
360.097 273.178 357.558 286.654 353.966 300.572 cv
350.338 314.766 345.492 329.352 340.5 340.741 cv
344.209 334.798 360.039 291.834 362.059 278.001 cv
364.4 278.969 372.118 282.701 374.434 283.703 cv
375.389 277.378 375.953 271.69 376.089 266.788 cv
371.154 265.384 366.218 263.874 361.282 261.839 cv
cp
f
344.893 245.369 mo
344.901 246.377 344.888 247.429 344.858 248.51 cv
349.643 250.947 354.544 252.501 359.84 254.444 cv
359.951 252.748 360.017 251.155 360.038 249.699 cv
359.915 249.682 359.82 249.655 359.699 249.611 cv
354.829 247.979 349.977 246.105 344.893 245.369 cv
cp
1 1 1 rgb
f
391.711 280.339 mo
391.567 280.322 391.461 280.291 391.31 280.237 cv
386.9 278.704 382.489 277.078 377.76 275.5 cv
377.676 275.473 377.629 275.456 377.596 275.442 cv
377.583 275.556 377.571 275.635 377.558 275.753 cv
377.448 276.746 377.375 277.685 377.249 278.653 cv
381.843 280.738 386.968 281.722 391.613 283.702 cv
391.674 282.282 391.71 281.1 391.711 280.339 cv
cp
f
377.249 278.653 mo
376.867 281.825 376.375 284.768 375.706 288.55 cv
375.353 292.808 374.326 297.855 373.003 302.978 cv
372.838 303.678 372.68 304.38 372.478 305.074 cv
371.183 310.176 369.665 314.961 368.046 319.371 cv
366.43 324.402 364.641 329.311 362.755 333.853 cv
369.867 320.919 374.596 301.129 377.233 290.685 cv
379.512 292.082 390.787 295.394 390.922 295.439 cv
391.143 293.169 391.461 288.06 391.592 284.225 cv
391.6 284.032 391.606 283.889 391.613 283.702 cv
386.968 281.722 381.843 280.738 377.249 278.653 cv
cp
.701961 .701961 .701961 rgb
f
402.369 304.304 mo
402.025 304.135 401.715 303.975 401.408 303.847 cv
398.307 302.326 395.165 300.896 392.071 299.397 cv
391.987 300.398 391.864 301.425 391.756 302.468 cv
395.496 303.68 398.935 305.506 402.289 307.331 cv
402.324 307.111 402.369 306.918 402.369 306.741 cv
402.404 306.439 402.434 306.195 402.473 305.94 cv
402.55 305.406 402.629 304.913 402.688 304.397 cv
402.569 304.358 402.452 304.323 402.369 304.304 cv
cp
1 1 1 rgb
f
376.133 262.342 mo
375.741 262.476 366.075 259.674 361.609 258.448 cv
361.546 259.551 361.42 260.686 361.282 261.839 cv
366.218 263.874 371.154 265.384 376.089 266.788 cv
376.146 265.239 376.162 263.737 376.133 262.342 cv
cp
f
201.881 231.627 mo
197.64 230.83 186.061 227.113 182.141 226.075 cv
182.141 226.075 182.141 226.075 183.148 229.267 cv
183.602 231.76 184.739 233.535 184.219 235.295 cv
184.129 235.281 184.057 235.262 183.965 235.25 cv
183.245 237.598 li
183.316 237.602 183.401 237.604 183.471 237.605 cv
181.295 244.044 178.055 250.48 175.655 256.234 cv
178.006 251.575 180.335 246.648 182.711 241.933 cv
183.255 240.846 183.837 239.334 184.453 237.711 cv
189.66 238.305 192.356 239.76 196.682 240.633 cv
201.39 241.568 207.332 242.238 212.114 242.255 cv
203.056 240.863 194.541 237.074 185.293 235.475 cv
186.068 233.4 186.503 231.458 185.618 228.582 cv
194.827 230.918 207.257 234.834 217.793 234.834 cv
211.52 233.639 207.12 232.588 201.881 231.627 cv
cp
.701961 .701961 .701961 rgb
f
190.644 177.621 mo
190.642 177.621 190.64 177.621 190.639 177.621 cv
187.224 177.169 185.423 181.329 184.53 183.229 cv
182.582 187.358 180.442 187.82 176.357 185.426 cv
176.217 185.354 176.06 185.265 175.914 185.183 cv
175.999 185.431 176.105 185.716 176.229 186.016 cv
177.737 189.395 182.638 194.833 187.014 194.836 cv
189.266 196.847 189.761 206.537 184.53 203.767 cv
185.997 206.537 189.425 207.246 191.122 208.907 cv
192.761 210.556 197.275 214.143 197.669 216.111 cv
198.018 214.335 193.137 209.705 195.73 208.669 cv
198.46 207.57 199.627 207.799 198.46 207.57 cv
191.108 206.174 191.413 203.734 190.479 200.4 cv
189.449 196.681 196.359 194.499 196.359 194.499 cv
191.54 192.951 186.892 191.943 186.37 190.316 cv
185.458 187.492 186.874 182.566 190.643 177.622 cv
190.643 177.621 190.644 177.621 190.644 177.621 cv
cp
f
229.64 63.832 mo
229.008 62.9976 225.329 62.3062 226.463 64.9438 cv
226.561 65.1396 227.317 65.0625 227.317 65.0625 cv
228.001 64.356 228.34 64.542 229.398 64.5439 cv
229.404 64.5625 li
230.238 64.8916 230.679 64.5381 230.811 63.9673 cv
231.766 65.5654 233.479 67.0396 234.617 68.5376 cv
234.632 68.561 234.651 68.5859 234.666 68.6069 cv
234.715 68.7065 234.803 68.8062 234.884 68.9277 cv
234.882 68.9214 234.88 68.9146 234.878 68.9077 cv
234.88 68.9141 234.888 68.9224 234.892 68.9277 cv
234.88 68.8994 234.864 68.8721 234.852 68.8433 cv
233.901 66.3193 231.721 61.5 229.575 59.5249 cv
230.223 61.207 li
229.575 59.5249 230.299 61.6641 230.213 61.606 cv
230.447 62.4839 230.447 63.4707 229.64 63.832 cv
cp
0 0 0 rgb
f
246.977 72.0215 mo
247.167 72.2261 li
247.138 72.3545 246.816 72.2656 246.98 72.6064 cv
248.434 71.3647 248.895 69.6211 247.328 68.2065 cv
248.864 67.374 249.134 65.7471 247.206 64.9434 cv
247.151 62.6631 248.997 63.9395 249.395 65.2192 cv
250.076 63.9326 250.36 61.9565 249.169 60.7363 cv
247.995 61.6787 246.697 64.332 246.397 65.7998 cv
246.138 67.0781 246.619 67.9829 246.813 69.1548 cv
246.975 70.0757 246.748 71.1821 246.977 72.0215 cv
cp
f
235.381 42.8345 mo
233.557 43.1011 228.065 42.8481 227.401 45.0381 cv
226.725 49.3306 230.876 46.001 232.211 45.1855 cv
233.031 44.6685 237.546 44.0645 238.122 44.0752 cv
239.58 44.1104 241.688 44.0288 242.856 46.3535 cv
242.576 45.6191 241.688 44.0288 241.169 43.7256 cv
240.016 42.1479 236.663 42.647 235.381 42.8345 cv
cp
f
245.345 117.054 mo
245.936 120.154 252.494 118.521 254.451 118.109 cv
258.842 117.21 262.815 116.86 267.159 117.701 cv
275.843 119.411 281.346 125.398 285.082 133.085 cv
283.852 129.389 282.047 124.827 279.468 121.879 cv
278.415 120.671 277.209 119.819 276.184 118.738 cv
276.197 117.331 276.264 115.948 276.606 114.579 cv
276.057 115.38 275.289 115.856 274.582 116.301 cv
268.991 117.151 263.313 115.206 257.653 116.298 cv
255.02 116.82 252.602 117.432 249.789 117.258 cv
246.486 117.051 246.014 115.948 244.803 113.306 cv
244.403 115.07 245.891 116.694 246.977 117.871 cv
245.345 117.054 li
cp
f
215.61 68.6069 mo
215.626 68.5859 215.645 68.561 215.663 68.5376 cv
216.801 67.0396 218.514 65.5654 219.443 63.9673 cv
219.601 64.5381 220.018 64.8916 220.853 64.5625 cv
220.872 64.5439 li
221.919 64.542 223.594 65.9277 223.677 65.1147 cv
223.893 65.3184 223.796 65.1289 223.893 64.9365 cv
224.849 62.5688 221.27 62.9976 220.638 63.832 cv
219.813 63.4707 219.817 62.4839 220.044 61.606 cv
219.981 61.6641 220.873 59.4502 220.82 59.5249 cv
218.676 61.5 216.376 66.3193 215.417 68.8433 cv
215.415 68.8721 215.399 68.8994 215.387 68.9277 cv
215.391 68.9224 215.398 68.9141 215.401 68.9077 cv
215.399 68.9146 215.396 68.9214 215.394 68.9277 cv
215.454 68.8062 215.542 68.7065 215.61 68.6069 cv
cp
f
201.088 60.7363 mo
199.919 61.9565 200.204 63.9326 200.884 65.2192 cv
201.284 63.9395 203.113 62.6631 203.075 64.9434 cv
201.125 65.7471 201.395 67.374 202.931 68.2065 cv
201.363 69.6211 201.824 71.3647 203.279 72.6064 cv
203.464 72.2656 203.12 72.3545 203.113 72.2261 cv
203.297 72.0215 li
203.509 71.1821 203.306 70.0757 203.464 69.1548 cv
203.645 67.9829 204.145 67.0781 203.86 65.7998 cv
203.56 64.332 202.286 61.6787 201.088 60.7363 cv
cp
f
208.089 45.584 mo
208.376 45.269 208.699 44.9805 209.089 44.7788 cv
209.736 44.457 210.432 44.2944 211.133 44.29 cv
213.843 43.3516 217.086 45.062 218.263 45.8096 cv
220.647 47.2881 222.735 49.3096 222.061 45.0166 cv
221.394 42.8345 215.928 43.0791 214.057 42.8135 cv
212.797 42.626 209.456 42.2314 208.324 43.813 cv
207.684 44.5654 206.81 46.0146 206.618 47.2305 cv
206.81 46.853 207.064 46.4917 207.371 46.1777 cv
207.599 45.9507 207.848 45.7549 208.089 45.584 cv
cp
f
224.993 70.1113 mo
223.454 69.8442 222.516 68.5654 220.547 69.1782 cv
218.934 69.689 219.004 71.2388 216.121 70.8545 cv
216.971 72.1904 218.454 72.5044 219.721 71.7681 cv
221.524 71.145 223.201 71.6909 224.993 71.3555 cv
226.785 71.6909 228.754 70.8799 230.558 71.4839 cv
231.846 72.2402 232.914 71.7036 234.05 70.5679 cv
232.3 70.3794 231.057 69.689 229.416 69.1782 cv
227.471 68.5654 226.547 69.8442 224.993 70.1113 cv
cp
f
218.265 73.0376 mo
218.263 73.1001 218.27 73.1567 218.271 73.1953 cv
218.306 73.1753 218.352 73.1392 218.265 73.0376 cv
cp
f
218.273 73.2275 mo
218.273 73.2168 218.271 73.2061 218.271 73.1953 cv
218.248 73.2144 218.236 73.2231 218.273 73.2275 cv
cp
f
218.265 73.0376 mo
218.351 73.0845 218.374 73.1978 218.434 73.2373 cv
218.352 73.2334 218.3 73.2314 218.273 73.2275 cv
218.338 75.7988 221.099 76.5483 224.849 76.3687 cv
228.338 76.2036 231.113 76.4497 231.992 73.0376 cv
230.532 74.3379 228.858 74.3999 224.866 74.5913 cv
223.418 74.4121 220.169 74.7075 218.265 73.0376 cv
cp
f
183.1 117.701 mo
187.443 116.86 191.438 117.21 195.807 118.109 cv
197.785 118.521 204.324 120.154 204.914 117.054 cv
203.297 117.871 li
204.39 116.694 205.878 115.07 205.477 113.306 cv
204.246 115.948 203.794 117.051 200.481 117.258 cv
197.669 117.432 195.261 116.82 192.605 116.298 cv
186.947 115.206 181.29 117.151 175.691 116.301 cv
174.988 115.856 174.224 115.38 173.651 114.579 cv
173.995 115.948 174.061 117.331 174.074 118.738 cv
173.069 119.819 171.843 120.671 170.79 121.879 cv
168.233 124.827 166.43 129.389 165.177 133.085 cv
168.935 125.398 174.417 119.411 183.1 117.701 cv
cp
f
157.227 283.652 mo
157.329 285.756 157.513 287.242 158.884 290.424 cv
159.165 289.907 li
159.618 283.931 158.645 280.793 157.993 276.19 cv
158.095 279.358 157.058 280.478 157.227 283.652 cv
cp
f
145.555 254.566 mo
147.896 260.074 149.606 267.588 150.041 274.433 cv
149.925 276.576 150.037 278.538 150.067 280.466 cv
150.046 280.775 150.032 281.049 150.026 281.31 cv
150.067 280.472 li
150.103 282.796 150.012 285.027 149.206 287.477 cv
151.433 282.696 151.718 278.581 151.296 272.194 cv
151.077 267.356 148.416 259.774 145.555 254.566 cv
cp
f
240.039 70.5679 mo
239.945 68.7754 239.578 67.0073 239.998 65.2275 cv
240.469 63.4175 241.752 61.4307 241.677 59.5249 cv
240.826 61.4937 238.781 63.9126 238.554 65.9878 cv
238.717 67.4253 239.508 69.2246 240.039 70.5679 cv
cp
f
238.544 66.0571 mo
238.546 66.0313 238.552 66.0054 238.554 65.9878 cv
238.552 65.9775 238.546 65.9517 238.544 65.9277 cv
238.544 66.0571 li
cp
f
211.421 66.0571 mo
211.421 65.9277 li
211.418 65.9517 211.412 65.9775 211.41 65.9878 cv
211.412 66.0054 211.418 66.0313 211.421 66.0571 cv
cp
f
209.974 65.2275 mo
210.429 67.0073 210.037 68.7754 209.947 70.5679 cv
210.496 69.2246 211.269 67.4253 211.41 65.9878 cv
211.205 63.9126 209.16 61.4937 208.331 59.5249 cv
208.216 61.4307 209.518 63.4175 209.974 65.2275 cv
cp
f
215.41 37.6646 mo
216.646 37.6318 218.098 37.8608 219.682 38.4214 cv
220.49 38.6729 221.284 39.064 222.169 39.4219 cv
222.622 39.5938 223.066 39.7563 223.547 39.8682 cv
224.044 39.9727 224.557 39.9922 225.086 39.8579 cv
226.087 39.5532 226.932 39.0195 227.768 38.7358 cv
228.636 38.4277 229.455 38.229 230.275 38.105 cv
231.879 37.8423 233.372 37.8486 234.632 37.9482 cv
235.851 38.0713 236.841 38.291 237.515 38.5146 cv
238.193 38.7461 238.544 38.9922 238.544 38.9922 cv
238.544 38.9922 238.219 38.6782 237.552 38.3569 cv
236.892 38.0303 235.905 37.6719 234.666 37.418 cv
233.399 37.189 231.879 37.0503 230.213 37.209 cv
229.398 37.2817 228.502 37.4404 227.623 37.7539 cv
226.691 38.0317 225.826 38.5605 224.936 38.8115 cv
224.116 39.0371 223.211 38.7402 222.351 38.4458 cv
221.501 38.1162 220.65 37.7646 219.817 37.5444 cv
218.178 37.064 216.653 36.9697 215.389 37.1328 cv
214.12 37.29 213.135 37.667 212.447 37.9541 cv
211.779 38.2656 211.422 38.4678 211.421 38.4668 cv
211.421 38.4678 211.797 38.3145 212.479 38.1162 cv
213.16 37.9355 214.173 37.6904 215.41 37.6646 cv
cp
f
228.572 116.204 mo
226.632 117.162 223.453 117.173 221.752 116.463 cv
221.752 116.85 li
222.679 120.99 228.116 119.919 228.572 116.204 cv
cp
f
153.209 271.679 mo
153.894 277.022 153.894 277.022 153.748 279.719 cv
153.741 279.814 153.727 279.976 153.724 280.106 cv
153.706 280.391 153.666 280.681 153.621 280.994 cv
153.618 280.995 153.614 280.996 153.611 280.996 cv
153.526 281.658 153.384 282.402 153.277 283.155 cv
153.297 283.152 153.315 283.147 153.335 283.146 cv
152.955 285.831 152.524 289.072 152.997 290.098 cv
155.13 287.884 155.146 277.3 153.489 272.751 cv
153.209 271.679 li
cp
f
235.321 53.3676 mo
235.272 53.3915 235.05 53.3984 235.231 53.3354 cv
236.04 53.1601 236.654 52.5082 236.578 51.6957 cv
237.042 51.6957 238.583 52.0527 239.413 52.52 cv
238.826 53.0269 236.221 53.6879 235.321 53.3676 cv
cp
230.552 52.3862 mo
230.785 51.7744 232.367 51.7519 232.957 51.6957 cv
233.237 52.3784 233.218 53.0014 234.198 53.227 cv
233.027 53.415 231.256 52.9375 230.552 52.3862 cv
cp
230.797 53.8735 mo
230.777 53.8125 230.754 53.7451 230.731 53.6831 cv
230.762 53.6978 230.785 53.8066 230.797 53.8735 cv
cp
228.927 52.6016 mo
228.923 52.6011 228.919 52.6001 228.913 52.5996 cv
228.919 52.6001 228.923 52.6001 228.927 52.6006 cv
228.927 52.6016 li
cp
240.994 52.7217 mo
236.303 48.2324 229.424 51.3052 229.424 51.3052 cv
231.039 49.2471 236.016 48.7422 239.349 50.3374 cv
236.99 46.5869 229.061 48.457 228.864 51.9678 cv
228.856 52.0942 228.856 52.2012 228.868 52.3154 cv
228.868 52.3154 228.909 52.7466 228.929 52.7041 cv
228.972 53.0474 229.089 53.3667 229.314 53.6436 cv
229.398 53.7939 229.496 53.938 229.638 54.0732 cv
229.63 54.0684 li
230.182 54.936 231.088 55.4229 232.023 55.71 cv
232.128 55.7676 232.211 55.8198 232.284 55.8594 cv
232.246 55.8247 232.211 55.8081 232.211 55.7729 cv
232.832 55.9492 234.666 56.5894 235.277 56.6475 cv
234.32 56.3892 232.124 55.272 231.182 54.5737 cv
230.979 54.2202 230.882 54.1758 230.805 53.8911 cv
230.805 53.8706 230.801 53.8105 230.793 53.7114 cv
232.177 54.9385 236.23 54.2051 236.211 54.2998 cv
238.632 54.0239 238.632 54.0239 240.646 52.8394 cv
240.841 52.8252 240.944 52.7891 240.994 52.7217 cv
cp
f
235.231 53.3354 mo
235.257 53.3481 235.292 53.3569 235.321 53.3676 cv
235.341 53.3579 235.329 53.3461 235.231 53.3354 cv
cp
f
214.343 53.0414 mo
214.373 53.0312 214.407 53.0229 214.432 53.0107 cv
214.335 53.0209 214.323 53.0317 214.343 53.0414 cv
cp
f
213.213 51.4809 mo
213.116 52.2421 213.625 52.8417 214.432 53.0107 cv
214.635 53.0619 214.393 53.061 214.343 53.0414 cv
213.458 53.349 210.935 52.7002 210.326 52.2124 cv
211.156 51.7622 212.262 51.8217 213.213 51.4809 cv
cp
216.733 52.3705 mo
217.089 52.12 216.979 51.4506 216.979 51.4506 cv
217.55 51.4931 218.608 51.6143 219.186 52.1353 cv
218.581 52.6323 217.059 53.0864 215.936 53.0629 cv
216.586 52.6269 216.586 52.6269 216.733 52.3705 cv
cp
218.914 53.8735 mo
218.926 53.8062 218.934 53.6978 218.959 53.6831 cv
218.935 53.7451 218.933 53.8125 218.914 53.8735 cv
cp
220.763 52.6006 mo
220.767 52.6001 220.771 52.6001 220.776 52.5996 cv
220.772 52.6001 220.767 52.6011 220.763 52.6016 cv
220.763 52.6006 li
cp
218.918 53.7114 mo
218.91 53.8105 218.906 53.8706 218.905 53.8911 cv
218.787 54.1758 218.711 54.2202 218.486 54.5737 cv
217.564 55.272 215.368 56.3892 214.411 56.6475 cv
215.027 56.5894 216.859 55.9492 217.496 55.7729 cv
217.458 55.8081 217.423 55.8247 217.383 55.8594 cv
217.482 55.8198 217.562 55.7676 217.666 55.71 cv
218.604 55.4229 219.485 54.936 220.061 54.0684 cv
220.052 54.0732 li
220.173 53.938 220.296 53.7939 220.374 53.6436 cv
220.579 53.3667 220.717 53.0474 220.762 52.7041 cv
220.781 52.7466 220.822 52.3154 220.822 52.3154 cv
221.117 48.5801 214.722 46.5806 210.325 50.3374 cv
213.674 48.7422 218.65 49.2471 220.244 51.3052 cv
220.244 51.3052 213.343 48.2437 208.704 52.7217 cv
208.745 52.7891 208.848 52.8252 209.066 52.8394 cv
211.036 54.0239 211.036 54.0239 213.479 54.2998 cv
213.459 54.2051 217.527 54.9385 218.918 53.7114 cv
cp
f
207.514 52.8423 mo
207.443 52.835 206.618 52.2061 205.702 49.1011 cv
205.86 50.2246 206.184 55.3169 206.618 56.3125 cv
206.652 55.499 206.618 53.0166 207.514 52.8423 cv
cp
f
214.722 69.457 mo
211.946 73.6787 213.896 76.397 216.121 77.9023 cv
216.121 77.9023 214.59 75.4766 214.493 73.5601 cv
214.39 71.9243 214.722 69.457 214.722 69.457 cv
cp
f
242.758 52.8423 mo
243.663 53.0166 243.606 55.499 243.663 56.3125 cv
244.098 55.3169 244.421 50.2246 244.556 49.1011 cv
244.51 49.3335 244.23 50.1211 243.533 51.4038 cv
243.533 51.4038 242.872 52.2061 242.506 52.8423 cv
242.758 52.8423 li
cp
f
235.767 73.5601 mo
235.69 75.4766 234.153 77.9023 234.153 77.9023 cv
236.386 76.397 238.311 73.6787 235.537 69.457 cv
235.537 69.457 235.868 71.9243 235.767 73.5601 cv
cp
f
220.664 84.9604 mo
220.877 85.0884 li
221.807 85.2954 223.152 85.8711 224.077 85.4399 cv
225.01 84.9663 224.607 84.3804 225.883 84.3018 cv
226.852 84.2451 227.196 85.4478 228.227 85.4341 cv
228.915 85.4097 231.16 84.8799 231.649 84.3208 cv
228.572 84.3208 228.171 82.9858 226.167 82.9858 cv
224.133 82.9858 222.472 84.9346 220.664 84.9604 cv
cp
f
228.927 35.2183 mo
228.927 34.9917 227.108 34.812 224.859 34.812 cv
222.631 34.812 220.834 34.9917 220.834 35.2183 cv
220.834 35.4443 222.631 35.624 224.859 35.624 cv
227.108 35.624 228.927 35.4443 228.927 35.2183 cv
cp
f
400.763 314.388 mo
400.631 314.822 393.176 311.919 391.762 311.449 cv
390.016 315.865 385.496 326.059 382.489 330.248 cv
384.294 326.836 385.804 323.298 387.022 319.896 cv
388.115 317.289 389.092 314.463 389.938 311.418 cv
391.083 307.262 391.8 303.169 392.071 299.397 cv
395.47 301.066 398.934 302.592 402.369 304.304 cv
402.452 304.324 402.571 304.359 402.691 304.397 cv
402.509 305.935 402.29 307.513 401.98 309.206 cv
402.552 306.101 402.859 303.244 402.943 300.717 cv
402.659 294.725 402.383 290.281 397.542 289.58 cv
395.938 288.879 396.383 289.575 393.319 288.852 cv
393.453 287.752 393.422 287.916 393.516 286.859 cv
393.576 286.888 393.685 286.918 393.79 286.946 cv
396.137 287.58 398.259 288.178 399.195 288.418 cv
404.118 289.58 404.583 300.381 400.763 314.388 cv
cp
377.233 290.685 mo
374.596 301.129 369.867 320.919 362.755 333.853 cv
364.641 329.311 366.43 324.402 368.046 319.371 cv
369.665 314.961 371.183 310.176 372.478 305.074 cv
372.68 304.38 372.838 303.678 373.003 302.978 cv
374.326 297.855 375.353 292.808 375.706 288.55 cv
376.599 283.64 377.123 280.114 377.558 275.753 cv
377.571 275.635 377.583 275.556 377.596 275.442 cv
377.629 275.456 377.676 275.473 377.76 275.5 cv
382.489 277.078 386.9 278.704 391.31 280.237 cv
391.461 280.291 391.567 280.322 391.711 280.339 cv
391.709 283.16 391.255 292.221 390.922 295.439 cv
390.787 295.394 379.512 292.082 377.233 290.685 cv
cp
340.5 340.741 mo
345.492 329.352 350.338 314.766 353.966 300.572 cv
357.918 285.256 360.574 270.482 361.609 258.448 cv
366.075 259.674 375.741 262.476 376.133 262.342 cv
376.253 268.101 375.694 275.354 374.434 283.703 cv
372.118 282.701 364.4 278.969 362.059 278.001 cv
360.039 291.834 344.209 334.798 340.5 340.741 cv
cp
353.114 295.541 mo
352.747 297.048 352.373 298.561 351.981 300.084 cv
351.383 302.294 350.807 304.493 350.224 306.639 cv
351.208 302.901 352.163 299.162 353.114 295.541 cv
cp
326.96 326.596 mo
322.665 337.965 318.031 347.592 313.775 352.859 cv
317.257 348.522 320.741 341.352 324.28 332.343 cv
328.264 322.111 332.363 309.543 336.509 296.115 cv
339.088 287.796 341.103 279.137 342.513 270.958 cv
345.055 258.647 345.056 252.645 344.846 249.035 cv
344.889 247.778 344.902 246.527 344.893 245.369 cv
349.977 246.105 354.829 247.979 359.699 249.611 cv
359.82 249.655 359.915 249.682 360.038 249.699 cv
360.017 251.179 359.95 252.763 359.836 254.519 cv
359.82 255.215 359.776 255.92 359.719 256.622 cv
359.695 256.872 359.674 257.112 359.65 257.351 cv
359.607 257.837 359.56 258.328 359.515 258.781 cv
359.483 259.077 359.478 259.416 359.465 259.715 cv
359.414 260.156 359.357 260.65 359.302 261.144 cv
359.227 261.778 359.147 262.421 359.106 263.071 cv
359.071 263.333 359.036 263.634 358.999 263.904 cv
358.93 264.397 358.855 264.94 358.781 265.443 cv
358.775 265.646 358.773 265.806 358.748 266.009 cv
358.566 267.212 358.414 268.478 358.206 269.727 cv
353.999 267.487 352.602 266.478 347.106 264.416 cv
344.059 285.988 332.373 314.48 326.96 326.596 cv
cp
312.14 295.531 mo
311.596 295.446 311 295.323 310.442 295.204 cv
310.456 295.189 310.47 295.13 310.485 295.071 cv
310.121 294.981 309.757 294.898 309.395 294.83 cv
309.452 294.34 309.47 293.787 309.456 293.242 cv
311.305 293.678 313.134 294.127 314.977 294.582 cv
317.938 295.357 320.836 296.23 323.824 297.037 cv
323.619 297.387 323.383 297.695 323.16 297.991 cv
319.493 297.069 315.855 296.232 312.171 295.432 cv
312.161 295.477 312.149 295.524 312.14 295.531 cv
cp
309.442 307.882 mo
308.727 312.258 307.935 316.785 307.013 321.526 cv
305.775 328.496 304.283 335.873 303.735 343.148 cv
303.677 340.9 303.729 338.304 303.928 335.356 cv
304.552 324.655 306.693 311.316 309.978 297.131 cv
310.589 297.27 311.152 297.365 311.714 297.505 cv
311.018 300.772 310.262 304.207 309.442 307.882 cv
cp
303.803 344.693 mo
303.85 345.577 303.916 346.376 303.955 347.103 cv
303.916 346.376 303.85 345.578 303.803 344.693 cv
cp
308.275 287.185 mo
308.179 287.863 li
308.171 287.826 308.163 287.818 308.157 287.789 cv
308.204 287.575 308.244 287.403 308.275 287.185 cv
cp
325.384 287.597 mo
325.592 288.872 325.605 290.183 325.464 291.452 cv
325.356 291.919 325.202 292.385 325.051 292.81 cv
325.025 292.935 325.02 293.06 324.983 293.143 cv
321.933 292.451 318.895 291.719 315.823 291.081 cv
313.592 290.623 311.351 290.226 309.15 289.831 cv
308.878 288.122 308.574 286.537 308.492 285.67 cv
308.35 286.711 li
308.456 285.715 308.406 284.714 308.27 283.721 cv
314.056 284.907 319.742 286.19 325.384 287.597 cv
cp
329.869 240.283 mo
321.365 257.874 317.902 269.672 314.843 283.013 cv
314.478 282.916 314.085 282.87 313.685 282.773 cv
318.877 264.219 324.781 249.389 329.869 240.283 cv
cp
356.666 234.763 mo
356.786 234.797 356.93 234.834 357.027 234.914 cv
357.027 234.916 357.029 234.916 357.029 234.916 cv
357.172 234.975 357.311 235.076 357.405 235.178 cv
357.405 235.178 357.405 235.179 357.407 235.18 cv
358.152 235.852 358.826 237.254 359.321 239.553 cv
359.188 239.52 359.82 244.006 359.997 245.857 cv
360.007 246.105 360.019 246.384 360.024 246.635 cv
358.345 233.297 348.639 234.176 343.379 232.867 cv
343.129 231.825 343.076 231.951 342.702 231.177 cv
356.666 234.763 li
cp
371.949 248.192 mo
373.412 248.556 375.286 255.736 375.992 258.866 cv
375.992 258.868 375.992 258.87 375.992 258.872 cv
373.162 247.697 366.365 248.831 362.105 247.507 cv
362.105 247.487 362.103 247.435 362.102 247.376 cv
362.103 246.511 362.094 246.497 362.059 245.656 cv
366.229 246.726 370.367 247.786 371.949 248.192 cv
cp
377.625 275.196 mo
377.668 275.275 377.639 275.334 377.603 275.365 cv
377.609 275.297 377.619 275.226 377.625 275.196 cv
cp
378.259 265.036 mo
378.259 265.036 li
378.263 264.86 378.267 264.683 378.269 264.481 cv
378.276 263.886 378.278 263.28 378.27 262.685 cv
380.445 263.266 382.581 263.793 384.259 264.234 cv
387.089 264.961 li
388.64 265.357 390.758 270.605 391.629 277.077 cv
391.629 277.077 391.629 277.077 391.629 277.078 cv
388.932 267.14 386.727 265.68 378.27 264.48 cv
378.269 264.481 li
378.267 264.683 378.265 264.863 378.259 265.036 cv
378.313 265.307 378.36 265.522 378.253 265.511 cv
378.257 265.379 378.259 265.208 378.259 265.036 cv
cp
306.448 294.726 mo
306.298 294.864 306.078 295.011 305.885 295.124 cv
305.65 295.19 305.192 295.23 304.665 295.314 cv
305.822 293.428 304.764 290.281 303.735 287.993 cv
303.706 287.927 303.645 293.279 303.612 293.213 cv
303.589 293.853 303.474 294.352 303.228 294.683 cv
303.228 294.654 303.197 294.63 303.166 294.598 cv
303.139 294.71 303.094 294.823 303.057 294.891 cv
302.346 295.59 301.119 295.209 300.169 294.008 cv
298.541 292.46 297 295.893 293.482 294.852 cv
290.783 291.685 288.545 294.129 286.832 293.796 cv
286.506 293.771 286.231 293.685 285.977 293.592 cv
285.828 293.468 285.657 293.372 285.474 293.199 cv
284.889 292.739 284.341 292.385 283.883 292.025 cv
283.535 291.259 283.541 290.33 283.413 289.496 cv
283.448 288.584 283.82 278.871 285.175 273.689 cv
284.58 274.411 283.899 274.854 283.316 276.072 cv
283.18 276.573 283.066 277.082 282.94 277.661 cv
280.367 277.461 280.124 277.402 279.52 277.278 cv
279.322 277.227 279.082 277.162 278.721 277.078 cv
279.645 274.69 281.021 271.756 282.533 269.735 cv
283.236 268.82 284.183 268.066 285.082 267.329 cv
286.353 265.906 287.758 264.328 288.463 263.28 cv
288.563 263.081 288.685 262.932 288.771 262.772 cv
288.862 265.082 288.86 267.297 288.698 269.272 cv
290.378 263.634 290.574 253.907 290.045 248.342 cv
289.972 247.688 289.869 247.012 289.782 246.32 cv
289.78 246.323 289.78 246.325 289.776 246.328 cv
289.776 246.329 289.776 246.329 289.774 246.33 cv
289.765 246.268 289.753 246.206 289.743 246.144 cv
289.708 246.001 289.673 245.815 289.638 245.67 cv
289.595 245.444 289.553 245.261 289.51 245.05 cv
289.497 244.778 289.44 244.52 289.385 244.264 cv
289.365 244.156 289.344 244.049 289.324 243.985 cv
289.258 243.648 289.193 243.316 289.166 243.002 cv
289.166 243.001 289.166 242.999 289.166 242.998 cv
289.115 242.701 289.059 242.405 289.003 242.109 cv
288.987 242.003 288.972 241.898 288.954 241.835 cv
288.917 241.584 288.88 241.377 288.845 241.17 cv
288.829 241.059 288.814 240.949 288.805 240.846 cv
288.8 240.557 288.759 240.25 288.724 239.957 cv
288.722 239.939 288.72 239.918 288.718 239.898 cv
288.685 239.61 288.657 239.322 288.634 239.016 cv
288.628 238.932 288.622 238.826 288.616 238.742 cv
288.603 238.517 288.594 238.305 288.588 238.089 cv
288.584 237.981 288.582 237.895 288.58 237.788 cv
288.576 237.502 288.578 237.219 288.59 236.916 cv
288.592 236.903 288.592 236.894 288.594 236.872 cv
288.605 236.574 288.628 236.3 288.659 236.021 cv
288.669 235.923 288.683 235.842 288.694 235.738 cv
288.722 235.523 288.753 235.32 288.792 235.121 cv
288.805 235.018 288.805 234.936 288.805 234.834 cv
288.858 234.565 288.925 234.277 289.005 234.015 cv
289.008 234.005 289.008 233.995 289.012 233.984 cv
289.035 234.076 289.059 234.149 289.082 234.243 cv
289.258 235.021 289.483 235.83 289.669 236.625 cv
289.869 237.469 290.107 238.323 290.301 239.18 cv
290.348 239.357 290.392 239.525 290.436 239.689 cv
290.618 240.5 290.838 241.323 291.002 242.165 cv
291.033 242.261 291.063 242.401 291.096 242.541 cv
291.214 243 291.277 243.503 291.388 244.001 cv
291.401 243.988 291.413 243.971 291.425 243.953 cv
291.425 243.954 li
291.507 244.349 291.588 244.724 291.618 245.129 cv
292.321 249.561 291.293 254.27 293.993 257.989 cv
293.993 257.988 293.993 257.988 293.993 257.988 cv
293.995 257.989 li
293.282 253.101 293.894 247.8 293.689 242.719 cv
293.66 242.177 293.609 241.595 293.547 241.06 cv
293.568 241.031 293.592 241.002 293.613 240.975 cv
293.605 240.916 293.6 240.854 293.59 240.819 cv
293.566 240.692 293.547 240.571 293.523 240.455 cv
293.433 239.945 293.373 239.442 293.263 238.945 cv
293.239 238.826 293.212 238.719 293.186 238.617 cv
293.072 238.123 292.995 237.607 292.867 237.115 cv
292.85 237.064 292.832 236.988 292.814 236.914 cv
292.685 236.428 292.596 235.94 292.46 235.455 cv
292.425 235.32 292.392 235.201 292.356 235.086 cv
292.265 234.611 292.126 234.114 291.988 233.639 cv
291.853 233.027 291.673 232.393 291.54 231.779 cv
291.526 231.721 291.513 231.662 291.499 231.627 cv
291.335 231.05 291.222 230.473 291.07 229.892 cv
290.914 229.208 290.763 228.521 290.604 227.829 cv
290.501 227.175 290.369 226.533 290.254 225.882 cv
290.219 225.689 290.211 225.506 290.21 225.333 cv
290.137 224.881 290.06 224.446 290.004 224.001 cv
289.974 223.753 289.956 223.535 289.929 223.289 cv
289.888 222.911 289.869 222.529 289.853 222.176 cv
289.834 221.934 289.828 221.693 289.816 221.471 cv
289.805 221.291 289.795 221.11 289.786 220.932 cv
289.776 220.753 289.763 220.573 289.757 220.398 cv
289.757 220.396 289.757 220.393 289.757 220.391 cv
289.751 220.1 289.759 219.836 289.757 219.549 cv
289.757 219.449 289.759 219.35 289.757 219.227 cv
289.757 219.025 289.753 218.843 289.759 218.649 cv
289.767 218.347 289.792 218.072 289.807 217.791 cv
289.822 217.496 289.83 217.218 289.853 216.922 cv
289.869 216.628 289.876 216.337 289.911 216.038 cv
289.94 215.776 289.962 215.517 289.996 215.257 cv
289.998 215.254 289.998 215.252 289.998 215.252 cv
290.021 215.08 290.055 214.91 290.084 214.741 cv
290.109 214.608 290.131 214.465 290.154 214.32 cv
290.194 214.088 290.211 213.833 290.232 213.584 cv
290.232 213.584 li
290.24 213.566 290.25 213.531 290.256 213.494 cv
290.313 213.228 290.378 212.941 290.442 212.676 cv
290.495 212.429 290.544 212.182 290.572 211.955 cv
290.583 211.848 290.612 211.762 290.64 211.661 cv
290.702 211.447 290.764 211.215 290.828 210.985 cv
290.848 210.93 290.867 210.852 290.887 210.779 cv
290.914 210.622 290.927 210.467 290.975 210.313 cv
291.078 209.974 291.198 209.636 291.275 209.298 cv
291.339 209.093 291.401 208.89 291.474 208.685 cv
291.607 208.324 291.716 207.95 291.863 207.57 cv
291.93 207.402 291.978 207.232 292.018 207.062 cv
292.173 206.681 292.32 206.298 292.468 205.915 cv
292.541 205.749 292.609 205.585 292.682 205.419 cv
292.682 205.417 292.682 205.417 292.682 205.415 cv
292.77 205.143 292.909 204.847 293.023 204.574 cv
293.063 204.459 293.12 204.323 293.179 204.208 cv
293.253 204.063 293.318 203.92 293.385 203.767 cv
293.385 203.732 293.39 203.689 293.407 203.646 cv
293.611 203.246 293.779 202.851 293.995 202.44 cv
294.058 202.333 294.088 202.205 294.132 202.095 cv
294.157 202.042 294.186 202.008 294.212 201.956 cv
294.43 201.493 294.675 201.032 294.897 200.576 cv
294.931 200.51 294.962 200.444 294.997 200.4 cv
295.761 199.643 296.917 198.23 298.06 196.935 cv
298.954 195.938 299.771 195.004 300.398 194.504 cv
299.895 194.606 298.881 195.479 297.902 196.328 cv
297.229 196.766 296.553 197.286 295.935 197.807 cv
295.933 197.771 295.917 197.716 295.909 197.659 cv
295.901 197.623 295.895 197.565 295.884 197.507 cv
295.884 197.507 295.884 197.507 295.884 197.506 cv
295.872 197.456 295.852 197.426 295.838 197.376 cv
295.836 197.348 295.836 197.319 295.836 197.293 cv
295.836 197.277 295.836 197.237 295.821 197.2 cv
296.387 195.88 296.789 194.481 296.78 192.941 cv
296.747 193.007 296.716 193.077 296.685 193.124 cv
296.685 193.124 li
296.722 192.926 296.761 192.733 296.797 192.547 cv
296.164 193.883 295.553 195.475 294.86 197.076 cv
294.858 197.077 li
294.469 197.745 293.73 198.755 293.247 199.542 cv
293.231 199.559 293.214 199.57 293.198 199.594 cv
293.112 199.725 293.033 199.829 293.005 199.922 cv
292.754 200.141 292.547 200.365 292.32 200.6 cv
292.114 200.702 291.918 200.792 291.675 200.868 cv
291.617 200.895 291.576 200.917 291.507 200.939 cv
291.329 200.976 291.196 201.024 291.021 201.065 cv
290.949 201.081 290.914 201.1 290.852 201.114 cv
290.622 201.142 290.439 201.166 290.213 201.182 cv
290.211 201.182 290.211 201.183 290.211 201.184 cv
290.211 201.184 li
289.994 201.197 289.816 201.192 289.595 201.177 cv
289.537 201.174 289.508 201.171 289.466 201.164 cv
289.242 201.143 289.064 201.135 288.845 201.088 cv
288.825 201.085 288.807 201.078 288.805 201.075 cv
288.626 201.028 288.463 200.968 288.262 200.922 cv
288.208 200.905 288.153 200.887 288.102 200.867 cv
287.927 200.792 287.756 200.725 287.547 200.624 cv
287.52 200.612 287.492 200.611 287.465 200.603 cv
287.318 200.51 287.128 200.427 286.983 200.317 cv
286.933 200.287 286.882 200.261 286.832 200.248 cv
286.67 200.12 286.464 200.006 286.305 199.881 cv
286.272 199.857 286.241 199.831 286.208 199.807 cv
286.027 199.695 285.895 199.56 285.719 199.43 cv
285.673 199.391 285.65 199.375 285.623 199.335 cv
285.427 199.187 285.274 199.031 285.082 198.859 cv
285.045 198.833 285.01 198.796 284.975 198.761 cv
284.852 198.617 284.685 198.468 284.563 198.313 cv
284.522 198.269 284.479 198.225 284.439 198.179 cv
284.25 197.995 284.109 197.807 283.927 197.63 cv
283.889 197.586 283.883 197.54 283.859 197.495 cv
283.7 197.323 283.543 197.146 283.431 196.965 cv
283.396 196.935 283.361 196.895 283.324 196.848 cv
283.18 196.635 283.016 196.419 282.845 196.218 cv
282.838 196.164 282.813 196.109 282.776 196.054 cv
282.626 195.881 282.478 195.686 282.377 195.487 cv
282.348 195.441 282.316 195.394 282.285 195.353 cv
282.135 195.135 282.001 194.898 281.841 194.656 cv
281.805 194.619 281.773 194.559 281.773 194.499 cv
281.634 194.3 281.494 194.091 281.4 193.872 cv
281.377 193.831 281.353 193.792 281.33 193.773 cv
281.177 193.525 281.068 193.273 280.923 193.042 cv
280.888 192.977 280.852 192.912 280.816 192.868 cv
280.725 192.637 280.594 192.405 280.465 192.194 cv
280.449 192.165 280.435 192.135 280.419 192.106 cv
280.32 191.848 280.183 191.61 280.047 191.351 cv
280.025 191.308 280.025 191.242 279.997 191.176 cv
279.869 190.951 279.742 190.704 279.662 190.457 cv
279.656 190.445 279.65 190.444 279.645 190.438 cv
279.514 190.174 279.388 189.923 279.31 189.675 cv
279.284 189.616 279.257 189.573 279.231 189.52 cv
279.11 189.261 278.992 189.024 278.919 188.77 cv
278.875 188.684 278.836 188.58 278.791 188.493 cv
278.756 188.404 278.719 188.337 278.683 188.248 cv
278.602 187.977 278.481 187.689 278.364 187.428 cv
278.331 187.344 278.299 187.281 278.27 187.198 cv
278.196 186.935 278.088 186.66 277.982 186.41 cv
277.957 186.335 277.928 186.258 277.916 186.205 cv
277.82 185.886 277.7 185.567 277.591 185.278 cv
277.346 184.491 277.156 183.79 276.984 183.229 cv
276.852 182.648 276.712 182.073 276.571 181.509 cv
276.551 181.415 276.531 181.329 276.51 181.225 cv
276.51 181.159 276.51 181.083 276.502 181.001 cv
276.405 180.594 276.318 180.167 276.238 179.756 cv
276.228 179.694 276.217 179.624 276.205 179.576 cv
276.185 179.458 276.165 179.361 276.149 179.242 cv
276.149 179.241 276.149 179.24 276.149 179.24 cv
276.105 178.751 276.029 178.263 275.966 177.777 cv
275.966 177.775 275.966 177.773 275.966 177.771 cv
275.958 177.703 275.946 177.65 275.939 177.584 cv
275.939 177.579 275.939 177.574 275.936 177.57 cv
275.864 176.964 275.807 176.384 275.807 175.783 cv
275.807 175.757 275.807 175.729 275.807 175.72 cv
275.771 175.163 275.749 174.604 275.739 174.047 cv
275.739 173.967 275.739 173.895 275.737 173.809 cv
275.733 173.266 275.741 172.727 275.763 172.177 cv
275.763 172.176 275.763 172.175 275.763 172.175 cv
275.763 172.169 275.763 172.164 275.765 172.158 cv
275.765 172.141 275.765 172.123 275.767 172.106 cv
275.807 170.911 275.892 169.724 276.07 168.537 cv
276.238 168.169 li
276.18 168.211 276.148 168.269 276.105 168.331 cv
276.264 167.049 276.51 165.777 276.834 164.512 cv
276.842 164.498 276.852 164.464 276.852 164.428 cv
276.852 164.423 276.852 164.418 276.852 164.414 cv
276.965 163.878 277.129 163.345 277.256 162.811 cv
277.256 162.81 277.256 162.808 277.258 162.807 cv
277.268 162.766 277.281 162.746 277.293 162.706 cv
277.322 162.605 277.351 162.524 277.38 162.422 cv
277.555 161.863 277.729 161.284 277.916 160.706 cv
278.138 160.702 278.333 160.705 278.58 160.713 cv
278.619 160.716 278.704 160.724 278.787 160.728 cv
278.95 160.736 279.072 160.745 279.241 160.759 cv
279.322 160.767 279.403 160.78 279.508 160.79 cv
279.662 160.806 279.771 160.82 279.931 160.824 cv
280.025 160.831 280.11 160.849 280.224 160.864 cv
280.367 160.885 280.482 160.906 280.639 160.93 cv
280.728 160.95 280.83 160.971 280.948 160.991 cv
281.07 160.996 281.206 161.023 281.359 161.053 cv
281.435 161.077 281.559 161.103 281.681 161.128 cv
281.787 161.16 281.939 161.175 282.086 161.204 cv
282.167 161.232 282.291 161.262 282.415 161.292 cv
282.521 161.329 282.669 161.346 282.816 161.382 cv
282.897 161.414 283.021 161.447 283.146 161.482 cv
283.25 161.522 283.397 161.542 283.541 161.585 cv
283.622 161.62 283.745 161.657 283.865 161.693 cv
283.971 161.717 284.119 161.764 284.244 161.812 cv
284.341 161.85 284.458 161.876 284.572 161.906 cv
284.677 161.956 284.822 162.007 284.947 162.047 cv
285.037 162.077 285.151 162.118 285.265 162.16 cv
285.364 162.214 285.507 162.248 285.648 162.303 cv
285.713 162.345 285.82 162.387 285.927 162.409 cv
286.027 162.468 286.165 162.528 286.305 162.577 cv
286.36 162.61 286.462 162.652 286.559 162.695 cv
286.695 162.748 286.797 162.805 286.936 162.871 cv
287.022 162.912 287.067 162.931 287.153 162.972 cv
287.305 163.048 287.408 163.104 287.553 163.181 cv
287.617 163.215 287.685 163.249 287.747 163.278 cv
287.907 163.374 288.102 163.466 288.248 163.581 cv
288.441 163.678 288.58 163.797 288.753 163.896 cv
293.055 166.945 291.932 171.087 294.361 175.098 cv
294.361 175.097 li
294.295 173.879 294.14 172.639 294.052 171.398 cv
294.046 171.35 294.042 171.323 294.036 171.275 cv
294.019 171.102 294.001 170.93 293.985 170.758 cv
293.976 170.641 293.964 170.538 293.954 170.439 cv
293.942 170.29 293.931 170.135 293.919 169.995 cv
293.909 169.876 293.899 169.756 293.892 169.617 cv
293.884 169.488 293.874 169.358 293.868 169.23 cv
293.863 169.08 293.857 168.952 293.852 168.825 cv
293.848 168.703 293.846 168.56 293.842 168.44 cv
293.842 168.306 293.842 168.172 293.842 168.018 cv
293.842 167.902 293.846 167.786 293.848 167.656 cv
293.852 167.511 293.859 167.374 293.866 167.238 cv
293.874 167.126 293.882 166.994 293.892 166.882 cv
293.903 166.741 293.921 166.601 293.936 166.438 cv
293.95 166.334 293.964 166.229 293.979 166.102 cv
294.003 165.955 294.032 165.808 294.06 165.662 cv
294.078 165.553 294.088 165.446 294.088 165.349 cv
294.112 165.192 294.155 165.031 294.198 164.86 cv
294.226 164.775 294.247 164.681 294.275 164.583 cv
294.33 164.404 294.395 164.227 294.43 164.051 cv
294.443 163.98 294.467 163.908 294.494 163.826 cv
294.596 163.588 294.706 163.331 294.791 163.097 cv
294.917 162.836 295.06 162.578 295.175 162.341 cv
295.342 162.067 295.494 161.819 295.636 161.551 cv
295.866 161.15 296.143 160.732 296.377 160.318 cv
296.379 160.315 296.381 160.311 296.381 160.309 cv
296.391 160.296 296.395 160.294 296.405 160.291 cv
296.487 160.157 296.539 160.044 296.604 159.933 cv
297.088 159.155 297.569 158.387 297.99 157.636 cv
298.016 157.594 298.041 157.551 298.064 157.51 cv
298.098 157.476 298.129 157.421 298.161 157.366 cv
298.239 157.255 298.307 157.139 298.352 157.011 cv
298.352 157.01 298.352 157.01 298.352 157.01 cv
298.411 156.933 298.466 156.832 298.522 156.754 cv
298.629 156.592 298.69 156.43 298.795 156.264 cv
298.822 156.214 298.85 156.163 298.879 156.11 cv
298.993 155.925 299.063 155.739 299.173 155.565 cv
299.189 155.545 299.204 155.518 299.22 155.49 cv
299.296 155.368 299.352 155.222 299.399 155.098 cv
299.399 155.094 299.401 155.092 299.403 155.089 cv
299.668 154.638 299.879 154.163 300.073 153.689 cv
300.108 153.628 300.145 153.546 300.183 153.463 cv
300.241 153.351 300.301 153.24 300.359 153.111 cv
300.395 153.043 300.416 152.958 300.416 152.895 cv
300.452 152.8 300.49 152.727 300.527 152.631 cv
300.566 152.555 300.605 152.456 300.646 152.379 cv
300.658 152.348 300.671 152.317 300.683 152.286 cv
300.724 152.194 300.758 152.079 300.759 151.985 cv
300.832 151.806 300.905 151.627 300.972 151.444 cv
300.974 151.443 300.974 151.443 300.974 151.442 cv
300.991 151.383 301.009 151.344 301.028 151.284 cv
301.169 150.764 301.338 150.232 301.461 149.68 cv
301.56 150.066 301.667 150.463 301.763 150.84 cv
301.806 151.012 301.822 151.185 301.839 151.358 cv
301.874 151.529 301.905 151.708 301.936 151.879 cv
302.026 152.385 302.1 152.879 302.146 153.364 cv
302.146 153.366 302.146 153.367 302.146 153.368 cv
302.146 153.368 li
302.164 154.442 302.145 155.511 302.181 156.359 cv
303.223 154.646 304.214 150.657 303.46 148.305 cv
303.46 148.305 li
303.515 148.373 303.569 148.428 303.58 148.502 cv
303.62 148.551 303.659 148.587 303.7 148.641 cv
303.783 148.732 303.867 148.846 303.932 148.938 cv
304.012 149.075 304.113 149.211 304.216 149.337 cv
304.273 149.423 304.295 149.489 304.356 149.577 cv
304.358 149.581 304.362 149.584 304.362 149.587 cv
304.44 149.678 304.52 149.776 304.596 149.881 cv
304.724 150.116 304.887 150.335 305.004 150.577 cv
305.063 150.657 305.125 150.745 305.183 150.828 cv
305.185 150.828 li
305.356 151.165 305.563 151.493 305.713 151.831 cv
307.418 155.143 308.059 159.019 308.935 162.598 cv
309.06 163.065 309.193 163.54 309.285 164.029 cv
309.737 165.844 310.224 167.88 310.602 170.016 cv
310.609 170.266 310.653 170.499 310.698 170.751 cv
310.737 170.967 310.779 171.162 310.816 171.377 cv
310.865 171.665 310.906 171.934 310.949 172.214 cv
310.963 172.394 310.965 172.568 310.992 172.753 cv
311.305 174.989 311.407 177.217 311.28 179.294 cv
311.274 179.382 311.272 179.451 311.265 179.539 cv
311.235 179.866 311.186 180.185 311.139 180.501 cv
311.123 180.611 311.117 180.701 311.102 180.806 cv
311.049 181.105 310.98 181.389 310.957 181.68 cv
310.932 181.797 310.914 181.902 310.887 182.023 cv
310.832 182.214 310.761 182.414 310.698 182.622 cv
310.64 182.803 310.602 182.991 310.573 183.167 cv
310.256 180.08 309.645 174.668 306.087 173.475 cv
305.419 168.474 303.62 163.049 303.595 157.999 cv
303.595 158.016 303.597 158.02 303.597 158.03 cv
303.597 158.035 303.597 158.039 303.597 158.044 cv
303.597 158.021 303.595 158.018 303.595 157.999 cv
303.626 167.113 304.564 176.208 304.392 185.473 cv
305.678 182.132 305.719 178.673 306.832 175.305 cv
306.958 175.415 307.075 175.549 307.149 175.672 cv
307.208 175.72 307.271 175.786 307.328 175.856 cv
307.447 176.016 307.568 176.183 307.704 176.352 cv
307.727 176.385 307.755 176.415 307.776 176.426 cv
307.828 176.563 307.911 176.683 308.001 176.8 cv
308.059 176.894 308.121 176.961 308.15 177.055 cv
308.231 177.199 308.322 177.351 308.416 177.501 cv
308.454 177.573 308.492 177.644 308.492 177.696 cv
308.545 177.801 308.592 177.889 308.644 177.996 cv
308.835 178.351 308.97 178.704 309.131 179.07 cv
309.195 179.233 309.223 179.406 309.289 179.577 cv
309.318 179.652 309.35 179.734 309.377 179.796 cv
309.406 179.882 309.431 179.949 309.458 180.036 cv
309.863 181.29 310.141 182.613 310.365 183.969 cv
310.501 184.67 310.602 185.379 310.7 186.088 cv
310.745 186.371 310.789 186.631 310.834 186.914 cv
310.963 189.055 311.427 191.217 312.008 193.284 cv
312.008 193.298 312.008 193.313 312.008 193.326 cv
312.435 194.831 312.933 196.273 313.414 197.648 cv
314.923 202.132 314.578 207.106 314.092 211.727 cv
314.011 212.371 313.913 213.023 313.805 213.64 cv
313.771 214.071 313.684 214.469 313.596 214.889 cv
313.508 215.308 313.416 215.701 313.361 216.111 cv
313.265 216.51 313.169 216.913 313.072 217.282 cv
313.072 217.361 313.063 217.436 313.044 217.493 cv
312.65 218.002 312.257 218.514 311.853 219.023 cv
309.826 225.267 306.699 230.797 303.797 237.337 cv
303.799 237.336 303.799 237.336 303.799 237.336 cv
303.799 237.336 303.799 237.336 303.799 237.337 cv
307.447 234.33 309.31 228.528 311.305 224.35 cv
313.775 230.941 310.994 241.851 308.491 247.855 cv
308.244 248.384 308.026 248.917 307.789 249.507 cv
307.789 249.516 307.789 249.523 307.789 249.531 cv
307.435 250.355 307.065 251.27 306.695 252.182 cv
306.68 252.224 li
305.115 256.13 303.628 260.597 303.544 264.692 cv
303.542 264.74 303.542 264.787 303.542 264.833 cv
303.532 265.19 303.532 265.542 303.548 265.891 cv
303.481 268.122 303.57 270.275 304.448 273.882 cv
304.637 275.196 305.021 276.696 305.68 278.478 cv
305.891 279.511 306.041 280.645 306.183 281.796 cv
306.035 285.039 305.816 288.549 306.678 291.461 cv
306.744 292.627 306.781 293.751 306.448 294.726 cv
cp
282.309 279.346 mo
282.005 280.843 281.747 282.91 281.508 285.715 cv
281.461 285.856 281.432 286.038 281.41 286.178 cv
263.221 284.951 250.943 284.491 241.817 284.462 cv
240.077 284.47 238.368 284.481 236.71 284.498 cv
232.649 284.571 229.295 284.697 226.229 284.916 cv
226.229 284.916 li
226.214 284.918 226.185 284.921 226.157 284.923 cv
232.861 285.373 li
242.271 285.561 256.082 286.3 280.673 288.051 cv
280.394 288.54 280.147 289.12 280.025 289.613 cv
278.436 289.404 276.852 289.204 275.283 288.972 cv
263.85 287.857 252.198 287.2 240.512 287.008 cv
236.475 286.901 232.479 286.864 228.441 286.888 cv
227.298 286.854 226.654 286.857 226.586 286.897 cv
226.586 286.897 li
226.586 286.898 li
226.595 286.899 226.62 286.901 226.643 286.901 cv
216.611 287.009 206.562 287.472 196.536 288.245 cv
197.565 288.228 li
190.84 288.764 184.165 289.423 177.55 290.25 cv
177.556 290.238 177.563 290.226 177.569 290.213 cv
177.156 290.271 176.746 290.287 176.351 290.345 cv
176.355 290.356 176.359 290.367 176.363 290.379 cv
174.18 290.642 172.005 290.97 169.857 291.269 cv
169.853 291.261 169.85 291.253 169.847 291.245 cv
169.809 291.164 169.771 291.083 169.736 291 cv
169.746 290.982 169.755 290.982 169.766 290.978 cv
169.744 290.962 169.715 290.941 169.706 290.922 cv
169.541 290.508 169.377 290.056 169.249 289.583 cv
181.152 287.849 205.433 285.857 221.61 285.087 cv
222.795 285.014 223.893 284.928 224.942 284.83 cv
221.989 284.672 219.023 284.557 216.073 284.499 cv
200.37 284.855 179.012 286.753 168.796 287.772 cv
168.795 287.767 168.794 287.762 168.792 287.756 cv
168.635 287.026 168.489 286.297 168.329 285.613 cv
168.141 283.625 167.938 282.124 167.684 280.898 cv
186.654 278.324 205.976 276.978 225.514 276.978 cv
231.775 276.978 238.074 277.141 244.38 277.403 cv
254.112 277.435 267.226 277.726 278.163 278.771 cv
279.292 278.931 280.377 279.061 281.502 279.222 cv
281.773 279.262 282.055 279.297 282.31 279.338 cv
282.309 279.34 282.309 279.343 282.309 279.346 cv
cp
166.682 277.659 mo
166.076 276.459 165.437 275.983 164.821 275.261 cv
166.198 280.464 166.551 290.2 166.583 291.066 cv
166.446 291.945 166.483 292.831 166.118 293.617 cv
165.656 293.96 165.13 294.354 164.523 294.816 cv
164.317 294.942 164.169 295.084 164.04 295.19 cv
163.765 295.258 163.49 295.341 163.165 295.411 cv
161.451 295.73 159.214 293.301 156.513 296.468 cv
152.997 297.506 151.455 294.077 149.826 295.581 cv
148.88 296.825 147.65 297.205 146.94 296.506 cv
146.903 296.394 146.863 296.282 146.854 296.215 cv
146.822 296.232 146.787 296.232 146.754 296.256 cv
146.525 295.924 146.385 295.469 146.362 294.828 cv
146.341 294.853 146.29 289.542 146.261 289.58 cv
145.231 291.868 144.174 295.039 145.31 296.93 cv
144.805 296.846 144.37 296.764 144.112 296.695 cv
143.897 296.592 143.7 296.479 143.528 296.298 cv
143.193 295.322 143.242 294.199 143.342 293.079 cv
144.181 290.164 143.982 286.653 143.814 283.367 cv
143.941 282.218 144.105 281.128 144.305 280.096 cv
144.953 278.314 145.339 276.809 145.549 275.499 cv
146.445 271.849 146.516 269.695 146.47 267.487 cv
146.47 267.487 li
146.486 267.14 146.486 266.786 146.477 266.439 cv
146.477 266.439 li
146.476 266.402 146.476 266.356 146.475 266.309 cv
146.475 266.309 146.475 266.308 146.475 266.307 cv
146.377 263.236 145.53 259.935 144.455 256.848 cv
144.452 256.838 144.449 256.829 144.445 256.818 cv
144.275 256.309 144.098 255.848 143.918 255.35 cv
143.896 255.293 143.88 255.236 143.874 255.22 cv
143.699 254.755 143.528 254.294 143.347 253.841 cv
143.347 253.827 143.346 253.817 143.34 253.817 cv
143.323 253.797 li
143.312 253.77 143.301 253.745 143.291 253.719 cv
143.128 253.298 142.966 252.886 142.805 252.483 cv
142.775 252.415 142.745 252.382 142.715 252.31 cv
142.569 251.943 142.424 251.585 142.28 251.235 cv
142.262 251.191 142.244 251.148 142.226 251.105 cv
142.222 251.098 142.219 251.089 142.215 251.08 cv
142.179 251.013 142.144 250.955 142.122 250.87 cv
142.003 250.612 141.901 250.316 141.779 250.069 cv
141.701 249.877 141.601 249.642 141.528 249.459 cv
138.98 243.421 136.234 232.518 138.693 225.944 cv
140.685 230.122 142.536 235.924 146.198 238.93 cv
146.197 238.93 li
146.198 238.93 146.198 238.93 146.199 238.93 cv
142.025 229.495 137.352 222.131 136.189 211.727 cv
135.681 207.106 135.336 202.132 136.861 197.648 cv
137.348 196.273 137.824 194.831 138.254 193.326 cv
138.255 193.313 138.255 193.298 138.255 193.284 cv
138.831 191.217 139.303 189.055 139.448 186.914 cv
140.068 182.578 140.728 178.137 143.428 175.305 cv
144.402 178.245 144.583 181.269 145.456 184.211 cv
145.578 184.641 145.711 185.047 145.867 185.473 cv
145.867 185.47 li
145.868 185.471 145.868 185.472 145.868 185.473 cv
145.717 176.208 146.632 167.113 146.665 157.999 cv
146.665 158.02 146.663 158.038 146.662 158.068 cv
146.662 158.071 146.662 158.074 146.662 158.077 cv
146.662 158.044 146.664 158.02 146.664 157.999 cv
146.638 163.049 144.84 168.474 144.17 173.475 cv
142.241 174.136 141.193 176.022 140.571 178.106 cv
140.547 178.174 140.535 178.251 140.517 178.336 cv
140.464 178.506 140.418 178.68 140.37 178.852 cv
140.364 178.91 140.351 178.989 140.332 179.055 cv
140.295 179.21 140.263 179.35 140.23 179.492 cv
140.206 179.582 140.184 179.694 140.181 179.784 cv
140.171 179.835 140.164 179.885 140.155 179.927 cv
139.932 181.099 139.816 182.229 139.708 183.167 cv
137.763 177.184 139.916 168.251 141.325 162.598 cv
142.223 159.019 142.864 155.143 144.546 151.831 cv
144.718 151.493 144.903 151.164 145.098 150.828 cv
145.106 150.792 145.138 150.743 145.169 150.693 cv
145.193 150.657 145.217 150.637 145.242 150.597 cv
145.387 150.348 145.533 150.121 145.686 149.879 cv
145.688 149.877 145.688 149.876 145.689 149.874 cv
145.762 149.776 145.814 149.684 145.886 149.599 cv
145.89 149.595 145.892 149.591 145.895 149.586 cv
146.04 149.366 146.187 149.145 146.341 148.927 cv
146.412 148.848 146.486 148.747 146.539 148.669 cv
146.639 148.551 146.718 148.419 146.819 148.306 cv
146.73 148.553 146.671 148.802 146.595 149.064 cv
146.567 149.15 146.539 149.253 146.513 149.344 cv
146.49 149.499 146.451 149.655 146.413 149.81 cv
146.35 150.084 146.317 150.335 146.272 150.607 cv
146.264 150.657 146.252 150.708 146.244 150.77 cv
146.215 150.958 146.192 151.145 146.174 151.331 cv
146.171 151.357 146.169 151.371 146.167 151.402 cv
146.137 151.998 146.142 152.577 146.197 153.111 cv
146.197 153.111 li
146.139 154.314 146.225 155.389 146.669 156.124 cv
146.602 154.428 148.27 151.52 148.802 149.68 cv
148.805 149.697 148.811 149.714 148.814 149.731 cv
148.819 149.753 148.825 149.772 148.83 149.777 cv
148.92 150.126 149.002 150.458 149.109 150.783 cv
149.238 151.236 149.377 151.703 149.538 152.134 cv
149.548 152.164 149.558 152.194 149.569 152.223 cv
149.748 152.702 149.947 153.167 150.158 153.633 cv
150.182 153.679 150.205 153.735 150.208 153.789 cv
150.415 154.23 150.636 154.682 150.865 155.108 cv
150.899 155.174 150.912 155.219 150.945 155.284 cv
151.174 155.723 151.413 156.134 151.637 156.564 cv
151.676 156.617 151.716 156.681 151.755 156.751 cv
151.983 157.159 152.237 157.586 152.488 158.012 cv
152.516 158.06 152.559 158.13 152.601 158.19 cv
152.856 158.631 153.136 159.071 153.395 159.517 cv
153.674 159.943 153.931 160.395 154.208 160.828 cv
154.233 160.871 154.246 160.912 154.261 160.954 cv
154.545 161.403 154.807 161.874 155.084 162.341 cv
157.328 166.31 156.127 170.815 155.92 175.098 cv
155.92 175.097 155.92 175.097 155.921 175.096 cv
155.921 175.097 155.921 175.097 155.921 175.097 cv
158.35 171.087 157.206 166.945 161.528 163.896 cv
163.97 162.185 168.924 160.645 172.354 160.706 cv
172.531 161.288 172.712 161.872 172.882 162.435 cv
172.882 162.436 li
172.922 162.568 172.96 162.679 172.998 162.791 cv
173.054 162.968 173.08 163.145 173.134 163.322 cv
173.23 163.698 173.346 164.074 173.427 164.453 cv
173.428 164.456 173.429 164.46 173.43 164.463 cv
173.435 164.484 173.44 164.5 173.445 164.502 cv
173.453 164.533 173.458 164.564 173.464 164.593 cv
173.605 165.202 173.754 165.802 173.863 166.421 cv
173.977 167.048 174.096 167.677 174.176 168.331 cv
174.118 168.269 174.078 168.211 174.021 168.169 cv
174.21 168.537 li
174.367 169.724 174.466 170.911 174.516 172.106 cv
174.517 172.127 174.517 172.148 174.518 172.169 cv
174.526 172.361 174.522 172.556 174.527 172.744 cv
174.535 173.095 174.546 173.447 174.543 173.81 cv
174.542 173.896 174.542 173.967 174.541 174.044 cv
174.533 174.605 174.512 175.165 174.475 175.72 cv
174.473 175.73 174.473 175.754 174.471 175.779 cv
174.466 176.132 174.427 176.489 174.392 176.845 cv
174.367 177.095 174.352 177.321 174.322 177.571 cv
174.315 177.64 174.304 177.687 174.296 177.757 cv
174.295 177.759 174.295 177.762 174.295 177.763 cv
174.285 177.949 174.26 178.136 174.233 178.322 cv
174.186 178.631 174.144 178.939 174.111 179.249 cv
174.083 179.407 174.053 179.577 174.023 179.744 cv
174.023 179.744 li
174.013 179.781 174 179.84 173.99 179.899 cv
173.933 180.276 173.862 180.634 173.776 181.015 cv
173.762 181.169 173.729 181.33 173.691 181.499 cv
173.69 181.502 173.69 181.504 173.689 181.506 cv
173.573 182.063 173.422 182.645 173.274 183.229 cv
173.23 183.388 173.195 183.56 173.138 183.739 cv
173.119 183.786 173.097 183.858 173.077 183.928 cv
173.059 184.045 173.018 184.163 172.974 184.31 cv
172.948 184.373 172.919 184.463 172.892 184.53 cv
172.871 184.665 172.827 184.786 172.781 184.91 cv
172.75 185.008 172.716 185.086 172.705 185.185 cv
172.659 185.308 172.611 185.429 172.561 185.556 cv
172.527 185.663 172.509 185.751 172.472 185.86 cv
172.421 185.986 172.369 186.112 172.337 186.243 cv
172.296 186.357 172.255 186.451 172.213 186.567 cv
172.175 186.701 172.12 186.838 172.061 186.976 cv
172.018 187.091 171.997 187.185 171.953 187.29 cv
171.889 187.448 171.825 187.595 171.78 187.743 cv
171.734 187.836 171.69 187.952 171.653 188.047 cv
171.594 188.206 171.52 188.367 171.467 188.529 cv
171.422 188.638 171.378 188.724 171.332 188.835 cv
171.268 189.02 171.178 189.209 171.11 189.392 cv
171.072 189.465 171.036 189.552 170.997 189.619 cv
170.889 189.896 170.769 190.153 170.64 190.432 cv
170.613 190.468 170.599 190.527 170.58 190.585 cv
170.468 190.795 170.376 191.007 170.259 191.229 cv
170.23 191.326 170.177 191.42 170.125 191.505 cv
170.051 191.68 169.955 191.854 169.878 192.028 cv
169.817 192.148 169.755 192.248 169.714 192.368 cv
169.622 192.526 169.544 192.685 169.455 192.842 cv
169.387 192.948 169.34 193.074 169.271 193.179 cv
169.192 193.33 169.105 193.478 169.012 193.626 cv
168.96 193.755 168.886 193.861 168.834 193.967 cv
168.737 194.129 168.66 194.277 168.563 194.42 cv
168.489 194.525 168.434 194.649 168.357 194.753 cv
168.278 194.895 168.176 195.036 168.096 195.182 cv
168.018 195.296 167.956 195.396 167.884 195.516 cv
167.786 195.656 167.691 195.792 167.604 195.93 cv
167.527 196.042 167.449 196.136 167.393 196.234 cv
167.275 196.392 167.177 196.531 167.079 196.67 cv
167.007 196.755 166.936 196.848 166.883 196.935 cv
166.733 197.106 166.602 197.284 166.47 197.454 cv
166.425 197.488 166.381 197.546 166.358 197.6 cv
166.181 197.807 166.001 198.003 165.819 198.205 cv
165.754 198.276 165.688 198.336 165.645 198.388 cv
165.503 198.516 165.382 198.665 165.26 198.786 cv
165.177 198.859 165.114 198.921 165.029 198.999 cv
164.923 199.097 164.795 199.21 164.686 199.31 cv
164.615 199.387 164.522 199.441 164.441 199.517 cv
164.326 199.599 164.222 199.7 164.095 199.773 cv
164.02 199.847 163.921 199.91 163.845 199.961 cv
163.738 200.049 163.615 200.112 163.51 200.193 cv
163.41 200.255 163.331 200.294 163.229 200.354 cv
163.124 200.427 163.017 200.475 162.888 200.54 cv
162.807 200.593 162.705 200.622 162.623 200.669 cv
162.513 200.73 162.382 200.781 162.271 200.811 cv
162.169 200.85 162.088 200.892 161.985 200.926 cv
161.869 200.962 161.751 200.985 161.628 201.022 cv
161.534 201.047 161.456 201.076 161.355 201.098 cv
161.225 201.127 161.092 201.141 160.937 201.143 cv
160.87 201.153 160.783 201.171 160.715 201.177 cv
160.513 201.194 160.309 201.194 160.103 201.184 cv
160.083 201.183 160.064 201.185 160.052 201.184 cv
160.052 201.183 160.051 201.182 160.043 201.181 cv
159.841 201.166 159.637 201.142 159.432 201.114 cv
159.359 201.1 159.307 201.081 159.234 201.063 cv
159.083 201.024 158.931 200.976 158.778 200.94 cv
158.705 200.917 158.645 200.893 158.581 200.868 cv
158.368 200.792 158.155 200.706 157.942 200.608 cv
157.942 200.605 157.942 200.603 157.942 200.6 cv
157.733 200.365 157.505 200.141 157.275 199.922 cv
156.799 199.14 155.844 197.857 155.399 197.074 cv
155.005 196.175 154.65 195.287 154.302 194.441 cv
154.23 194.233 154.134 194.029 154.062 193.826 cv
154.006 193.717 153.95 193.6 153.895 193.48 cv
153.759 193.161 153.624 192.848 153.483 192.547 cv
153.52 192.733 153.543 192.927 153.575 193.124 cv
153.575 193.124 153.574 193.124 153.574 193.124 cv
153.543 193.077 153.535 193.007 153.502 192.941 cv
153.491 194.481 153.894 195.88 154.46 197.2 cv
154.446 197.234 154.44 197.269 154.428 197.286 cv
154.428 197.286 li
154.421 197.367 154.394 197.447 154.376 197.506 cv
154.376 197.507 154.376 197.507 154.376 197.507 cv
154.37 197.536 154.367 197.563 154.363 197.592 cv
154.359 197.619 154.354 197.636 154.35 197.655 cv
154.342 197.714 154.328 197.77 154.324 197.807 cv
153.97 197.512 153.61 197.228 153.242 196.936 cv
153.211 196.933 153.191 196.912 153.173 196.889 cv
152.794 196.592 152.404 196.335 152 196.082 cv
151.998 196.08 151.997 196.08 151.997 196.079 cv
150.576 194.931 149.008 193.65 148.504 193.564 cv
149.872 194.712 153.93 199.055 155.284 200.4 cv
155.365 200.578 155.458 200.752 155.537 200.93 cv
155.734 201.313 155.934 201.69 156.119 202.077 cv
156.194 202.258 156.284 202.437 156.356 202.615 cv
156.371 202.65 156.386 202.683 156.402 202.713 cv
156.565 203.063 156.73 203.414 156.888 203.761 cv
156.987 203.953 157.06 204.163 157.16 204.374 cv
157.167 204.391 157.174 204.408 157.182 204.426 cv
157.32 204.752 157.462 205.081 157.592 205.407 cv
157.592 205.407 157.592 205.407 157.593 205.409 cv
157.701 205.653 157.775 205.873 157.878 206.116 cv
157.885 206.136 157.893 206.153 157.9 206.174 cv
158.008 206.46 158.119 206.752 158.239 207.053 cv
158.239 207.055 158.24 207.057 158.24 207.057 cv
158.318 207.287 158.405 207.537 158.478 207.787 cv
158.494 207.811 158.509 207.858 158.525 207.904 cv
158.627 208.156 158.71 208.426 158.805 208.676 cv
158.829 208.819 158.87 208.942 158.912 209.064 cv
158.952 209.202 158.993 209.317 159.013 209.432 cv
159.03 209.489 159.046 209.545 159.063 209.58 cv
159.145 209.83 159.209 210.077 159.283 210.308 cv
159.283 210.308 159.284 210.308 159.284 210.31 cv
159.339 210.488 159.364 210.668 159.413 210.846 cv
159.436 210.947 159.462 211.023 159.487 211.123 cv
159.544 211.391 159.628 211.661 159.698 211.95 cv
159.746 212.215 159.801 212.504 159.863 212.77 cv
159.902 213.054 159.97 213.315 160.024 213.584 cv
160.025 213.584 li
160.052 213.753 160.056 213.904 160.081 214.054 cv
160.102 214.18 160.125 214.304 160.147 214.45 cv
160.192 214.708 160.224 214.983 160.261 215.246 cv
160.261 215.247 160.261 215.249 160.261 215.249 cv
160.281 215.389 160.294 215.529 160.309 215.688 cv
160.327 215.855 160.347 216.019 160.365 216.182 cv
160.392 216.419 160.406 216.677 160.427 216.919 cv
160.427 216.919 160.428 216.919 160.428 216.92 cv
160.453 217.244 160.465 217.551 160.479 217.858 cv
160.481 217.907 160.484 217.956 160.487 217.984 cv
160.497 218.206 160.517 218.423 160.522 218.645 cv
160.526 218.766 160.522 218.89 160.522 219.023 cv
160.525 219.333 160.527 219.634 160.523 219.938 cv
160.521 220.081 160.527 220.242 160.523 220.388 cv
160.508 220.936 160.476 221.477 160.434 222.034 cv
160.431 222.083 160.431 222.127 160.427 222.175 cv
160.427 222.178 160.426 222.178 160.425 222.178 cv
160.403 222.711 160.344 223.258 160.274 223.811 cv
160.253 223.975 160.229 224.143 160.222 224.309 cv
160.17 224.732 160.105 225.153 160.052 225.571 cv
160.025 225.738 159.997 225.906 159.966 226.075 cv
159.871 226.658 159.766 227.248 159.654 227.829 cv
158.533 233.388 156.567 238.646 156.331 244.336 cv
156.102 249.372 156.714 254.673 156.004 259.563 cv
156.004 259.561 156.004 259.561 156.004 259.561 cv
156.004 259.561 156.004 259.561 156.004 259.563 cv
158.682 255.885 157.655 251.134 158.358 246.744 cv
159.037 242.473 160.236 238.119 161.269 233.984 cv
161.279 234.098 161.3 234.211 161.329 234.313 cv
161.383 234.523 161.44 234.73 161.46 234.944 cv
161.48 235.037 161.492 235.15 161.509 235.25 cv
161.547 235.475 161.587 235.677 161.613 235.904 cv
161.627 236.029 161.628 236.178 161.628 236.303 cv
161.639 236.503 161.66 236.704 161.669 236.902 cv
161.679 237.121 161.677 237.359 161.677 237.598 cv
161.677 237.692 161.682 237.785 161.681 237.902 cv
161.627 241.913 160.319 246.222 159.952 249.956 cv
159.4 255.523 159.618 265.23 161.298 270.888 cv
161.298 270.887 161.298 270.886 161.298 270.886 cv
161.298 270.886 161.299 270.887 161.299 270.888 cv
161.281 270.694 161.277 270.534 161.277 270.339 cv
161.251 270.004 161.221 269.672 161.203 269.323 cv
161.179 268.89 161.169 268.434 161.162 267.954 cv
161.161 267.869 161.157 267.83 161.156 267.744 cv
161.146 266.654 161.18 265.517 161.247 264.345 cv
161.312 264.506 161.434 264.683 161.55 264.856 cv
162.26 265.9 163.648 267.487 164.914 268.9 cv
165.837 269.639 166.738 270.392 167.443 271.349 cv
168.998 273.372 170.374 276.261 171.275 278.693 cv
170.914 278.734 170.674 278.798 170.477 278.851 cv
169.872 279.02 169.638 279.061 167.057 279.272 cv
166.93 278.696 166.811 278.147 166.682 277.659 cv
cp
183.19 168.019 mo
184.09 168.354 184.989 168.682 185.886 168.993 cv
184.975 168.708 184.074 168.374 183.19 168.019 cv
cp
209.867 189.085 mo
201.876 189.085 193.368 192.33 193.368 187.626 cv
193.368 184.512 195.813 180.807 200.39 177.882 cv
202.761 176.377 205.709 175.066 209.197 174.188 cv
212.217 173.442 215.01 172.818 217.303 172.915 cv
220.893 173.07 223.259 174.977 223.259 180.87 cv
223.259 190.466 217.878 189.085 209.867 189.085 cv
cp
222.756 205.493 mo
222.756 205.493 220.325 201.185 211.41 201.88 cv
204.349 202.438 196.359 202.364 196.359 199.743 cv
196.359 194.9 203.224 194.986 210.325 194.986 cv
217.415 194.986 224.977 193.319 222.756 205.493 cv
cp
211.137 212.027 mo
204.132 213.163 200.568 214.456 200.568 211.831 cv
200.568 211.831 205.291 208.155 212.397 208.155 cv
221.842 208.155 223.88 208.454 222.378 218.653 cv
222.378 218.653 221.752 210.323 211.137 212.027 cv
cp
186.37 190.316 mo
186.892 191.943 191.54 192.951 196.359 194.499 cv
196.359 194.499 189.449 196.681 190.479 200.4 cv
191.413 203.734 191.108 206.174 198.46 207.57 cv
199.627 207.799 198.46 207.57 195.73 208.669 cv
193.137 209.705 198.018 214.335 197.669 216.111 cv
197.275 214.143 192.761 210.556 191.122 208.907 cv
189.425 207.246 185.997 206.537 184.53 203.767 cv
189.761 206.537 189.266 196.847 187.014 194.836 cv
182.638 194.833 177.737 189.395 176.229 186.016 cv
176.105 185.716 175.999 185.431 175.914 185.183 cv
176.06 185.265 176.217 185.354 176.357 185.426 cv
180.442 187.82 182.582 187.358 184.53 183.229 cv
185.423 181.329 187.224 177.169 190.639 177.621 cv
190.64 177.621 190.642 177.621 190.644 177.621 cv
190.644 177.621 190.643 177.621 190.643 177.622 cv
186.874 182.566 185.458 187.492 186.37 190.316 cv
cp
173.926 278.017 mo
173.568 278.065 173.206 278.107 172.848 278.157 cv
171.143 274.556 169.518 269.243 167.223 267.877 cv
162.643 265.185 162.096 261.458 161.817 257.832 cv
162.723 250.327 164.324 242.309 165.199 235.869 cv
166.555 225.855 164.474 217.445 163.233 208.075 cv
164.203 206.564 165.557 205.167 167.295 203.417 cv
167.689 203.031 168.058 202.628 168.423 202.226 cv
168.897 202.753 173.923 209.844 174.223 210.429 cv
174.988 211.905 175.339 214.838 175.869 216.249 cv
176.746 218.672 182.015 225.102 180.323 233.277 cv
179.91 235.32 175.261 246.781 173.872 251.351 cv
172.507 255.836 168.568 263.016 168.096 266.085 cv
170.227 268.255 172.892 272.842 173.926 278.017 cv
cp
185.293 235.475 mo
194.541 237.074 203.056 240.863 212.114 242.255 cv
207.332 242.238 201.39 241.568 196.682 240.633 cv
192.356 239.76 189.66 238.305 184.453 237.711 cv
183.837 239.334 183.255 240.846 182.711 241.933 cv
180.335 246.648 178.006 251.575 175.655 256.234 cv
178.055 250.48 181.295 244.044 183.471 237.605 cv
183.401 237.604 183.316 237.602 183.245 237.598 cv
183.965 235.25 li
184.057 235.262 184.129 235.281 184.219 235.295 cv
184.739 233.535 183.602 231.76 183.148 229.267 cv
182.141 226.075 182.141 226.075 182.141 226.075 cv
186.061 227.113 197.64 230.83 201.881 231.627 cv
207.12 232.588 211.52 233.639 217.793 234.834 cv
207.257 234.834 194.827 230.918 185.618 228.582 cv
186.503 231.458 186.068 233.4 185.293 235.475 cv
cp
267.067 168.019 mo
266.208 168.374 265.287 168.707 264.392 168.993 cv
264.39 168.993 li
265.208 168.708 265.982 168.41 266.799 168.131 cv
266.903 168.094 267.007 168.056 267.067 168.019 cv
cp
274.653 277.652 mo
274.764 277.659 274.925 277.69 275.092 277.735 cv
274.925 277.717 274.756 277.695 274.629 277.677 cv
274.637 277.659 274.646 277.659 274.653 277.652 cv
cp
240.994 208.155 mo
246.664 208.063 251.782 210.77 251.997 211.852 cv
252.555 214.419 248.606 212.52 241.517 212.027 cv
230.209 211.279 230.102 218.653 230.102 218.653 cv
228.62 208.454 231.536 208.325 240.994 208.155 cv
cp
242.171 194.986 mo
249.277 194.986 256.121 194.9 256.121 199.743 cv
256.121 202.364 248.729 202.007 241.684 201.45 cv
232.769 200.754 229.744 205.493 229.744 205.493 cv
227.521 193.319 235.063 194.986 242.171 194.986 cv
cp
244.729 188.653 mo
236.74 188.653 228.555 190.704 228.555 181.108 cv
228.555 175.786 230.447 173.714 233.48 173.251 cv
235.94 172.865 239.132 173.549 242.616 174.426 cv
245.953 175.267 248.806 176.502 251.161 177.945 cv
255.894 180.88 258.446 184.68 258.446 187.841 cv
258.446 192.548 252.72 188.653 244.729 188.653 cv
cp
260.523 177.621 mo
263.942 177.163 265.742 181.329 266.658 183.229 cv
268.434 187.083 270.444 187.746 274.022 185.886 cv
274.4 185.681 274.803 185.444 275.252 185.183 cv
275.098 185.772 274.742 186.484 274.31 187.251 cv
272.31 190.583 268.051 194.834 264.175 194.836 cv
261.899 196.847 261.385 206.537 266.658 203.767 cv
265.192 206.537 261.744 207.246 260.045 208.907 cv
258.405 210.556 253.915 214.143 253.498 216.111 cv
253.171 214.335 258.031 209.705 255.424 208.669 cv
252.707 207.57 251.541 207.799 252.707 207.57 cv
260.058 206.174 259.754 203.734 260.68 200.4 cv
261.74 196.681 254.808 194.499 254.808 194.499 cv
259.635 192.951 264.275 191.943 264.818 190.316 cv
265.709 187.492 264.293 182.566 260.523 177.621 cv
cp
265.695 228.809 mo
256.488 231.122 243.911 234.834 233.372 234.834 cv
239.649 233.639 244.07 232.588 249.309 231.627 cv
253.551 230.83 265.13 227.113 269.049 226.075 cv
269.049 226.075 269.049 226.075 268.041 229.267 cv
268.326 231.002 266.429 233.535 266.972 235.295 cv
267.02 235.281 267.11 235.262 267.202 235.25 cv
267.944 237.598 li
267.851 237.602 267.768 237.604 267.711 237.605 cv
269.872 244.044 273.11 250.48 275.512 256.234 cv
273.161 251.575 270.853 246.648 268.455 241.933 cv
267.917 240.846 267.352 239.334 266.713 237.711 cv
261.506 238.305 258.832 239.76 254.486 240.633 cv
249.789 241.568 243.815 242.238 239.053 242.255 cv
248.112 240.863 256.626 237.074 265.896 235.475 cv
265.1 233.4 265.913 231.323 265.695 228.809 cv
cp
282.502 201.737 mo
282.523 201.758 284.105 204.563 284.125 204.585 cv
284.051 204.654 283.971 204.754 283.885 204.841 cv
283.943 204.807 284.037 204.708 284.148 204.607 cv
285.306 205.83 286.314 206.922 287.047 208.075 cv
285.785 217.445 283.704 225.855 285.06 235.869 cv
285.65 240.117 286.533 245.05 287.346 250.049 cv
287.338 250.06 287.332 250.07 287.324 250.081 cv
287.641 252.141 287.925 254.201 288.157 256.262 cv
287.901 259.845 287.375 263.613 282.796 266.305 cv
280.868 267.44 279.407 271.31 277.998 274.628 cv
277.632 275.264 277.287 275.903 276.973 276.576 cv
276.936 276.572 276.899 276.568 276.863 276.563 cv
276.884 276.599 276.892 276.618 276.907 276.667 cv
276.852 276.815 276.81 276.953 276.741 277.058 cv
276.148 276.958 275.435 276.955 274.888 276.958 cv
275.336 275.809 275.831 274.673 276.436 273.569 cv
277.557 270.031 278.663 267.697 281.273 264.886 cv
280.983 263.674 278.374 255.396 277.014 250.998 cv
274.204 241.898 268.685 233.869 270.511 230.285 cv
271.62 228.044 273.336 222.933 274.4 220.596 cv
276.324 216.443 275.464 212.883 276.036 211.453 cv
278.077 208.505 280.443 204.674 282.502 201.737 cv
cp
151.081 135.549 mo
151.9 130.048 155.206 123.873 159.354 120.063 cv
161.335 118.24 163.597 116.618 166.019 115.407 cv
167.027 114.895 168.215 114.276 169.282 113.893 cv
169.639 113.771 170.097 113.701 170.584 113.648 cv
170.994 113.668 171.436 113.849 171.825 114.369 cv
171.84 114.289 171.858 114.212 171.838 114.374 cv
171.839 114.373 171.839 114.373 171.839 114.373 cv
171.839 114.374 li
172.002 113.959 172.169 113.538 172.355 113.142 cv
172.38 113.114 172.424 113.076 172.465 113.036 cv
172.465 112.9 li
172.64 112.538 172.835 112.189 173.045 111.849 cv
173.06 111.801 173.082 111.752 173.112 111.726 cv
173.763 110.674 174.552 109.705 175.442 108.833 cv
175.602 108.554 175.776 108.262 175.956 107.995 cv
178.715 104.933 182.455 101.923 186.118 99.6968 cv
192.395 95.9087 197.673 94.7432 201.323 94.4429 cv
200.855 99.1206 200.432 103.91 198.51 108.203 cv
201.908 103.502 202.006 97.3408 203.113 91.9297 cv
204.171 86.6992 204.627 80.2744 204.582 75.3149 cv
205.127 75.2793 204.582 75.3149 205.05 74.7983 cv
204.982 75.2222 204.932 75.6299 204.909 76.0415 cv
204.714 80.0107 206.149 83.3174 208.509 85.9297 cv
209.622 89.1387 210.579 92.5625 212.178 95.7529 cv
214.522 100.409 218.37 106.929 218.622 112.176 cv
218.628 107.884 217.956 104.09 216.066 100.171 cv
215.322 98.6494 214.423 97.0557 213.572 95.4336 cv
210.893 88.707 211.474 86.498 217.684 91.0557 cv
222.63 94.6968 223.205 95.0869 226.167 95.2134 cv
229.346 95.3301 233.858 88.9644 235.903 88.9644 cv
237.479 88.9644 236.11 95.8076 235.305 98.0664 cv
234.917 98.772 234.547 99.479 234.214 100.171 cv
232.302 104.09 231.632 107.884 231.636 112.176 cv
231.889 106.929 235.736 100.409 238.104 95.7529 cv
239.68 92.5625 240.648 89.1387 241.75 85.9297 cv
244.133 83.3174 245.566 80.0107 245.349 76.0415 cv
245.327 75.6299 245.275 75.2222 245.213 74.7983 cv
245.677 75.3149 245.153 75.2793 245.677 75.3149 cv
245.632 80.2744 246.087 86.6992 247.159 91.9297 cv
248.273 97.3408 248.373 103.502 251.771 108.203 cv
249.827 103.91 249.425 99.1206 248.958 94.4429 cv
252.602 94.7432 257.867 95.9087 264.163 99.6968 cv
267.95 101.993 271.82 105.153 274.607 108.315 cv
274.856 108.649 275.103 108.995 275.352 109.359 cv
276.084 110.152 276.727 110.995 277.254 111.912 cv
277.266 111.915 277.281 111.935 277.293 111.956 cv
277.495 112.265 277.642 112.583 277.816 112.9 cv
277.816 113.036 li
277.855 113.076 277.9 113.114 277.916 113.142 cv
278.113 113.538 278.259 113.959 278.421 114.374 cv
278.401 114.212 278.419 114.289 278.433 114.369 cv
278.844 113.849 279.286 113.668 279.674 113.648 cv
280.163 113.701 280.643 113.771 281.001 113.893 cv
282.066 114.276 283.232 114.895 284.244 115.407 cv
286.685 116.618 288.925 118.24 290.914 120.063 cv
295.074 123.873 298.358 130.048 299.189 135.549 cv
300.398 143.585 299.01 152.627 293.995 159.122 cv
293.023 160.367 292.116 160.861 291.257 160.895 cv
289.293 160.971 287.438 158.766 285.289 157.283 cv
282.882 155.64 280.728 153.68 278.655 151.696 cv
276.275 149.383 274.633 146.556 272.325 144.254 cv
273.002 146.972 274.099 149.574 274.931 152.231 cv
275.427 153.813 276.006 155.386 276.232 157.018 cv
276.328 157.578 276.318 158.189 276.33 158.78 cv
276.336 158.983 276.342 159.187 276.355 159.387 cv
276.148 159.722 275.946 160.068 275.778 160.42 cv
275.727 160.498 275.675 160.598 275.622 160.676 cv
275.445 160.995 275.314 161.32 275.149 161.64 cv
275.128 161.689 275.105 161.715 275.103 161.764 cv
274.962 162.096 274.803 162.432 274.698 162.776 cv
270.043 166.529 263.826 169.376 258.228 170.351 cv
258.456 170.344 258.667 170.326 258.921 170.304 cv
258.838 170.318 258.76 170.337 258.679 170.351 cv
258.813 170.35 258.932 170.345 259.029 170.343 cv
259.016 170.345 259.002 170.349 258.986 170.351 cv
264.616 170.315 268.414 169.085 273.338 167.695 cv
273.288 168.178 273.208 168.646 273.138 169.116 cv
273.118 169.241 273.101 169.389 273.083 169.515 cv
273.055 169.737 273.021 169.94 272.996 170.163 cv
263.521 173.956 239.563 174.274 230.897 165.376 cv
229.716 162.812 228.695 160.062 227.992 157.231 cv
227.525 154.024 227.421 150.764 227.686 147.62 cv
228.003 143.956 227.992 140.205 228.695 136.56 cv
229.221 133.918 230.215 132.052 231.522 129.726 cv
232.779 127.55 233.19 125.413 235.909 122.798 cv
231.18 125.177 225.883 134.129 225.311 135.109 cv
224.749 134.129 222.484 131.008 220.428 127.69 cv
217.001 123.185 215.022 122.959 214.474 122.551 cv
216.889 125.126 218.285 127.867 219.743 130.432 cv
221.048 132.759 221.043 133.918 221.575 136.56 cv
222.278 140.205 222.255 143.956 222.574 147.62 cv
222.839 150.764 222.755 154.024 222.277 157.231 cv
221.564 160.062 220.565 162.812 219.362 165.376 cv
210.719 174.274 186.738 173.956 177.264 170.163 cv
177.238 169.939 177.204 169.731 177.174 169.504 cv
177.157 169.384 177.142 169.242 177.123 169.123 cv
177.073 168.65 176.994 168.18 176.923 167.695 cv
181.849 169.085 185.643 170.315 191.272 170.351 cv
191.258 170.349 191.244 170.345 191.229 170.343 cv
191.341 170.345 191.468 170.35 191.581 170.351 cv
191.511 170.337 191.442 170.318 191.361 170.304 cv
191.593 170.326 191.826 170.344 192.044 170.351 cv
186.455 169.376 180.239 166.529 175.583 162.776 cv
175.456 162.43 175.318 162.091 175.169 161.757 cv
175.155 161.716 175.135 161.695 175.117 161.658 cv
174.972 161.328 174.816 160.995 174.636 160.666 cv
174.604 160.594 174.556 160.499 174.506 160.427 cv
174.315 160.073 174.118 159.724 173.925 159.387 cv
173.959 158.586 173.923 157.765 174.026 157.018 cv
174.275 155.386 174.854 153.813 175.339 152.231 cv
176.16 149.574 177.257 146.972 177.935 144.254 cv
175.648 146.556 173.983 149.383 171.604 151.696 cv
169.543 153.68 167.377 155.64 164.983 157.283 cv
162.822 158.766 160.966 160.97 159.024 160.895 cv
158.141 160.861 157.239 160.367 156.286 159.122 cv
151.263 152.627 149.881 143.585 151.081 135.549 cv
cp
201.243 72.8672 mo
200.286 71.1895 200.481 69.3276 200.29 67.3906 cv
200.081 65.3394 199.427 63.6958 199.075 61.7798 cv
198.706 59.7095 199.733 59.1509 201.621 59.1196 cv
201.945 59.5024 202.216 59.7041 202.825 59.52 cv
202.058 56.9019 202.411 54.0679 202.7 51.311 cv
203.333 44.9585 204.122 38.856 208.945 34.0791 cv
211.858 31.1943 215.83 29.2524 221.272 28.1816 cv
227.95 26.9717 237.133 29.9224 241.336 34.0791 cv
246.159 38.856 246.695 42.8687 247.329 49.2207 cv
247.643 51.9658 248.219 56.9019 247.434 59.52 cv
248.044 59.7041 248.334 59.5024 248.659 59.1196 cv
250.525 59.1509 251.552 59.7095 251.195 61.7798 cv
250.838 63.6958 250.178 65.3394 249.988 67.3906 cv
249.789 69.3276 249.994 71.1895 249.037 72.8672 cv
248.342 74.0781 245.852 76.2725 245.161 73.8384 cv
245.1 74.0039 li
244.575 71.293 245.159 68.3037 245.85 64.439 cv
247.06 57.5571 244.803 56.1943 244.803 56.1943 cv
246.623 61.4302 242.821 65.5376 243.104 70.6255 cv
243.158 71.5195 243.372 72.4023 243.56 73.2949 cv
243.583 76.77 243.316 81.2393 240.641 82.0684 cv
241.352 78.7842 240.118 74.7983 240.118 71.5649 cv
240.118 76.1797 240.311 80.0098 236.71 83.2788 cv
236.072 83.6182 226.463 89.6504 215.387 84.3208 cv
210.139 82.9868 210.326 72.6841 210.326 71.5649 cv
210.326 72.374 208.742 79.4463 209.834 82.7729 cv
207.94 81.3267 206.599 79.2534 206.096 76.9443 cv
206.148 74.7441 207.025 72.7041 207.156 70.6255 cv
207.437 65.5376 203.636 61.4302 205.477 56.1943 cv
205.477 56.1943 204.246 58.0869 204.852 65.0625 cv
205.222 69.3477 205.683 71.293 205.181 74.0039 cv
205.12 73.8384 li
204.428 76.2725 201.938 74.0781 201.243 72.8672 cv
cp
146.091 336.928 mo
146.267 339.919 146.321 342.511 146.261 344.719 cv
145.691 337.489 144.221 330.111 142.996 323.143 cv
142.063 318.353 141.27 313.828 140.554 309.492 cv
139.709 305.758 138.958 302.31 138.255 299.037 cv
138.833 298.928 139.42 298.789 140.005 298.69 cv
143.32 312.869 145.456 326.258 146.091 336.928 cv
cp
137.828 297.011 mo
134.162 297.825 130.505 298.686 126.835 299.564 cv
126.613 299.311 126.384 299.003 126.171 298.654 cv
129.138 297.804 132.081 296.934 135.019 296.199 cv
136.848 295.7 138.699 295.25 140.54 294.83 cv
140.535 295.395 140.545 295.905 140.603 296.418 cv
140.239 296.503 139.875 296.592 139.511 296.641 cv
139.512 296.645 139.513 296.649 139.514 296.653 cv
138.958 296.791 138.401 296.934 137.833 297.035 cv
137.831 297.026 137.829 297.019 137.828 297.011 cv
cp
123.037 328.171 mo
117.646 316.102 105.916 287.56 102.914 266.032 cv
97.3955 268.094 95.998 269.099 91.791 271.342 cv
91.6025 270.054 91.4316 268.831 91.2734 267.586 cv
91.2471 267.423 91.2188 267.215 91.1929 267.052 cv
91.1401 266.512 91.0679 266.019 90.999 265.486 cv
90.9663 265.205 90.9458 264.926 90.9087 264.647 cv
90.8281 263.993 90.7739 263.389 90.7026 262.791 cv
90.6431 262.266 90.6069 261.785 90.5527 261.27 cv
90.5215 260.986 90.4937 260.707 90.4644 260.428 cv
90.436 259.913 90.3887 259.427 90.3442 258.942 cv
90.3228 258.715 90.3008 258.445 90.2808 258.22 cv
90.2422 257.502 90.186 256.791 90.1392 256.096 cv
90.0459 254.368 89.9814 252.763 89.9585 251.315 cv
90.0825 251.298 90.187 251.271 90.2979 251.226 cv
95.1851 249.596 100.005 247.714 105.104 246.94 cv
105.093 248.144 105.108 249.352 105.151 250.65 cv
104.919 254.217 104.929 260.22 107.49 272.535 cv
108.896 280.756 110.917 289.369 113.489 297.688 cv
117.655 311.11 121.729 323.672 125.732 333.902 cv
129.274 342.917 132.76 350.137 136.206 354.433 cv
131.944 349.183 127.333 339.583 123.037 328.171 cv
cp
87.939 279.59 mo
85.5806 280.54 77.8999 284.313 75.5645 285.32 cv
74.2808 276.958 73.7437 269.673 73.8652 263.956 cv
74.2559 264.048 83.9351 261.247 88.3657 260.065 cv
89.4019 272.053 92.0806 286.827 96.0317 302.188 cv
99.6724 316.342 104.503 330.949 109.478 342.32 cv
105.798 336.442 89.9585 293.428 87.939 279.59 cv
cp
72.7642 292.302 mo
70.4653 293.697 66.1763 294.584 59.9604 297.205 cv
59.9604 297.204 59.4512 295.022 59.4512 295.022 cv
59.1172 291.805 58.2886 284.73 58.2871 281.91 cv
58.4292 281.894 58.5547 281.866 58.686 281.853 cv
63.106 280.321 67.5063 278.693 72.2573 277.073 cv
72.3335 277.044 72.3677 277.027 72.4019 277.015 cv
72.4165 277.152 72.4312 277.292 72.4463 277.387 cv
72.8628 281.763 73.4033 285.279 74.27 290.166 cv
74.6226 294.431 75.6719 299.441 76.9985 304.614 cv
77.165 305.307 77.3193 306.001 77.4976 306.69 cv
78.8135 311.749 80.3125 316.566 81.9526 320.951 cv
83.5835 326.017 85.355 330.924 87.2397 335.466 cv
87.2397 335.468 87.2412 335.47 87.2412 335.47 cv
80.1299 322.534 75.3799 302.7 72.7642 292.302 cv
cp
58.2598 313.06 mo
56.8423 313.492 49.3457 316.408 49.2339 315.96 cv
45.4136 301.953 45.8589 291.173 50.8179 289.989 cv
51.7388 289.791 53.8613 289.197 56.208 288.52 cv
56.3125 288.52 56.3984 288.505 56.5044 288.476 cv
56.5747 289.531 56.5435 289.322 56.6777 290.424 cv
53.6079 291.148 54.0601 290.474 52.4556 291.173 cv
47.5913 291.872 47.3618 296.296 47.0527 302.288 cv
47.1377 304.853 47.4463 307.72 48.0386 310.784 cv
47.7241 309.131 47.4878 307.508 47.3276 306.012 cv
47.4253 305.976 47.5449 305.941 47.646 305.879 cv
51.0625 304.207 54.5269 302.639 57.9253 300.974 cv
58.2183 304.741 58.9351 308.853 60.0591 313.034 cv
60.9048 316.057 61.8804 318.907 62.9751 321.475 cv
64.2148 324.916 65.7026 328.453 67.5063 331.861 cv
64.4805 327.674 60.0039 317.451 58.2598 313.06 cv
cp
58.3682 278.69 mo
59.2495 272.177 61.3813 266.93 62.9072 266.534 cv
65.7368 265.808 li
67.4155 265.384 69.5522 264.839 71.7271 264.3 cv
71.7188 264.872 71.7212 265.458 71.728 266.085 cv
71.73 266.264 71.7329 266.439 71.7368 266.647 cv
71.7368 266.647 li
71.7402 266.786 71.7407 266.951 71.7446 267.127 cv
71.6372 267.137 71.6836 266.879 71.7368 266.647 cv
71.7329 266.439 71.73 266.264 71.728 266.085 cv
71.7275 266.085 li
63.2715 267.251 61.0835 268.756 58.3682 278.692 cv
58.3682 278.691 58.3682 278.69 58.3682 278.69 cv
cp
72.3716 276.774 mo
72.3789 276.844 72.3862 276.912 72.3936 276.958 cv
72.3579 276.949 72.3335 276.893 72.3716 276.774 cv
cp
74.0117 260.476 mo
74.7329 257.323 76.584 250.14 78.0474 249.764 cv
79.6157 249.358 83.7612 248.299 87.939 247.23 cv
87.9019 248.12 87.8931 248.127 87.8945 248.97 cv
87.894 249.02 87.8916 249.065 87.8916 249.116 cv
83.6323 250.404 76.8555 249.27 74.0112 260.476 cv
74.0117 260.476 74.0117 260.476 74.0117 260.476 cv
cp
90.0005 247.474 mo
90.1733 245.622 90.7925 241.113 90.6753 241.166 cv
91.1494 238.84 91.8442 237.438 92.5669 236.773 cv
92.5684 236.773 92.5688 236.773 92.5698 236.771 cv
92.708 236.67 92.8262 236.568 92.9453 236.51 cv
92.9463 236.51 92.9468 236.509 92.9482 236.509 cv
93.0757 236.43 93.2109 236.373 93.332 236.356 cv
107.294 232.771 li
106.922 233.545 106.867 233.42 106.613 234.449 cv
101.339 235.77 91.6694 234.891 89.9717 248.209 cv
89.9795 247.956 89.9897 247.713 90.0005 247.474 cv
cp
136.316 284.34 mo
135.932 284.438 135.53 284.527 135.129 284.625 cv
132.098 271.284 128.63 259.444 120.146 241.895 cv
125.215 251.004 131.119 265.789 136.316 284.34 cv
cp
141.817 289.361 mo
141.81 289.401 141.803 289.44 141.796 289.48 cv
141.718 288.79 li
141.751 288.968 141.77 289.189 141.817 289.361 cv
cp
141.727 285.334 mo
141.592 286.328 141.563 287.323 141.647 288.287 cv
141.517 287.242 li
141.419 288.154 141.098 289.692 140.868 291.402 cv
138.624 291.797 136.404 292.216 134.194 292.697 cv
131.104 293.335 128.059 294.067 125.035 294.758 cv
124.998 294.637 124.962 294.515 124.926 294.436 cv
124.796 293.968 124.664 293.497 124.534 293.071 cv
124.392 291.758 124.406 290.445 124.592 289.215 cv
130.263 287.8 135.965 286.473 141.727 285.334 cv
cp
399.721 286.416 mo
398.825 286.174 396.699 285.611 394.313 284.978 cv
394.102 284.908 393.886 284.839 393.627 284.768 cv
393.767 282.568 393.811 280.464 393.749 278.451 cv
393.508 269.264 391.38 263.935 387.603 262.939 cv
384.791 262.231 li
382.947 261.772 380.572 261.177 378.204 260.544 cv
377.863 252.58 376.102 247.133 372.477 246.171 cv
370.801 245.751 366.321 244.625 361.93 243.495 cv
361.439 237.059 359.826 233.442 357.176 232.764 cv
339.719 228.305 li
339.43 228.223 339.092 228.179 338.791 228.179 cv
330.838 228.179 319.387 254.939 311.666 282.335 cv
310.415 282.086 309.193 281.837 307.923 281.555 cv
307.706 280.376 307.447 279.19 307.251 278.103 cv
306.871 275.813 306.383 273.794 305.991 271.696 cv
305.76 270.356 305.646 268.962 305.645 267.446 cv
305.639 264.154 307.447 259.824 308.157 256.818 cv
310.992 247.507 314.49 241.502 314.48 230.241 cv
314.478 226.735 314.117 223.549 314.592 220.199 cv
314.8 218.948 315.057 217.71 315.328 216.464 cv
315.811 214.395 316.291 212.306 316.532 210.115 cv
317.21 203.121 316.794 196.598 314.185 190.04 cv
313.41 187.991 312.783 185.946 312.431 183.999 cv
312.491 183.681 312.549 183.368 312.603 183.058 cv
312.725 182.109 312.852 181.206 312.887 180.389 cv
313.072 175.225 312.631 170.401 311.669 165.515 cv
310.785 160.787 310.023 155.441 308.072 151.007 cv
306.958 148.529 303.632 145.105 302.221 142.248 cv
302.295 134.88 300.521 126.474 296.197 121.471 cv
293.576 118.426 290.44 116.197 286.925 114.625 cv
284.244 113.365 282.477 112.71 279.596 112.176 cv
274.712 100.988 256.876 92.5396 248.773 91.9316 cv
248.729 91.5366 248.724 91.124 248.692 90.7065 cv
248.642 90.6914 248.588 90.6538 248.539 90.6167 cv
248.482 90.2266 248.426 89.8379 248.383 89.4736 cv
247.748 85.2041 246.177 79.3926 248.138 75.2793 cv
248.729 74.9644 249.221 74.46 249.579 73.8384 cv
250.624 71.9829 250.102 69.6631 250.388 67.582 cv
250.694 65.4038 251.902 63.4609 251.811 61.1665 cv
251.73 59.8223 251.69 62.2295 251.73 59.8223 cv
251.762 58.1006 250.851 56.9072 249.72 57.5347 cv
249.616 54.4175 249.305 51.8833 248.987 48.7002 cv
248.683 45.6523 247.847 41.5181 246.855 38.498 cv
244.556 31.627 237.836 28.7729 232.3 26.6558 cv
228.572 25.2227 220.664 24.9873 216.159 26.7222 cv
210.634 28.8501 206.28 32.873 203.95 38.498 cv
202.729 41.4434 201.596 45.6523 201.294 48.7002 cv
200.977 51.8833 200.652 54.4175 200.562 57.5347 cv
199.409 56.9072 198.52 58.1006 198.542 59.8223 cv
198.569 62.2295 198.542 59.8223 198.47 61.1665 cv
198.356 63.4609 199.587 65.4038 199.893 67.582 cv
200.179 69.6631 199.634 71.9829 200.679 73.8384 cv
201.038 74.46 201.547 74.9644 202.122 75.2793 cv
204.104 79.3926 202.51 85.2041 201.888 89.4736 cv
201.833 89.8379 201.775 90.2266 201.72 90.6167 cv
201.718 90.6177 201.717 90.6191 201.716 90.6196 cv
201.85 90.7617 201.9 90.959 201.852 91.209 cv
201.776 91.4702 201.706 91.7422 201.624 91.999 cv
191.832 92.6309 185.267 97.1401 180.794 100.38 cv
175.455 104.268 170.294 111.032 169.563 112.176 cv
166.662 112.71 166.035 113.365 163.359 114.624 cv
159.842 116.196 156.705 118.425 154.075 121.471 cv
149.738 126.474 147.964 134.88 148.037 142.248 cv
146.628 145.105 143.323 148.529 142.21 151.007 cv
140.236 155.441 139.48 160.787 138.59 165.515 cv
137.649 170.401 137.194 175.225 137.373 180.389 cv
137.42 181.493 137.608 182.728 137.829 183.999 cv
137.477 185.946 136.871 187.991 136.074 190.04 cv
133.488 196.598 133.07 203.121 133.749 210.115 cv
134.089 213.604 135.181 216.872 135.667 220.199 cv
136.157 223.549 135.781 226.735 135.778 230.241 cv
135.768 243.494 137.371 244.67 142.715 258.193 cv
143.437 261.198 144.641 264.154 144.637 267.446 cv
144.63 272.028 143.458 275.336 142.746 279.719 cv
142.57 280.803 142.293 281.942 142.076 283.163 cv
140.826 283.401 139.581 283.65 138.336 283.945 cv
130.631 256.551 119.159 229.773 111.185 229.773 cv
110.883 229.773 110.585 229.816 110.301 229.891 cv
92.8218 234.356 li
90.1475 235.037 88.5581 238.652 88.0605 245.067 cv
83.6753 246.198 79.1909 247.356 77.5371 247.786 cv
73.896 248.704 72.1353 254.165 71.792 262.16 cv
69.4199 262.753 67.0601 263.345 65.2261 263.83 cv
62.397 264.556 li
58.6226 265.507 56.5107 270.881 56.2476 280.067 cv
56.1865 282.039 56.231 284.157 56.3477 286.385 cv
56.1338 286.416 55.8955 286.48 55.6631 286.551 cv
53.3208 287.183 51.1924 287.789 50.2773 288.021 cv
43.979 289.728 43.7871 303.858 47.2373 316.523 cv
50.895 329.924 57.5732 339.704 63.123 339.704 cv
63.5444 339.704 63.939 339.645 64.3325 339.524 cv
65.1284 339.329 67.7632 338.614 70.4297 337.885 cv
74.8232 346.017 79.5063 351.001 83.4097 351.001 cv
83.8057 351.001 84.2085 350.944 84.5957 350.879 cv
93.5068 348.572 li
97.5718 355.725 101.698 360.281 105.369 360.281 cv
105.732 360.281 106.083 360.231 106.435 360.132 cv
107.803 359.78 113.001 358.457 117.511 357.292 cv
120.189 361.092 122.769 363.252 125.046 363.252 cv
125.348 363.252 125.646 363.208 125.948 363.168 cv
144.549 358.386 li
144.465 358.215 li
147.626 356.194 148.87 349.039 148.143 336.835 cv
147.539 326.43 145.513 313.579 142.397 299.894 cv
143.138 300.44 144.129 300.822 145.141 301.141 cv
146.076 301.451 147.024 301.644 147.769 301.834 cv
147.792 301.839 147.813 301.837 147.836 301.84 cv
148.795 302.01 149.684 301.706 150.56 301.461 cv
151.147 301.261 151.729 301.136 152.28 301.169 cv
152.28 301.169 152.393 301.961 153.372 302.543 cv
153.748 302.801 154.275 302.99 154.997 303.112 cv
156.236 303.112 157.105 302.338 157.239 301.695 cv
158.505 301.499 161.196 304.584 162.914 300.856 cv
162.93 300.822 162.946 300.799 162.962 300.798 cv
163.026 300.799 163.061 300.799 163.122 300.799 cv
166.018 301.359 166.58 300.44 168.021 297.996 cv
168.748 296.791 170.479 294.83 171.071 293.14 cv
191.056 290.366 208.529 289.48 229.365 289.48 cv
242.063 289.48 257.867 289.542 270.411 290.619 cv
273.28 290.978 276.148 291.324 278.978 291.728 cv
279.654 293.405 281.277 295.225 281.976 296.424 cv
283.064 298.272 283.646 299.228 285.119 299.374 cv
285.65 299.397 286.261 299.362 287.055 299.183 cv
288.771 303.031 291.481 299.882 292.746 300.098 cv
292.893 300.767 293.738 301.5 295.001 301.5 cv
295.133 301.5 295.279 301.485 295.428 301.451 cv
295.848 301.334 296.211 301.175 296.539 301.035 cv
297.603 300.44 297.718 299.597 297.718 299.597 cv
299.064 299.404 300.586 300.58 302.205 300.217 cv
302.974 300.072 303.932 299.835 304.857 299.557 cv
305.867 299.249 306.859 298.838 307.6 298.322 cv
304.483 312.006 302.479 324.858 301.831 335.218 cv
301.119 347.423 302.371 354.606 305.531 356.6 cv
305.446 356.813 li
324.045 361.554 li
324.33 361.637 324.664 361.679 324.972 361.679 cv
327.229 361.679 329.807 359.476 332.472 355.719 cv
336.978 356.885 342.217 358.207 343.579 358.559 cv
343.926 358.638 344.286 358.665 344.65 358.665 cv
348.275 358.665 352.447 354.108 356.491 347.001 cv
365.422 349.263 li
365.807 349.372 366.171 349.428 366.578 349.428 cv
370.491 349.428 375.174 344.433 379.545 336.268 cv
382.25 336.996 384.859 337.713 385.666 337.953 cv
386.058 338.028 386.475 338.089 386.895 338.089 cv
392.424 338.089 399.102 328.352 402.737 314.907 cv
406.227 302.244 406.019 288.157 399.721 286.416 cv
cp
f
296.72 281.547 mo
296.591 280.806 296.495 280.1 296.387 279.403 cv
296.385 279.403 296.381 279.403 296.379 279.403 cv
296.332 279.071 296.291 278.777 296.264 278.534 cv
296.248 278.362 296.234 278.243 296.227 278.103 cv
296.113 275.45 296.113 275.45 296.787 270.064 cv
296.53 271.138 li
294.827 275.688 294.86 286.311 297 288.52 cv
297.472 287.477 297.043 284.267 296.663 281.538 cv
296.683 281.542 296.702 281.544 296.72 281.547 cv
cp
f
290.853 288.291 mo
291.113 288.852 li
292.485 285.67 292.682 284.184 292.77 282.08 cv
292.954 278.905 291.924 277.741 291.982 274.573 cv
291.339 279.177 290.378 282.315 290.853 288.291 cv
cp
f
298.679 270.622 mo
298.299 276.965 298.58 281.125 300.77 285.883 cv
300.007 283.455 299.894 281.18 299.929 278.899 cv
299.993 279.736 li
299.964 279.432 299.95 279.158 299.929 278.889 cv
299.96 276.958 300.055 274.962 299.956 272.817 cv
300.414 266.016 302.121 258.46 304.442 252.994 cv
301.58 258.185 298.94 265.74 298.679 270.622 cv
cp
f
232.372 58.4741 mo
233.262 60.1108 233.836 62.3135 234.719 63.7734 cv
236.525 66.6846 236.784 64.4521 238.048 62.0073 cv
238.797 60.5503 241.52 57.2803 239.169 56.415 cv
237.783 55.9082 233.888 58.1211 231.649 57.2173 cv
231.136 57.3335 231.32 57.0347 231.136 57.3335 cv
232.372 58.4741 li
cp
1 1 1 rgb
f
222.939 59.3574 mo
220.691 61.9565 227.547 65.3638 227.289 59.0703 cv
227.23 57.1021 226.229 49.3335 224.421 50.6919 cv
223.241 53.6831 222.253 56.3008 222.939 60.2407 cv
222.939 59.3574 li
cp
f
239.745 47.897 mo
240.26 48.937 240.648 50.0225 240.994 51.0874 cv
243.807 50.7676 243.119 47.2505 240.033 47.5879 cv
239.745 47.897 li
cp
f
221.455 72.8931 mo
223.649 73.0103 226.195 75.104 227.992 73.189 cv
226.313 71.7114 223.116 71.7476 221.167 72.8931 cv
221.455 72.8931 li
cp
f
227.058 67.9028 mo
229.278 67.6763 230.448 69.6309 232.608 69.3188 cv
232.354 67.0337 228.218 64.4976 227.346 67.9028 cv
227.058 67.9028 li
cp
f
238.172 78.4019 mo
239.116 76.0396 240.01 70.6064 237.618 68.7202 cv
236.832 72.4761 238.03 77.2993 235.369 80.6821 cv
235.49 80.8032 235.666 80.6987 236.689 80.1875 cv
237.233 79.8862 237.76 78.8945 238.172 78.4019 cv
238.172 78.4019 li
cp
f
240.648 67.9028 mo
240.454 70.3706 240.749 74.3267 241.729 76.3994 cv
241.953 73.7207 241.384 71.0723 241.509 68.4771 cv
241.636 65.8423 242.939 63.3945 243.018 60.645 cv
242.104 62.7183 240.994 65.7554 240.648 67.9028 cv
240.648 67.9028 li
cp
f
227.635 39.9478 mo
227.675 40.2373 227.635 40.4941 227.683 40.7822 cv
230.436 41.7383 232.475 39.7173 235.339 39.9487 cv
237.773 40.1436 240.291 41.3599 242.309 42.792 cv
239.054 38.0386 232.528 38.7446 227.966 39.6606 cv
227.635 39.9478 li
cp
f
230.889 35.5317 mo
233.636 36.7183 236.735 36.1865 239.62 38.3672 cv
237.836 35.7656 233.26 34.2773 230.313 35.2446 cv
230.889 35.5317 li
cp
f
247.118 60.8369 mo
246.619 61.6675 246.265 62.6523 246.063 63.4531 cv
246.727 61.8105 248.186 60.3882 250.061 60.4917 cv
249.267 59.2661 247.5 59.3042 247.118 60.8369 cv
247.118 60.8369 li
cp
f
233.401 49.9507 mo
235.479 49.9507 236.935 50.3872 238.832 50.6978 cv
237.688 50.0239 235.529 49.4736 233.401 49.9507 cv
233.401 49.9507 li
cp
f
245.347 83.1831 mo
245.347 92.0566 245.706 101.223 249.132 109.09 cv
246.297 105.212 244.51 101.347 243.602 96.8398 cv
243.109 94.4951 241.65 83.251 244.894 84.0664 cv
245.347 83.1831 li
cp
f
251.115 97.3149 mo
250.151 105.43 265.723 113.169 272.291 112.255 cv
273.925 106.544 255.886 96.5825 251.115 97.3149 cv
251.115 97.3149 li
cp
f
278.961 116.293 mo
278.216 121.904 286.703 127.747 288.817 133.053 cv
291.617 139.972 291.35 148.47 291.36 156.068 cv
292.973 152.712 293.957 147.606 294.927 143.328 cv
295.211 145.219 295.567 147.27 295.357 149.252 cv
297.041 141.078 299.083 135.23 294.117 127.64 cv
290.89 122.641 285.385 116.724 279.413 115.841 cv
278.961 116.293 li
cp
f
230.766 139.235 mo
235.634 130.721 241.697 125.722 252.775 127.412 cv
262.848 128.951 268.414 136.814 271.377 146.236 cv
265.902 136.104 256.101 133.905 245.372 137.469 cv
233.871 141.29 230.766 149.134 230.766 160.713 cv
229.906 154.575 227.165 141.634 232.537 137.017 cv
230.766 139.235 li
cp
f
279.413 164.828 mo
274.671 169.262 278.214 182.896 281.222 187.617 cv
279.928 183.553 278.789 173.725 286.621 177.501 cv
291.606 179.926 291.337 187.36 291.36 192.036 cv
292.212 183.905 294.286 162.102 279.413 164.376 cv
279.413 164.828 li
cp
f
304.635 154.681 mo
304.637 158.394 304.719 161.821 305.873 165.27 cv
306.72 167.79 308.592 170.006 309.07 172.629 cv
309.057 167.11 308.466 160.256 305.076 155.995 cv
304.635 154.681 li
cp
f
299.762 155.995 mo
296.083 166.614 294.791 181.054 298.002 192.036 cv
298.307 186.271 300.844 181.077 301.119 174.974 cv
301.364 168.753 300.416 162.792 300.216 156.878 cv
299.762 155.995 li
cp
f
296.219 260.561 mo
298.64 249.42 294.838 240.679 293.13 230.124 cv
291.443 219.704 293.63 210.609 297.468 201.142 cv
298.253 207.624 294.353 218.085 297.242 223.885 cv
303.788 219.724 312.267 205.151 309.184 197.504 cv
308.727 203.698 310.109 209.619 308.51 215.56 cv
307.086 220.957 303.924 225.817 302.414 230.977 cv
299.616 240.631 303.517 252.93 297.58 261.466 cv
296.219 260.561 li
cp
f
306.395 190.42 mo
305.913 198.997 309.977 204.694 311.284 212.781 cv
313.651 204.78 310.963 197.946 306.848 191.734 cv
306.395 190.42 li
cp
f
308.619 234.098 mo
306.744 238.73 305.705 243.954 306.053 249.063 cv
309.797 243.648 311.209 234.55 310.733 227.958 cv
309.787 230.116 309.169 232.967 308.619 235.422 cv
308.619 234.098 li
cp
f
288.27 288.372 mo
288.948 282.56 289.311 275.815 291.689 270.405 cv
291.939 271.085 292.167 271.731 292.32 272.435 cv
293.746 270.991 293.16 266.796 293.482 264.586 cv
292.019 267.571 292.192 272.44 287.781 273.315 cv
287.024 271.666 286.353 269.731 286.399 267.789 cv
284.754 270.489 282.422 272.842 281.603 275.889 cv
282.409 273.958 284.069 272.708 285.633 271.65 cv
288.882 276.362 284.947 286.416 288.724 290.139 cv
288.27 288.372 li
cp
f
301.533 272.05 mo
301.533 278.296 303.044 282.568 304.635 288.222 cv
304.59 282.89 301.583 277.229 301.987 272.474 cv
301.533 272.05 li
cp
f
304.212 287.059 mo
304.212 284.173 304.721 280.663 304.102 277.884 cv
303.493 275.154 301.386 273.129 301.533 269.952 cv
301.533 270.973 301.538 271.95 301.533 272.927 cv
304.212 287.059 li
cp
f
287.398 284.183 mo
287.057 286.09 285.614 290.274 287.804 291.451 cv
289.072 292.124 290.471 291.128 291.818 291.72 cv
292.759 292.153 293.26 293.295 294.188 293.728 cv
295.645 294.372 295.945 293.81 297.283 293.158 cv
299.01 292.352 298.56 292.566 300.285 292.727 cv
301.82 292.852 301.822 293.5 302.386 291.646 cv
302.685 290.623 302.566 288.849 301.975 288.008 cv
302.078 290.127 300.145 292.429 297.779 291.651 cv
296.924 291.332 296.77 290.255 295.815 290.133 cv
294.43 289.961 294.43 291.429 293.597 291.463 cv
292.292 291.519 289.477 289.094 289.166 288.372 cv
288.372 286.439 288.475 283.611 288.475 281.512 cv
287.398 284.183 li
cp
f
231.176 176.288 mo
228.393 182.066 238.527 181.451 241.362 181.159 cv
246.129 180.672 250.174 180.907 254.142 184.098 cv
252.602 176.835 236.54 171.669 230.766 175.857 cv
231.176 176.288 li
cp
f
231.63 197.464 mo
230.922 198.33 230.507 198.906 230.805 200.061 cv
234.399 199.859 237.886 198.859 241.352 198.347 cv
245.563 197.748 248.808 199.015 252.947 199.227 cv
248.894 197.132 237.479 194.908 232.537 197.034 cv
231.63 197.464 li
cp
f
232.084 210.26 mo
231.085 211.241 230.447 212.03 230.415 213.315 cv
235.601 209.376 241.497 211.198 247.53 211.495 cv
244.046 207.973 236.026 207.814 232.084 209.83 cv
232.084 210.26 li
cp
f
220.282 80.2456 mo
219.284 84.2646 222.552 81.9458 224.117 81.7085 cv
226.197 81.374 229.309 83.7212 230.543 82.0122 cv
233.428 78.084 221.234 78.7534 220.282 80.2456 cv
220.282 80.2456 li
cp
f
245.347 71.4224 mo
245.007 72.6914 245.259 73.6416 246.493 73.7251 cv
246.672 72.7393 246.308 72.002 245.635 71.4224 cv
245.347 71.4224 li
cp
f
234.514 55.3936 mo
236.538 55.8076 238.25 55.9868 240.068 54.7378 cv
239.165 54.2437 235.137 54.9038 234.514 55.167 cv
234.514 55.3936 li
cp
f
246.595 59.7744 mo
246.595 58.7544 246.4 57.9473 246.053 57.0352 cv
245.774 56.2642 244.867 55.3135 245.028 54.5977 cv
245.258 53.4966 245.832 52.4458 246.04 51.2837 cv
246.293 49.9331 246.002 48.4585 246.273 47.1138 cv
246.273 47.0547 246.309 45.1768 246.309 45.1211 cv
246.474 46.1499 246.716 48.981 246.871 50.0205 cv
247.043 51.4551 246.953 53.0117 246.953 54.4673 cv
246.953 55.5122 246.94 56.5391 246.886 57.5791 cv
246.85 58.3022 246.619 58.9966 246.62 59.7075 cv
246.595 59.7744 li
cp
f
217.569 58.4741 mo
216.659 60.1108 216.121 62.3135 215.223 63.7734 cv
213.416 66.6846 213.138 64.4521 211.902 62.0073 cv
211.166 60.5503 208.422 57.2803 210.794 56.415 cv
212.18 55.9082 216.076 58.1211 218.292 57.2173 cv
218.828 57.3335 218.621 57.0347 218.828 57.3335 cv
217.569 58.4741 li
cp
f
227.003 59.3574 mo
229.259 61.9565 222.417 65.3638 222.648 59.0703 cv
222.733 57.1021 222.997 50.4741 225.376 50.6978 cv
226.167 51.0874 227.688 56.3008 227.003 60.2407 cv
227.003 59.3574 li
cp
f
210.196 47.897 mo
209.704 48.937 209.313 50.0225 208.957 51.0874 cv
206.127 50.7676 206.81 47.2505 209.909 47.5879 cv
210.196 47.897 li
cp
f
228.486 72.8931 mo
226.292 73.0103 223.773 75.104 221.957 73.189 cv
223.628 71.7114 226.848 71.7476 228.774 72.8931 cv
228.486 72.8931 li
cp
f
222.884 67.9028 mo
220.685 67.6763 219.474 69.6309 217.333 69.3188 cv
217.588 67.0337 221.746 64.4976 222.596 67.9028 cv
222.884 67.9028 li
cp
f
211.791 78.4019 mo
210.847 76.0396 209.932 70.6064 212.323 68.7202 cv
213.109 72.4761 211.912 77.2993 214.586 80.6821 cv
214.452 80.8032 214.297 80.6987 213.274 80.1875 cv
212.708 79.8862 212.204 78.8945 211.791 78.4019 cv
211.791 78.4019 li
cp
f
209.311 67.9028 mo
209.487 70.3706 209.193 74.3267 208.212 76.3994 cv
208.011 73.7207 208.558 71.0723 208.433 68.4771 cv
208.328 65.8423 207.002 63.3945 206.946 60.645 cv
207.838 62.7183 208.961 65.7554 209.311 67.9028 cv
209.311 67.9028 li
cp
f
222.287 39.9478 mo
222.267 40.2373 222.323 40.4941 222.259 40.7822 cv
219.528 41.7383 217.489 39.7173 214.625 39.9487 cv
212.19 40.1436 209.638 41.3599 207.655 42.792 cv
210.888 38.0386 217.435 38.7446 221.998 39.6606 cv
222.287 39.9478 li
cp
f
219.053 35.5317 mo
216.302 36.7183 213.229 36.1865 210.321 38.3672 cv
212.099 35.7656 216.665 34.2773 219.637 35.2446 cv
219.053 35.5317 li
cp
f
202.823 60.8369 mo
203.305 61.6675 203.699 62.6523 203.878 63.4531 cv
203.215 61.8105 201.755 60.3882 199.903 60.4917 cv
200.675 59.2661 202.441 59.3042 202.823 60.8369 cv
202.823 60.8369 li
cp
f
216.54 49.9507 mo
214.462 49.9507 213.007 50.3872 211.132 50.6978 cv
212.255 50.0239 214.413 49.4736 216.54 49.9507 cv
216.54 49.9507 li
cp
f
204.595 83.1831 mo
204.595 92.0566 204.235 101.223 200.81 109.09 cv
203.645 105.212 205.421 101.347 206.339 96.8398 cv
206.811 94.4951 208.313 83.251 205.048 84.0664 cv
204.595 83.1831 li
cp
f
198.849 97.3149 mo
199.778 105.43 184.219 113.169 177.667 112.255 cv
176.039 106.544 194.056 96.5825 198.849 97.3149 cv
198.849 97.3149 li
cp
f
170.96 116.293 mo
171.748 121.904 163.218 127.747 161.106 133.053 cv
158.344 139.972 158.592 148.47 158.581 156.068 cv
156.991 152.712 156.003 147.606 155.015 143.328 cv
154.731 145.219 154.374 147.27 154.597 149.252 cv
152.9 141.078 150.859 135.23 155.824 127.64 cv
159.074 122.641 164.557 116.724 170.529 115.841 cv
170.96 116.293 li
cp
f
219.198 139.235 mo
214.33 130.721 208.252 125.722 197.166 127.412 cv
187.094 128.951 181.517 136.814 178.564 146.236 cv
184.061 136.104 193.863 133.905 204.569 137.469 cv
216.092 141.29 219.198 149.134 219.198 160.713 cv
220.036 154.575 222.799 141.634 217.426 137.017 cv
219.198 139.235 li
cp
f
170.529 164.828 mo
175.292 169.262 171.749 182.896 168.72 187.617 cv
170.036 183.553 171.152 173.725 163.343 177.501 cv
158.357 179.926 158.604 187.36 158.581 192.036 cv
157.751 183.905 155.655 162.102 170.529 164.376 cv
170.529 164.828 li
cp
f
145.297 154.681 mo
145.286 158.394 145.223 161.821 144.069 165.27 cv
143.244 167.79 141.35 170.006 140.886 172.629 cv
140.887 167.11 141.498 160.256 144.866 155.995 cv
145.297 154.681 li
cp
f
150.18 155.995 mo
153.88 166.614 155.166 181.054 151.939 192.036 cv
151.626 186.271 149.098 181.077 148.84 174.974 cv
148.6 168.753 149.547 162.792 149.726 156.878 cv
150.18 155.995 li
cp
f
153.723 260.561 mo
151.324 249.42 155.104 240.679 156.811 230.124 cv
158.498 219.704 156.334 210.609 152.488 201.142 cv
151.71 207.624 155.61 218.085 152.712 223.885 cv
146.16 219.724 137.697 205.151 140.78 197.504 cv
141.236 203.698 139.833 209.619 141.419 215.56 cv
142.848 220.957 146.039 225.817 147.55 230.977 cv
150.348 240.631 146.447 252.93 152.383 261.466 cv
153.723 260.561 li
cp
f
143.528 190.42 mo
144.05 198.997 139.965 204.694 138.68 212.781 cv
136.313 204.78 139 197.946 143.094 191.734 cv
143.528 190.42 li
cp
f
141.323 234.098 mo
143.193 238.73 144.231 243.954 143.88 249.063 cv
140.167 243.648 138.754 234.55 139.208 227.958 cv
140.177 230.116 140.795 232.967 141.323 235.422 cv
141.323 234.098 li
cp
f
161.672 288.372 mo
160.994 282.56 160.63 275.815 158.253 270.405 cv
158.025 271.085 157.774 271.731 157.601 272.435 cv
156.185 270.991 156.781 266.796 156.459 264.586 cv
157.923 267.571 157.761 272.44 162.16 273.315 cv
162.939 271.666 163.569 269.731 163.542 267.789 cv
165.188 270.489 167.541 272.842 168.338 275.889 cv
167.555 273.958 165.873 272.708 164.331 271.65 cv
161.06 276.362 165.015 286.416 161.24 290.139 cv
161.672 288.372 li
cp
f
148.409 272.05 mo
148.409 278.296 146.897 282.568 145.287 288.222 cv
145.373 282.89 148.359 277.229 147.955 272.474 cv
148.409 272.05 li
cp
f
145.751 287.059 mo
145.751 284.173 145.221 280.663 145.84 277.884 cv
146.47 275.154 148.578 273.129 148.409 269.952 cv
148.409 270.973 148.404 271.95 148.409 272.927 cv
145.751 287.059 li
cp
f
162.558 284.183 mo
162.896 286.09 164.349 290.274 162.138 291.451 cv
160.891 292.124 159.493 291.128 158.123 291.72 cv
157.183 292.153 156.704 293.295 155.754 293.728 cv
154.297 294.372 153.997 293.81 152.659 293.158 cv
150.934 292.352 151.404 292.566 149.675 292.727 cv
148.144 292.852 148.128 293.5 147.566 291.646 cv
147.256 290.623 147.376 288.849 147.967 288.008 cv
147.885 290.127 149.796 292.429 152.162 291.651 cv
153.018 291.332 153.191 290.255 154.148 290.133 cv
155.519 289.961 155.506 291.429 156.355 291.463 cv
157.672 291.519 160.487 289.094 160.78 288.372 cv
161.592 286.439 161.458 283.611 161.458 281.512 cv
162.558 284.183 li
cp
f
218.763 176.288 mo
221.549 182.066 211.436 181.451 208.567 181.159 cv
203.816 180.672 199.768 180.907 195.8 184.098 cv
197.348 176.835 213.402 171.669 219.198 175.857 cv
218.763 176.288 li
cp
f
218.312 197.464 mo
219.02 198.33 219.435 198.906 219.123 200.061 cv
215.542 199.859 212.056 198.859 208.569 198.347 cv
204.401 197.748 201.134 199.015 197.004 199.227 cv
201.048 197.132 212.458 194.908 217.426 197.034 cv
218.312 197.464 li
cp
f
217.878 210.26 mo
218.879 211.241 219.516 212.03 219.548 213.315 cv
214.363 209.376 208.444 211.198 202.412 211.495 cv
205.918 207.973 213.937 207.814 217.878 209.83 cv
217.878 210.26 li
cp
f
230.259 80.2456 mo
231.257 84.2646 227.992 81.9458 226.445 81.7085 cv
224.365 81.374 221.232 83.7212 219.988 82.0122 cv
217.113 78.084 229.307 78.7534 230.259 80.2456 cv
230.259 80.2456 li
cp
f
204.595 71.4224 mo
204.935 72.6914 204.683 73.6416 203.464 73.7251 cv
203.27 72.7393 203.634 72.002 204.307 71.4224 cv
204.595 71.4224 li
cp
f
215.428 55.3936 mo
213.404 55.8076 211.692 55.9868 209.873 54.7378 cv
210.798 54.2437 214.805 54.9038 215.428 55.167 cv
215.428 55.3936 li
cp
f
203.369 59.7744 mo
203.369 58.7544 203.541 57.9473 203.889 57.0352 cv
204.168 56.2642 205.065 55.3135 204.914 54.5977 cv
204.684 53.4966 204.132 52.4458 203.902 51.2837 cv
203.645 49.9331 203.94 48.4585 203.661 47.1138 cv
203.646 47.0547 203.633 45.1768 203.633 45.1211 cv
203.468 46.1499 203.226 48.981 203.092 50.0205 cv
202.898 51.4551 203.01 53.0117 203.01 54.4673 cv
203.01 55.5122 203.023 56.5391 203.078 57.5791 cv
203.113 58.3022 203.305 58.9966 203.302 59.7075 cv
203.369 59.7744 li
cp
f
278.946 281.713 mo
278.946 280.947 255.852 278.771 228.344 278.771 cv
200.854 278.771 171.017 282.247 171.017 283.013 cv
171.017 283.778 198.811 280.979 226.299 280.979 cv
253.809 280.979 278.946 282.478 278.946 281.713 cv
cp
f
226.894 61.2476 mo
227.992 60.7134 228.52 61.4092 229.324 62.1313 cv
230.713 60.8584 228.497 59.1284 227.304 59.0288 cv
226.894 61.2476 li
cp
f
223.333 61.9048 mo
222.294 60.8574 221.725 61.4092 220.697 61.8887 cv
220.087 60.5908 221.972 58.8389 223.227 59.0288 cv
223.333 61.9048 li
cp
f
225 403.209 mo
183.494 403.209 149.865 369.667 149.865 328.252 cv
149.865 286.895 183.494 253.353 225 253.353 cv
266.471 253.353 300.164 286.895 300.164 328.252 cv
300.164 369.667 266.471 403.209 225 403.209 cv
cp
225 235.769 mo
173.859 235.769 132.253 277.257 132.253 328.252 cv
132.253 379.247 173.859 420.734 225 420.734 cv
276.141 420.734 317.747 379.247 317.747 328.252 cv
317.747 277.257 276.141 235.769 225 235.769 cv
cp
.701961 .701961 .701961 rgb
f
225 420.734 mo
173.859 420.734 132.253 379.247 132.253 328.252 cv
132.253 277.257 173.859 235.769 225 235.769 cv
276.141 235.769 317.747 277.257 317.747 328.252 cv
317.747 379.247 276.141 420.734 225 420.734 cv
cp
225 230.503 mo
170.956 230.503 126.987 274.353 126.987 328.252 cv
126.987 382.15 170.956 426 225 426 cv
279.045 426 323.013 382.15 323.013 328.252 cv
323.013 274.353 279.045 230.503 225 230.503 cv
cp
0 0 0 rgb
f
225 351.508 mo
212.127 351.508 201.706 341.112 201.706 328.252 cv
201.706 315.434 212.127 305.054 225 305.054 cv
237.854 305.054 248.32 315.434 248.32 328.252 cv
248.32 341.112 237.854 351.508 225 351.508 cv
cp
225 253.353 mo
183.494 253.353 149.865 286.895 149.865 328.252 cv
149.865 369.667 183.494 403.209 225 403.209 cv
266.471 403.209 300.164 369.667 300.164 328.252 cv
300.164 286.895 266.471 253.353 225 253.353 cv
cp
f
225 346.506 mo
214.91 346.506 206.701 338.318 206.701 328.252 cv
206.701 318.215 214.91 310.049 225 310.049 cv
235.09 310.049 243.299 318.215 243.299 328.252 cv
243.299 338.318 235.09 346.506 225 346.506 cv
cp
225 305.054 mo
212.127 305.054 201.706 315.434 201.706 328.252 cv
201.706 341.112 212.127 351.508 225 351.508 cv
237.854 351.508 248.32 341.112 248.32 328.252 cv
248.32 315.434 237.854 305.054 225 305.054 cv
cp
.701961 .701961 .701961 rgb
f
225 313.998 mo
217.088 313.998 210.651 320.393 210.651 328.252 cv
210.651 336.14 217.088 342.556 225 342.556 cv
232.912 342.556 239.349 336.14 239.349 328.252 cv
239.349 320.393 232.912 313.998 225 313.998 cv
cp
.968627 .576471 .117647 rgb
f
225 342.556 mo
217.088 342.556 210.651 336.14 210.651 328.252 cv
210.651 320.393 217.088 313.998 225 313.998 cv
232.912 313.998 239.349 320.393 239.349 328.252 cv
239.349 336.14 232.912 342.556 225 342.556 cv
cp
225 310.049 mo
214.91 310.049 206.701 318.215 206.701 328.252 cv
206.701 338.318 214.91 346.506 225 346.506 cv
235.09 346.506 243.299 338.318 243.299 328.252 cv
243.299 318.215 235.09 310.049 225 310.049 cv
cp
0 0 0 rgb
f
175.32 322.258 mo
175.544 321.33 li
177.375 321.567 178.828 321.14 179.903 320.052 cv
181.04 320.102 182.431 320.438 184.076 321.059 cv
183.656 321.812 li
183.57 322.171 li
181.934 324.469 179.524 325.646 176.343 325.704 cv
175.12 325.539 174.78 324.391 175.32 322.258 cv
cp
159.895 314.006 mo
160.8 311.249 162.81 309.687 165.927 309.316 cv
166.588 309.251 167.242 309.409 167.889 309.79 cv
167.772 310.313 167.693 310.991 167.652 311.823 cv
167.569 312.167 li
167.533 312.28 167.543 312.409 167.602 312.554 cv
167.491 313.018 li
167.498 313.511 li
167.416 313.855 li
167.095 314.142 li
166.694 314.139 166.26 314.078 165.794 313.954 cv
165.387 314.054 165.003 314.288 164.644 314.66 cv
163.83 314.956 li
161.166 314.314 li
160.848 314.198 160.53 314.162 160.21 314.209 cv
159.895 314.006 li
cp
159.079 316.869 mo
159.191 316.444 159.418 316.009 159.759 315.557 cv
160.262 315.727 160.888 315.84 161.639 315.899 cv
162.006 316.091 162.425 316.228 162.899 316.316 cv
163.095 316.49 li
163.469 316.453 li
163.708 316.623 163.999 316.777 164.339 316.915 cv
164.531 317.204 164.786 317.509 165.101 317.828 cv
165.433 318.003 165.887 318.154 166.463 318.283 cv
167.797 317.559 168.956 316.491 169.939 315.083 cv
170.487 314.785 171.002 314.332 171.483 313.729 cv
172.059 313.377 li
172.437 313.009 172.976 312.649 173.679 312.294 cv
173.839 312.094 li
176.185 311.551 li
176.706 311.425 li
177.062 311.491 177.44 311.461 177.836 311.333 cv
180.692 311.733 182.796 313.344 184.144 316.165 cv
184.444 317.024 184.503 317.982 184.322 319.042 cv
183.516 319.016 182.54 318.818 181.395 318.448 cv
179.63 318.149 li
179.365 316.961 178.572 316.158 177.253 315.737 cv
176.481 315.84 175.666 316.177 174.809 316.747 cv
174.389 317.501 li
174.019 317.721 173.617 318.031 173.185 318.431 cv
172.982 318.748 li
172.716 318.809 li
172.526 319.129 li
172.259 319.189 li
169.879 322.406 166.561 323.283 162.303 321.825 cv
162.096 321.523 161.804 321.205 161.426 320.87 cv
161.139 320.548 160.771 320.217 160.319 319.873 cv
160.238 319.63 160.091 319.389 159.877 319.151 cv
159.823 318.52 159.568 317.888 159.113 317.254 cv
159.149 317.141 159.138 317.011 159.079 316.869 cv
cp
1 1 1 rgb
f
172.796 292.213 mo
173.201 291.795 li
174.531 292.135 175.77 292.855 176.916 293.958 cv
175.65 295.883 li
175.454 296.18 li
175.268 296.466 li
175.037 296.591 li
174.885 297.045 li
174.587 297.274 li
175.75 298.038 li
176.034 298.224 li
177.686 299.311 li
178.073 299.565 li
179.326 300.389 li
179.804 300.704 li
180.875 301.406 li
181.262 301.661 li
181.717 301.814 li
182.231 302.297 li
182.686 302.45 li
183.266 302.832 li
183.575 303.182 li
184.07 303.388 184.61 303.692 185.191 304.097 cv
185.773 304.479 li
186.354 304.861 li
187.037 305.311 li
187.902 305.88 li
188.299 306.184 188.836 306.494 189.511 306.807 cv
189.899 307.059 li
190.184 307.248 li
190.868 307.698 li
191.54 308.138 li
191.424 309.01 190.958 309.856 190.144 310.681 cv
190.083 311.055 189.915 311.451 189.641 311.868 cv
188.224 311.49 li
187.871 311.052 187.409 310.707 186.837 310.449 cv
185.197 309.372 li
185.144 309.304 185.059 309.291 184.943 309.335 cv
184.326 308.787 183.464 308.27 182.358 307.783 cv
182.067 307.449 181.645 307.172 181.094 306.954 cv
180.718 306.707 li
180.323 306.347 179.806 306.009 179.169 305.688 cv
174.328 302.507 li
173.724 301.96 li
172.403 301.24 li
172.082 301.306 li
171.872 301.625 171.705 302.021 171.578 302.493 cv
171.245 302.786 170.936 303.181 170.652 303.679 cv
170.457 303.975 li
170.27 304.26 li
169.983 304.496 li
169.423 304.358 168.83 304.06 168.203 303.603 cv
167.145 302.909 li
166.595 302.677 li
166.462 302.461 li
166.72 301.868 167.115 301.202 167.645 300.463 cv
167.84 300.166 li
168.536 299.108 li
169.683 297.364 li
169.871 297.079 li
170.255 296.594 170.624 295.958 170.975 295.178 cv
171.169 294.882 li
171.612 294.209 li
171.807 293.912 li
172.121 293.435 li
172.631 292.66 li
172.796 292.213 li
cp
f
181.322 277.563 mo
184.127 275.736 186.567 276.136 188.646 278.767 cv
190.959 280.554 191.757 282.757 191.04 285.377 cv
191.331 285.755 li
191.8 285.592 192.368 285.552 193.031 285.638 cv
193.29 285.595 li
194.069 286.028 li
194.302 286.272 194.554 286.474 194.825 286.632 cv
196.262 288.501 li
196.834 289.247 li
197.05 289.529 li
197.408 289.992 li
197.698 290.371 li
198.122 290.922 li
199.557 292.792 li
199.774 293.073 li
200.064 293.453 li
200.271 293.72 li
200.4 294.067 li
200.02 294.485 199.457 294.917 198.712 295.363 cv
198.417 295.741 li
198.136 295.958 li
197.866 296.01 li
197.669 296.313 li
197.193 296.678 li
196.595 296.155 195.969 295.397 195.314 294.412 cv
192.516 290.771 li
192.272 290.362 191.929 289.984 191.489 289.634 cv
191.274 289.353 li
190.69 289.205 190.142 289.328 189.629 289.72 cv
189.013 289.3 li
188.663 288.755 188.155 288.159 187.488 287.516 cv
187.272 287.234 li
187.111 286.637 187.275 286.013 187.763 285.366 cv
186.587 282.09 184.87 280.687 182.606 281.163 cv
182.341 280.426 181.826 279.884 181.061 279.53 cv
180.532 278.871 180.619 278.215 181.322 277.563 cv
cp
177.511 280.327 mo
177.797 280.177 178.18 280.034 178.658 279.895 cv
178.936 280.347 179.351 280.819 179.901 281.311 cv
179.945 281.57 li
180.235 281.949 li
180.451 282.23 li
180.734 282.596 li
181.024 282.975 li
181.239 283.256 li
181.553 283.462 li
181.813 284.002 li
182.311 284.648 li
182.699 284.953 li
182.981 285.321 li
183.487 285.979 li
183.859 286.36 184.241 286.856 184.633 287.472 cv
185.205 288.217 li
185.518 288.423 li
185.975 289.242 186.684 290.231 187.646 291.394 cv
188.144 292.041 li
188.616 292.551 189.108 293.26 189.624 294.17 cv
190.228 294.755 li
191.903 296.733 li
193.339 298.603 li
193.556 299.466 li
191.866 300.759 li
191.497 301.043 li
191.216 301.258 li
190.837 301.548 li
190.468 301.831 li
187.099 297.442 li
186.785 297.236 li
186.429 296.771 li
186.191 296.358 185.857 295.924 185.424 295.463 cv
185.164 294.925 li
184.804 294.561 184.422 294.063 184.019 293.435 cv
183.705 293.226 li
183.587 292.873 li
183.23 292.407 li
182.681 291.856 182.05 291.104 181.34 290.147 cv
180.833 289.489 li
180.491 288.94 179.937 288.278 179.169 287.501 cv
178.382 286.477 li
178.186 286.041 li
177.161 284.886 li
176.786 284.339 176.227 283.68 175.486 282.908 cv
175.278 282.639 li
175.558 282.391 175.767 282.081 175.908 281.711 cv
176.449 281.387 176.985 280.927 177.511 280.327 cv
cp
f
199.205 264.459 mo
200.646 264.266 202.139 264.578 203.684 265.401 cv
203.869 265.724 204.16 265.989 204.558 266.201 cv
205.382 267.879 li
205.563 268.075 li
205.775 268.365 li
205.926 268.928 206.215 269.524 206.639 270.158 cv
206.889 270.561 li
207.037 271.001 li
207.113 271.455 207.318 271.95 207.653 272.489 cv
207.801 272.929 li
207.949 273.367 li
208.214 273.767 li
208.244 274.244 li
208.611 275.022 208.934 276.095 209.214 277.468 cv
209.322 277.79 li
209.47 278.229 li
209.583 278.564 li
209.805 279.223 li
209.914 279.546 li
209.874 280.172 209.985 280.871 210.245 281.647 cv
210.256 282.36 li
210.397 283.548 li
210 285.136 209.064 286.464 207.591 287.532 cv
206.676 286.643 206.059 285.421 205.739 283.872 cv
205.591 283.432 li
205.924 283.026 206.156 282.503 206.288 281.864 cv
206.055 281.004 205.64 279.885 205.041 278.504 cv
204.958 277.916 li
204.63 277.666 li
204.662 277.039 li
202.152 269.577 li
201.698 268.974 201.061 268.534 200.24 268.264 cv
200.153 268.006 200.034 267.762 199.881 267.535 cv
199.796 266.828 199.537 266.057 199.103 265.225 cv
199.205 264.459 li
cp
196.491 265.122 mo
197.167 265.021 197.781 266.117 198.333 268.415 cv
198.345 268.878 198.164 269.308 197.787 269.702 cv
197.83 270.175 li
197.707 270.576 li
198.445 272.771 li
198.483 272.882 198.559 272.976 198.671 273.055 cv
198.702 273.532 li
198.813 273.867 li
199.011 274.252 199.183 274.763 199.332 275.405 cv
199.931 276.797 li
200.556 278.656 li
200.739 279.198 li
201.042 279.713 li
201.182 280.515 li
201.43 280.882 201.629 281.347 201.779 281.906 cv
201.914 282.391 202.145 282.963 202.474 283.63 cv
202.803 283.949 203.269 284.12 203.87 284.139 cv
204.311 284.723 li
204.382 285.043 204.504 285.41 204.681 285.821 cv
204.757 286.359 204.967 286.985 205.312 287.692 cv
205.315 288.049 li
203.72 288.785 202.179 288.567 200.69 287.399 cv
200.492 287.581 li
200.218 287.05 199.756 286.391 199.106 285.603 cv
198.774 284.997 li
198.683 284.672 198.486 284.327 198.18 283.96 cv
197.564 282.472 li
197.45 282.137 li
197.13 281.697 196.855 281.139 196.626 280.46 cv
196.565 280.136 196.432 279.854 196.227 279.615 cv
196.218 279.245 li
195.795 278.393 195.428 277.3 195.115 275.965 cv
194.227 273.334 li
194.231 272.96 li
194.236 272.586 li
193.979 271.824 li
193.941 271.31 193.838 270.651 193.673 269.843 cv
193.68 269.481 li
193.749 268.613 li
194.255 267.322 195.169 266.159 196.491 265.122 cv
cp
f
227.441 275.864 mo
226.514 275.506 li
226.533 274.471 li
226.075 273.432 li
225.616 272.259 li
225.386 272.025 li
225.278 271.685 li
225.047 271.452 li
224.949 271.124 224.796 270.737 224.589 270.291 cv
224.359 269.936 li
224.323 269.8 224.246 269.687 224.129 269.594 cv
224.022 269.131 li
223.915 268.544 li
223.563 268.203 li
223.455 267.738 li
223.116 267.383 li
223.117 267.11 223.077 266.843 222.997 266.579 cv
223.017 265.652 li
222.955 265.108 223 264.452 223.149 263.681 cv
223.105 263.352 223.108 262.967 223.155 262.523 cv
223.854 262.419 li
224.563 262.488 225.451 262.457 226.516 262.328 cv
226.871 262.33 li
226.889 262.411 226.966 262.491 227.101 262.563 cv
227.343 263.517 227.369 264.675 227.178 266.037 cv
227.299 266.389 li
227.276 268.35 li
227.311 268.676 227.308 269.063 227.27 269.507 cv
227.25 269.851 227.285 270.161 227.374 270.434 cv
227.371 270.787 li
227.367 271.822 li
227.365 272.285 li
227.465 273.783 li
227.565 275.295 li
227.441 275.864 li
cp
217.481 286.864 mo
216.597 286.985 215.788 286.784 215.053 286.263 cv
215.061 284.873 li
215.075 284.519 li
215.087 282.56 li
215.089 282.097 li
215.091 281.756 li
215.139 281.367 215.104 280.94 214.989 280.478 cv
215.109 280.059 215.111 279.56 214.996 278.981 cv
215.1 278.517 215.107 277.977 215.019 277.361 cv
215.058 276.952 215.024 276.489 214.917 275.971 cv
214.973 275.745 214.974 275.513 214.921 275.277 cv
215.046 274.815 li
214.931 274.35 214.893 273.811 214.933 273.194 cv
214.863 272.577 214.912 271.845 215.08 271.004 cv
215.083 270.65 li
215.546 270.776 li
215.654 271.084 215.844 271.394 216.114 271.704 cv
216.3 272.786 216.754 273.832 217.477 274.846 cv
217.584 275.308 li
218.043 276.114 li
218.61 277.507 li
218.732 277.737 li
219.071 278.095 li
219.068 278.558 li
219.529 279.134 li
219.636 279.717 li
219.866 280.184 li
219.882 280.374 219.959 280.565 220.094 280.756 cv
219.697 282.106 219.682 283.647 220.056 285.384 cv
219.933 285.615 li
219.804 286.539 li
217.481 286.864 li
cp
227.11 286.617 mo
226.417 286.72 225.726 286.521 225.038 286.016 cv
224.868 285.226 224.486 284.333 223.891 283.342 cv
223.784 282.878 li
223.554 282.643 li
223.419 282.089 223.153 281.512 222.757 280.909 cv
222.65 280.556 li
222.419 280.214 li
222.303 279.686 222.037 279.145 221.622 278.587 cv
221.624 278.234 li
221.394 277.771 li
221.055 277.415 li
220.957 276.877 220.691 276.376 220.257 275.912 cv
220.213 275.675 220.136 275.444 220.029 275.216 cv
220.048 275.134 220.006 275.057 219.907 274.985 cv
219.738 274.384 219.436 273.8 219.002 273.235 cv
219.003 272.893 li
218.664 272.307 li
218.314 271.733 li
217.975 271.146 li
217.86 270.564 217.554 269.981 217.056 269.397 cv
217.058 269.057 li
216.831 268.729 216.606 268.342 216.381 267.896 cv
216.149 267.662 li
216.028 267.43 li
215.94 266.903 215.674 266.362 215.231 265.804 cv
215.019 264.646 li
215.076 264.256 215.078 263.829 215.026 263.366 cv
215.03 262.564 li
215.614 262.378 216.31 262.382 217.119 262.578 cv
217.94 262.365 li
218.404 262.368 li
218.744 262.479 li
218.933 263.08 219.311 263.854 219.88 264.801 cv
219.862 264.884 219.901 264.961 220.002 265.034 cv
220.001 265.152 220.037 265.271 220.109 265.388 cv
220.208 265.715 220.36 266.102 220.568 266.548 cv
220.796 266.903 li
220.796 267.013 220.832 267.127 220.904 267.245 cv
221.133 267.833 li
221.249 268.231 221.48 268.654 221.824 269.102 cv
221.821 269.455 li
222.052 269.799 li
222.123 270.017 222.235 270.247 222.391 270.495 cv
222.618 271.191 li
222.833 271.776 li
223.184 272.474 li
223.522 273.171 li
223.752 273.635 li
224.09 274.332 li
224.318 275.026 li
224.655 275.723 li
224.872 276.289 225.213 276.948 225.682 277.704 cv
225.78 278.186 226.01 278.65 226.371 279.098 cv
226.388 279.342 226.5 279.652 226.708 280.026 cv
227.168 280.723 li
227.203 280.968 227.28 281.237 227.397 281.528 cv
227.367 284.427 li
227.475 284.658 li
227.363 284.997 li
227.343 286.386 li
227.27 286.404 227.192 286.48 227.11 286.617 cv
cp
f
246.372 268.461 mo
248.415 269.814 249.203 271.779 248.739 274.358 cv
248.699 275.049 248.51 275.805 248.178 276.629 cv
247.522 276.463 246.855 276.477 246.179 276.669 cv
245.226 276.575 li
244.495 276.183 li
244.637 275.32 244.95 274.32 245.432 273.182 cv
245.297 272.747 245.049 272.294 244.686 271.817 cv
244.807 271.178 245.081 270.409 245.507 269.51 cv
245.816 268.637 li
245.996 268.456 li
246.104 268.506 246.229 268.507 246.372 268.461 cv
cp
244.322 281.193 mo
244.798 281.459 245.446 281.729 246.269 282.001 cv
246.237 282.606 246.075 283.29 245.785 284.053 cv
245.81 284.308 li
245.69 284.641 li
245.51 284.822 li
245.499 285.18 li
245.314 285.374 li
245.303 285.733 li
245.049 286.228 244.866 286.866 244.753 287.646 cv
244.498 288.035 244.279 288.53 244.095 289.128 cv
243.977 289.461 li
243.821 289.898 li
243.665 290.334 li
243.159 291.757 li
243.005 292.193 li
242.494 293.629 li
241.56 293.594 241.016 293.03 240.864 291.936 cv
238.955 292.276 237.838 292.043 237.517 291.234 cv
238.529 288.389 li
239.035 287.702 li
240.278 287.606 241.032 286.638 241.301 284.796 cv
240.207 284.406 li
240.208 283.672 li
241.374 280.389 li
242.407 280.626 li
242.96 280.918 243.599 281.109 244.322 281.193 cv
cp
242.512 267.085 mo
243.914 267.713 li
243.746 268.507 li
243.433 269.392 li
243.398 269.457 243.412 269.543 243.47 269.651 cv
243.357 269.97 li
243.237 270.305 li
242.939 270.873 242.413 271.18 241.66 271.23 cv
241.458 271.505 241.194 271.782 240.872 272.062 cv
240.838 272.484 240.707 272.972 240.482 273.526 cv
239.779 275.501 li
239.623 275.936 li
239.506 276.32 239.411 276.818 239.337 277.439 cv
239.058 277.869 238.798 278.474 238.56 279.255 cv
237.78 281.447 li
237.661 281.782 li
237.506 282.217 li
237.425 282.81 li
237.233 283.349 li
236.997 284.016 li
236.805 284.553 li
236.671 285.258 li
236.439 285.911 li
236.741 286.26 237.026 286.731 237.298 287.328 cv
236.864 288.166 236.599 289.141 236.504 290.253 cv
236.385 290.584 li
236.137 290.737 235.9 290.943 235.674 291.199 cv
231.648 288.821 231.085 284.832 233.988 279.231 cv
234.094 278.47 234.392 277.632 234.882 276.716 cv
234.891 276.635 234.845 276.535 234.74 276.42 cv
235.035 276.282 li
235.084 275.74 235.292 275.154 235.662 274.525 cv
235.651 274.253 235.718 273.944 235.86 273.6 cv
235.846 273.392 235.923 273.174 236.092 272.947 cv
236.288 272.394 li
236.336 272.18 236.34 271.936 236.303 271.664 cv
236.679 271.363 236.873 270.941 236.884 270.396 cv
237.298 269.923 li
237.494 269.372 li
238.856 268.209 240.528 267.447 242.512 267.085 cv
cp
f
273.776 280.111 mo
274.251 280.848 274.98 281.549 275.965 282.219 cv
276.061 282.462 li
275.719 283.005 275.232 283.609 274.595 284.27 cv
274.365 284.519 li
274.137 284.79 li
273.197 285.832 li
272.977 286.092 li
272.901 286.349 li
272.775 286.467 272.676 286.634 272.604 286.845 cv
272.262 287.079 271.975 287.402 271.746 287.813 cv
271.627 287.867 271.524 287.982 271.434 288.155 cv
271.283 288.266 271.156 288.408 271.055 288.583 cv
270.651 288.847 li
270.275 289.456 li
269.966 289.799 li
269.345 290.486 li
268.956 290.924 li
268.73 291.174 268.501 291.493 268.27 291.877 cv
267.41 292.826 li
267.343 293.071 li
266.949 293.345 li
266.784 293.668 266.498 293.987 266.1 294.303 cv
265.995 294.524 265.814 294.78 265.555 295.069 cv
265.188 295.671 li
264.54 296.031 li
264.409 296.543 li
264.172 296.807 263.832 297.124 263.384 297.495 cv
262.85 298.272 li
262.628 298.531 li
262.511 298.587 262.432 298.673 262.389 298.793 cv
262.15 299.052 li
261.929 299.312 li
261.811 299.367 261.731 299.455 261.691 299.573 cv
261.38 299.916 li
260.53 300.873 li
259.551 300.409 258.594 299.665 257.664 298.634 cv
258.027 297.813 258.692 296.842 259.657 295.722 cv
259.9 295.625 li
260.241 294.974 260.781 294.369 261.52 293.805 cv
261.748 293.285 262.108 292.827 262.596 292.434 cv
262.794 292.089 263.076 291.716 263.442 291.314 cv
267.156 286.988 li
267.51 286.656 267.842 286.224 268.153 285.689 cv
271.872 281.528 li
272.122 281.206 272.458 280.831 272.882 280.405 cv
273.122 280.146 li
273.776 280.111 li
cp
264.926 272.83 mo
265.254 273.06 265.549 273.375 265.808 273.774 cv
266.03 273.879 266.286 274.057 266.578 274.302 cv
266.839 274.543 li
267.455 275.084 li
267.069 275.707 266.727 276.497 266.433 277.446 cv
266.133 277.799 li
266.141 278.127 li
265.175 279.915 li
265.043 280.409 li
264.934 280.566 264.859 280.765 264.822 281.006 cv
264.444 281.596 li
264.117 282.08 263.878 282.699 263.728 283.449 cv
263.451 283.763 263.252 284.159 263.13 284.639 cv
262.763 285.239 li
263.041 285.797 li
264.64 284.887 li
265.438 284.351 li
265.992 283.91 li
266.309 283.894 li
266.714 283.63 li
266.943 283.837 267.127 284.1 267.264 284.418 cv
266.939 284.868 266.521 285.276 266.01 285.639 cv
265.935 285.896 li
265.621 286.075 li
265.473 286.416 li
265.165 286.759 li
264.925 287.02 li
263.834 288.237 li
263.534 288.493 263.278 288.836 263.069 289.264 cv
262.754 289.444 li
262.531 289.878 li
261.991 290.301 261.396 290.909 260.746 291.701 cv
260.29 292.386 li
258.545 293.634 li
258.278 293.57 li
258.057 293.83 li
257.818 294.091 li
257.33 294.284 li
257.02 294.627 li
256.462 294.902 li
256.07 295.176 li
255.885 295.293 255.73 295.464 255.598 295.686 cv
254.882 296.151 li
254.575 296.021 254.232 295.818 253.855 295.544 cv
254.021 295.068 254.297 294.582 254.683 294.087 cv
255.056 293.332 li
255.106 292.913 li
255.418 292.569 li
255.399 292.233 li
255.484 292.161 255.529 292.052 255.535 291.903 cv
255.923 291.302 li
256.228 290.794 li
256.281 290.374 li
256.507 289.959 li
256.639 289.446 li
257.544 287.751 li
257.512 287.26 li
257.986 286.603 258.324 285.814 258.526 284.889 cv
258.736 284.557 258.927 284.105 259.099 283.537 cv
259.34 283.279 li
259.387 282.692 li
259.705 282.25 259.976 281.657 260.198 280.918 cv
260.409 280.331 li
260.501 280.181 260.573 279.985 260.623 279.744 cv
260.99 279.188 261.277 278.453 261.485 277.548 cv
261.717 277.298 li
261.699 276.962 li
262.155 276.278 li
262.434 275.444 li
262.561 274.766 li
264.342 272.779 li
264.926 272.83 li
cp
257.395 281.074 mo
257.301 280.994 li
257.395 281.074 li
257.693 281.969 li
257.439 282.503 257.202 283.177 256.978 283.988 cv
256.758 284.247 li
256.632 284.829 256.362 285.422 255.948 286.021 cv
255.965 286.359 li
255.64 286.701 255.416 287.124 255.298 287.629 cv
254.992 288.136 li
254.858 288.631 li
254.562 289.148 li
254.485 289.546 254.319 290.024 254.062 290.578 cv
252.513 292.315 li
252.14 293.07 li
251.91 293.339 li
251.507 293.605 li
251.193 293.784 li
250.948 293.565 250.632 293.339 250.245 293.106 cv
249.282 292.236 li
248.952 292.097 li
248.76 291.773 li
248.512 291.706 li
248.32 291.382 li
248.419 291.228 248.489 291.031 248.535 290.794 cv
248.952 290.459 249.336 289.97 249.69 289.33 cv
250.005 289.073 250.29 288.758 250.55 288.383 cv
251.401 287.426 li
251.722 287.236 li
252.343 286.549 li
252.95 285.689 li
253.256 285.181 li
254.344 283.964 li
254.697 283.466 255.215 282.942 255.898 282.39 cv
256.448 281.787 li
256.743 281.269 li
257.301 280.994 li
257.395 281.074 li
cp
f
282.549 297.258 mo
282.464 298.266 282.844 299.215 283.684 300.104 cv
283.555 300.32 283.476 300.584 283.449 300.899 cv
282.885 301.192 282.221 301.682 281.459 302.374 cv
280.943 302.649 li
280.589 302.966 li
280.481 303.011 280.396 303.105 280.335 303.241 cv
279.572 303.777 li
279.21 304.111 li
278.706 304.38 li
278.726 304.474 278.692 304.581 278.601 304.701 cv
278.502 304.747 278.42 304.836 278.361 304.971 cv
277.931 305.149 277.489 305.476 277.032 305.949 cv
276.406 306.243 275.848 306.767 275.356 307.517 cv
274.78 307.807 274.216 308.239 273.66 308.818 cv
272.998 309.312 li
272.555 309.635 272.048 310.084 271.482 310.656 cv
271.04 310.946 270.544 311.346 269.996 311.859 cv
269.695 312.02 li
269.619 312.051 269.567 312.128 269.538 312.245 cv
268.833 312.888 li
268.413 313.114 li
268.176 313.646 li
266.584 314.626 li
266.439 314.843 li
265.017 316.134 li
264.297 316.522 li
263.394 314.621 li
263.226 314.309 li
263.093 314.007 262.912 313.749 262.682 313.533 cv
262.609 313.168 li
262.336 312.664 li
262.98 311.85 263.95 311.02 265.244 310.168 cv
265.113 309.639 264.847 309.069 264.445 308.46 cv
264.508 308.405 264.54 308.299 264.538 308.143 cv
265.206 307.661 li
266.104 307.664 267.019 307.39 267.948 306.837 cv
268.708 307.499 li
269.065 307.109 269.538 306.68 270.13 306.206 cv
270.274 305.989 li
270.356 305.966 270.406 305.897 270.427 305.782 cv
270.821 305.612 271.247 305.336 271.711 304.951 cv
271.959 304.725 272.285 304.504 272.683 304.289 cv
272.878 303.999 273.199 303.695 273.649 303.382 cv
273.997 303.055 li
274.461 302.681 li
274.775 302.327 275.252 301.976 275.891 301.633 cv
276.042 301.426 li
276.447 300.944 li
277.11 300.45 li
277.567 300.065 li
277.711 299.893 277.947 299.679 278.271 299.422 cv
278.508 299.346 278.679 299.164 278.783 298.882 cv
279.452 298.397 li
279.947 297.853 li
280.57 297.518 li
281.072 296.983 li
281.753 296.755 li
281.882 297.07 282.147 297.237 282.549 297.258 cv
cp
274.249 299.338 mo
274.434 300.169 li
273.938 300.414 273.427 300.777 272.903 301.256 cv
272.472 301.435 272.062 301.745 271.669 302.183 cv
271.262 302.403 li
271.111 302.609 li
270.69 302.834 li
270.342 303.162 li
268.402 304.469 li
268.294 304.517 268.208 304.609 268.149 304.744 cv
267.836 304.913 li
267.481 305.228 li
267.013 305.53 266.445 305.707 265.773 305.76 cv
264.956 306.198 li
264.586 306.257 li
264.275 306.427 li
263.293 306.814 li
263.037 306.828 li
262.629 307.049 li
262.052 307.163 261.396 307.427 260.661 307.843 cv
260.399 307.847 li
259.938 307.969 li
259.692 307.472 259.289 306.975 258.732 306.479 cv
258.121 305.088 li
257.951 304.775 li
257.781 304.461 li
257.973 304.098 li
258.464 303.822 259.035 303.649 259.688 303.577 cv
260.332 303.281 261.18 303.047 262.232 302.874 cv
263.781 302.305 li
264.451 302.083 li
265.28 301.899 li
266.882 301.426 li
267.398 301.15 li
267.922 301.147 li
268.397 300.88 269.034 300.665 269.834 300.504 cv
272.219 299.764 li
273.156 299.522 li
273.564 299.302 li
274.249 299.338 li
cp
f
280.89 327.274 mo
281.098 326.306 li
282.124 326.161 li
283.076 325.548 li
284.163 324.911 li
284.357 324.648 li
284.677 324.487 li
284.872 324.225 li
285.179 324.077 285.538 323.865 285.944 323.59 cv
286.259 323.307 li
286.389 323.251 286.489 323.156 286.561 323.028 cv
287.001 322.849 li
287.565 322.652 li
287.846 322.25 li
288.288 322.072 li
288.585 321.68 li
288.854 321.642 289.113 321.56 289.362 321.439 cv
290.279 321.311 li
290.809 321.167 291.464 321.108 292.251 321.135 cv
292.566 321.04 292.949 320.982 293.394 320.96 cv
293.609 321.632 li
293.654 322.342 293.826 323.213 294.124 324.244 cv
294.177 324.595 li
294.1 324.624 294.036 324.713 293.984 324.858 cv
293.078 325.247 291.94 325.452 290.564 325.479 cv
290.234 325.653 li
288.293 325.937 li
287.975 326.023 287.593 326.08 287.147 326.112 cv
286.804 326.145 286.504 326.229 286.249 326.359 cv
285.897 326.414 li
284.874 326.568 li
284.418 326.639 li
282.953 326.973 li
281.475 327.31 li
280.89 327.274 li
cp
270.209 328.633 mo
269.997 327.967 270.084 327.254 270.471 326.495 cv
271.226 326.204 272.046 325.688 272.934 324.945 cv
273.374 324.768 li
273.569 324.504 li
274.095 324.284 274.625 323.931 275.156 323.445 cv
275.489 323.284 li
275.791 323.003 li
276.292 322.806 276.786 322.459 277.271 321.962 cv
277.62 321.909 li
278.042 321.61 li
278.34 321.22 li
278.855 321.039 279.307 320.698 279.699 320.198 cv
279.926 320.116 280.143 320.006 280.35 319.862 cv
280.434 319.866 280.504 319.816 280.559 319.707 cv
281.126 319.444 281.655 319.056 282.145 318.541 cv
282.482 318.488 li
283.009 318.063 li
283.519 317.625 li
284.047 317.2 li
284.603 316.995 285.131 316.602 285.629 316.02 cv
285.966 315.967 li
286.254 315.693 286.601 315.411 287.004 315.118 cv
287.2 314.853 li
287.411 314.698 li
287.916 314.528 288.41 314.181 288.889 313.656 cv
290.001 313.267 li
290.395 313.262 290.818 313.198 291.266 313.073 cv
292.061 312.952 li
292.337 313.496 292.444 314.186 292.38 315.014 cv
292.72 315.791 li
292.79 316.25 li
292.734 316.602 li
292.171 316.881 291.467 317.376 290.621 318.086 cv
290.537 318.078 290.467 318.132 290.411 318.242 cv
290.294 318.259 290.184 318.314 290.078 318.402 cv
289.77 318.551 289.413 318.763 289.004 319.037 cv
288.689 319.319 li
288.581 319.337 288.473 319.389 288.368 319.479 cv
287.826 319.797 li
287.448 319.973 287.067 320.267 286.679 320.675 cv
286.329 320.729 li
286.027 321.01 li
285.824 321.115 285.613 321.261 285.394 321.451 cv
284.743 321.786 li
284.198 322.09 li
283.564 322.546 li
282.93 322.988 li
282.507 323.289 li
281.872 323.731 li
281.22 324.064 li
280.586 324.506 li
280.063 324.807 279.464 325.248 278.792 325.829 cv
278.331 326.003 277.908 326.301 277.524 326.727 cv
277.284 326.782 276.996 326.941 276.661 327.205 cv
276.044 327.769 li
275.808 327.841 275.556 327.957 275.286 328.119 cv
272.415 328.543 li
272.203 328.687 li
271.85 328.631 li
270.474 328.827 li
270.445 328.758 270.357 328.692 270.209 328.633 cv
cp
268.431 319.172 mo
268.17 318.321 268.239 317.492 268.639 316.685 cv
270.013 316.475 li
270.364 316.434 li
272.303 316.139 li
272.761 316.069 li
273.099 316.017 li
273.491 316.002 273.908 315.904 274.347 315.715 cv
274.778 315.769 275.27 315.693 275.828 315.49 cv
276.301 315.518 276.836 315.44 277.433 315.258 cv
277.843 315.231 278.294 315.125 278.79 314.94 cv
279.022 314.958 279.252 314.924 279.477 314.834 cv
279.953 314.887 li
280.394 314.699 280.921 314.574 281.537 314.519 cv
282.137 314.353 282.866 314.289 283.726 314.323 cv
284.077 314.269 li
284.026 314.746 li
283.738 314.9 283.461 315.135 283.198 315.451 cv
282.159 315.805 281.197 316.417 280.31 317.287 cv
279.869 317.466 li
279.145 318.045 li
277.86 318.822 li
277.65 318.979 li
277.353 319.367 li
276.895 319.439 li
276.399 319.986 li
275.837 320.18 li
275.414 320.481 li
275.228 320.526 275.052 320.631 274.885 320.797 cv
273.487 320.615 271.96 320.842 270.304 321.482 cv
270.056 321.397 li
269.121 321.414 li
268.431 319.172 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.1.1
%%For: (??????? ??????) ()
%%Title: (1505.m00.i121.n040.S.c12.T-shirt vector design for bodybuilders and fitness club.eps)
%%CreationDate: 5/5/2015 11:41 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6H!:s:dPq+'IBMm`LU`m?+SP*2!L4(d-jg%$>;7B46o(1H]fgj-TDbm!e`om7&noS<42]?jhKqIh=nAZ(C/s0)RrA!=Q"o>9
%hu%gY@q8VVa2m3=N.:lnmbMO+rNL?SMdj$JX+u]&?Fs>M4.S^EenfP21PMHt7cn:HP^Y&m5(p=Io<1j%<[s_?TA6krZrO5^>Kq?)
%eBPL+K7VScGCJ#7?8MZ]f'r&r\^mg7Hdk9]CtIqG%fbN/nNRN#DO6YZZRW%is(O[-(b?R)>PPQISlRr/G,\\_2EidgBl;[j8Ir[=
%8Ud>KBH6m+!r\K8L*rg(XXgHooNT_8h8KeW=N^!=!9nGUQR5W.5=>HHrh]N0&H-N9iW&@*]DNKE2D\CRQ?i2tMO;;G"to=oIPu<R
%F_LnB(3ks$_o&_8Wg1.=?_V6q=XUO"s%i2-;.I0XDRe\o=kCp"\@.S1gl,b65?35`l*c!C#_,gk^K*/:_GV[rl[-pb]*Hmdd!]Z)
%dGXt0/Sr19<4d6g-GonqLmQ@Y=HeZmh7%,F>]'%NpqODZ@B"YnFpUg2[3"aE2<,Y'Dm+K[S^Pigh2)=ENcnW8j08?F(V4'[<lVNA
%N\&Z)pjj)aPiI$,A\*^;N5id9kT13"iH"Vt$[:@UdqWB87<s!BNp13cIG1i)q?ZAS).3B\HcZ&?rsPS$dn?NsGIq9.>.ZPN$8;9$
%)+O>]!Tr6T<!pl2D?*(E2c!!$+T/E#:\CpiJ+.A57'EFG_gnL`:$PPl@,QP7l]qD1+77U)o]+DDZe*oKS2C9EYD$5XGoUGQL?3<Z
%9m9d_llLYOIk51IQjbd+m8B@lTRY"!ZDD;OnX9JmTC"<W^J\G<BCu5$kta-.N2/[g5W9WH_HO:2(g,Lg)3Gb1UX[TY&+P03eK=EV
%M9`(b,T;EnpSl.XCh_;%n0m)S_Y@1h8Gn]aWh!nbdLZg;[C^oGgZQ)N8m(Abi&$'-S;5qkfu7AWoR@a'YLG][d1A2cSbObsTD`iN
%faB@ULkSa/<]t;d>%cB+-K"66c8(1"Ah>'PaRAXmakuk@oLufTDV/jn2Io%=B@RGD:.Q@"qFpBpEN`e,d>ua596;kWPq'&;&YsY_
%RtJIJK_%:Uj&F*En?[T!XAq@TGk<7lO!po0Y([*F45DS*D`T<<ieF#Oi(rl'C%.*Wl$(I*CHJLR85I;HoW$`O:RfUT$gM?di2kE8
%q1PK.#Q5g:,Ech6\[A_`X[H*Br-7`).5@bR1mEdchjIL@fDCmrY=SWM^PgVt[#%]Xk;>K+AJY9Jf,F;A$6;CDHJIh@`5n7D@BSE=
%?#3G'X4AcfYe_p8ben91-h38m:\Q6F9g:6IG8E%G%qs&(l!T\sV-6[(q)P0@UK!Qq2"aXIc(o79mhB"$H[K$o7[d'L<NUAh;J\b1
%S*\CiL"4YYDMm7<%EGlIh"FUJeiG<%WTuKCXeaS\)NAMg9ie,)[eBB@3apmaAlOZ4%CBG:\!9PFM;;M8QqYOi3P>?5Ut<#p&e@/I
%%[f2ElaLn>l@`C/n9^4>Sqc?6BKrZE24=d+.d9RWDm7.Hi-%YDaTJZc[5mjT>r?s$h/^!s,LrZSNQ8FSOOs0[C58?d/WG.6)Q%%'
%UXlNL>4_D\1-E40BdD8WouU#!V,SD/&9:%OU"-ZWl_)pHQc#_1>c67PWXXr+59gu3fL3%\[S(.!VV"MUl'U^hD6OLSALY^^2m%[s
%Q0T7UYS`sBf&ijb6u6:Lb"^T%VU(L5kGI$!_j!5sQUor7]kUS0ZX_4UE(%oe\]M2>;D=ZP/N:0#k-j(#QCHWLs);1[`LHsE0&7j$
%h4Crcadu/5R;&tio&5Y6G&UK^2#mF&!P3!PG=5oGOZN[9153a'kuN]#O"0>9VD8:;c,[5qj'$AcUmbbpq.Zh[ku:<8r92s2[bdPB
%>%W>#.VXQRAW0MGboY;H5F!t'5L#CU:>!73)Q&nQGBn+*8`_hn/BHs(o>?R&c:6P?"*3O:/WF[F\!q3U1@ZnH7CGgdf01XK_h2tY
%h7X4R+4n5g@)(G875t5k58]GMOlE6Oe%Jqa?"c,Wh,5KBXtFo9g]!0()r1A'eSKmtg0h\=PStMlb+ScQqHXh2Wa/<.Y@>IEG8^EP
%Z&SdB?,tT5<ZBkcFKUG]hm\OH9r^9YDjX.nkD"G:M2r(@(8MVIlMSqp^gpfs[+RQ#MfMK0#=tPeSYmY.o.a-kRQXbep0^SqGt\5T
%T!e?0$J"BgP\4_2^[0)!_^IPafRk+"*_Pg7pT,EZdid1?ai7MlbE)P`_XW+:r(3*S2t?OsKF*\16=5K7dh!leQ.euZ6CZ6spoUTa
%BDMHTIncqbN/;bLV:`\=43j(Z-i&_Tblf<f'Um9M^)_t.8J.nj^Y>-0G8i$$ioP6n<2oT>S4M.K]QWkIA7\c@..K6+Q<BZ7R<6`;
%@Lpq"<k`CY>A'lcQpM+J5VlrZf[u^>9doU*o@dj*RF_j2,F``9Q0Jh3KTl;U/0pB"cU-`u1n0jj!h\I'fU7+(T0h5"5E)5IL[hA=
%gS@K2'Ih4(pU^Aa"[Pksi(7F19psq-ncAuiEcdI\/8\_nGSBpP;97fGo#q4A5#-Z0PL$@/Cgq-#L[:oE$l7,\NCI#3#]'>uO#1jn
%93oQF^KcZSmEPBL\]^A:9sNDdiN#NEr6*8]CFVbJ]gTc7#dmB^V%\?-.<F`L2=Tf%)s0B6.&9_X8`ktq0;E-QnmIn\9UeL'hZ^WL
%8PD$l98-K3:*"$iP>5]&Ntfljaf"tLS+p8g5AAVjOtmp>UfsgqbLieRmp_hbdQ\To8Q4&+>)d;:NFjESNKhTI?G1PO$okeiAE.ZH
%Wu\M6SRQ5s8eiH:9=(h3l*to%JrM.e(/=dc2f\fq#2>2SPGQu?V4T2mMjRq^e5"+DV<->\Ntg>/%Sp#;)S4bWfNnnpYaNKFCeh@S
%FOG'Xdtf,a2QhJXWf=6Iipf^Q<%I"h]dYkhD`UqBU=?-m;[JrThmJ&=.*ORO[`s[o".:S!=ia!&Z\`C;?d(<'-H\P7s5)W'FJbe.
%@W7M`C=:T_S%;jhngrjrUtN\nM4Q0B77j2=9h?s0.LMUA>a1Xa_<"h@77jhBGqR6%(M01rEjMg8m9C@u&'.12`SMtK7a47P8t&IJ
%RmoR.\L=EgCXT1l<c_-\Z]L*.AeWW_otN7S1Q=CPW=\Y*>[s:J3Sh[G;PgG=DdrPmDG8AFr74l,Es4@"^G*-F<9/?T8&*^423%/W
%NO*G).fIRp@IN)Zok1@bok%39k'ZPCI*J5R[1l+bkA,.Q2WnjS_:LU""IZ<+F*2>_fieY,STD2!=1]>ORk&8qASo`Ck$2b(\6:X3
%FS(KDp!_";;B3OQ)NpYk!8sB+DGE[XS;^>c_46JHA2JfmNfe<Z,k/pQpJ^2C-/+AP,9u?T=8b4^mF=fnO(R?bj8@Xu.1W<tesdo-
%A5$4t(6qa4VNF^crR]-;s/j]+o`))A&"+<X\5d5m:J='>RVJT1Sl?Z(5En3j_:Ardh.!BY-/+ApC\%Ti;cJ;13_;K<^,(_fk1+[)
%=TPH:C;*rfS_:1@123c9Cji8Os1lu%:O[2m%ujArZ'&uDs5Z$9km4mpr/:-1oJ5[tCubYI61APM00Yit<jP/jcu*b9JPS!F-q(\:
%8hQ4B)g7g-nB]-GpM'=T.Lg'!&(^OLE'oV$id((=BR\rdEXJH6q5COZ!/fHn]n]I\1p@3B7Us2=m@MkGDAnLGC1ZH7eh-f26?3tH
%&N@AWq+JKu9>>cMpUA+kB;*&t4T:i0OCg!AbCk]XY\C28,gpt^G96@Ha*d&)hg*Fi*qT=ph9,XG+4hM21jBibg`\V;q+e;J16;6+
%,S*H5=Zf5X$@ST?\<-)j=K==Z\peG&lKMH<)Q]0#GVd>,/p<UuC79C=SYFnEVq4*UKfgs`%5o;trL1TLXe)'T3an`8+>pKfL?2_+
%0s9?sL!5'D9"gF<b3*VSb!RLR@-t<AL5e(MR,M5V;5p-Ff7$\g[BR9o%P)>>G,[2O=tl5EZPiS;n(`%DGF_H[lR\<Y3;9&irF^3O
%fg!`2k,&EpKf/^.8q0d6mF\cN5K03ds/FRrh,0eq*+3Y]b;$VCMH)R&G/2;AR[[1hK4@CZQ)R/u;Ocj@PtC_OW*+8FFBW+@']&J$
%HT<dWKSL8nV0@@jQdOnI'9/'![@;ZTa?mJc#5_]gNgK8t?F61j*&$"R_u?"5j(7Y'R6+a;NgI<:AaXf24'q'0Qau/<s1n.[548Ab
%,K+X.&hW00)a%'d6(53Zbr>2b9YB\)k,M/RG*gT93R`'dRn3,PIF=$JUtNY](RmsfdP^jUGh0SM0aj6ndM-5[=.0tqY27tb<Cco?
%kJD4jM.Y1ij"+/=\tOF7nH(I/^!C9MK^<,")okW&o*S0t<IsB=pH#Ll1p=VM/i:gi+!$l:.a>`j+0#(6'IfKQ=8=:[CX)@Lr+T(9
%VZ&UQN+DCSptfRn'_<;8,l;qopQ4C0Z.s#/!pepC'6ZYNmBDb:,u5K)n+%P"M)N/!F1\bm$r#C"r5K;noN]Po6CS/eD+-I/YK,!H
%Jo6Nf0&7l&BH1M]30\9UfYh.I8u`:\h/7%uZ-mIN/52Cl(,m5bG5?ZHH*QJA+(GX013`0,Qm/#3m`1\'Wps`;O-+#bF$I\>Bn#Kj
%R/8Tbm:PL0N4C$?9)KO1d(6&Q#s<;+C_lBDPBNq\/_+/bX(h/(V;JZc'+[=!9Y,%t.O3!1::Sga^\>T73K;m=U&DLpen?+HX53=p
%f@>BlMKXd*>,nkG"0KVO\ahCK_j]3r5)ilsQ`0=BWiJ]L*o"r`K"iq_-KZ&70+#S=0/PL=\T84[c:dU'/h3=/OumAWUNshLTd!ph
%'mHr4^4+RKVGZ9@'<]'A[%$_FEf$9FCFA_Z6,1h7&g$c#a1WD]W+gD^c;+%r<$oJX)fNKtkfGei[5WHn20Y:^OA^;#52@a6(+)2t
%bF#,:Y>h!ZVIZmELcuaM\pp.g8Fq?uMF6Z8Vj:%a35M!&';dOVO<S=Ml9+SZYM%+QRG2bKjP2_3\TCA#\)ui(gt\?f>B=k$mN6)d
%V,3!2f%_fYF#04*QD,_BgmjirF"YG>c-<f03B&n[k2tISSGPgGF":u0%(^PMQunP;R3e%LeRk]#UjL^0<_hDG1n8]+ccq&)2eud>
%87<1UE']58Voa3iM2='.Au)TJ]KYI'eWlL&Fu:q71!sh'UdjXLHjG&k\5k)OY@RjdCmE/nma'E_Y2)kIB.]+0>.5Fe/uJR'ou,<Y
%b'cr&)/TEEVNQi9]/hY[n)R/809`QgbhdPF\`.+-7bHBY5t.1:n)_YO+-]Et'S1hdj2/FCc;M=`YNZRLY?]$VPFK2:@Br$"'@4?j
%,fXqPm?:F.9T+=Oc,[5q'L\c^*aEA:3o/6*cO(07X;?5BCNo$XHT^QP.J6I8.>:OP']jSV)Z;1_HT9DrCp[lPi%h//<9q4s6++5a
%\G!fakSG$P)Q3F2X>2ll8J_S9rgaF*B!A%!r)@EPF1l4hpP_u<\^<p>ru7@eWS1UanJeEJQb/2nIjp&"[+`d>>KoW^UCHq/ba"p5
%;Y1onU:F%kb852lBm?YCU01,c^6+YNG[5"V4SZZq$(<rfs4aSG+ir!YOT5+nWB\WK7[9#PfRl&q4f%fp:-LV.[2dRNpbaO>A,sC2
%M72'^8$s5eK,WVg9'pBfX<+88\AV@ga',m_=/q9;+m6^^Jr+*fKk$Q79Y,2UTmArn!\upPcXl-ilsVLc-_=B<Z*J?f4im5U%8NqO
%o6Z/>o\@K*?,]cP`!k5dR?qGq]mBNiprq=Pi+MUbDq>cnR:;_(apSm59/Kn2\cu*L_c=_'ru:Z5%(Uhrr+?r5MAf4lAPG;UHV1t5
%=6+Br0pgh-8h[BB[E3"oZR'-p[D^+%^EK*C)B$<9[kXIh@^Al^@jQiZ2t>ERG5hRr8>iu=`.)hk;\6:HJ\!c0]PQ^Cljubh`Z<?8
%2;m^o,.Q=^9K_^@1gek*8praG;(5fb:)apB]g=kT&dZ#@rZl;u<SM$UIn\Q*G>#tjDKdSCP@c.qDkAud2QcjrT_4\_a]>TBhOdCu
%1.t0(oeK!Kf$WjK*6lK_Anq%-=amHo+`-/r8ap0#eEEEuq3&Stir"cXIS@E+j(<Vk`2fFbl1bgk)m:SOGC9n3*DUn'eS9.5kJ,!f
%H&C_P8[81f/%FP.ORD8>Q#X1aW5KcF@[I8EdApkhO%/(H6Rs(H%o96cj=gQ4f;f\ek0%[i[3#9jQbR&t$d)J<a'g=PmWHf102%;Q
%C"U_t[O\`)l[I(!YD#lV<]q1KY+$IjS$e%Dhd6+paNkA51KhC6g;MoiI`'`+X:IB0[DGA'3b6q^AJk>ppn'#26GJ!FJc(gLG7RL]
%]L1cTU=&n>_>aR2/pnjb-kTPX9UPF/Y_5UATNZ9a_RP_jfu8H8/1:AaI0l!`qG0"GVX<%S,O>/sCHD*CWrh0&lS'9&[d31,mrR\)
%j[d)bM17[d^V1<H004s6bKQm17],`pqJdUq5a,/\/Y!=]KM>onJ?qf5lMBPo/(MLS2jAaW*T(8`$_R-,J53Su/n-jhm,ItnE-?ju
%r;0iJAbs/hIl[%p2nPq-)KanP0(2r3r0LMOFO*/mr2^u!CDc@:9Cd]CcquU_72MHT?Cd%1@]<![EVJ[*"9@TBT**N$!"%%3jQFpB
%KGqn*jSrt^?SoqSNdpfe8r7ujB]39mF7c6Wm]9\EY,O.)\CUS;=48&bkL:SRK5B0sVc7GtcbjNK&+N8dVTTXX_;f84*s]DAWKc*L
%c5_Mn=1k":)bi6jPt:G[+3Kj@dG:R>7o=uT-P^3g\`p@D_TeLclAtRR!Gs1diN^^LYL@@>-\20o<YSj,Pb<"^L(YN(a41+s\iI8a
%([D$H4gRT"SWgf8!5GF^PBUclo'EUN(#(Gu&,3t>m><K&Rh*XLpc0K;qtg7rS"qR@:WS"5geb#ss7.*)*rqmmSYc3!0J=X?2;n#n
%N>PC(ft;'4a3?4c'g(AGGILj@^#%)WMn.VW@e9n;N8iRQ:C'aN!^UjD,1]U%];5jK<ki#s_>h08gD0)s8VM5BedQRCU4$3\*g^X=
%@B3Jq7#?g.rgU*F@HF`HHCL:JnAfqgm-('mk/gsNdl)Wfq:p.T.CHe.bu20:i<o2p1NV>iCF7bX&Q3M3g3AmS3GhhJR83E>M(+-T
%dBZbeKl-[ohQ-<j1&KRPGuEJ6FWARB]eW$_L@P4JgUJ8nqq(8Ght5W"O)K!!alP#(nu]EAjB*ps)F$ibKDmm2r])HnfkZA6Yl,fj
%*/8re1RjYE[rblW<P(IK+Xo@2h0#MppKEt:3rNsKTW@!j\s\4M+@Zqor+4M@bNtQVh6:2`&)UK$5O:4B^$ZGZ7#0T)\(0fAkb>P5
%H#5X>`bDVu)J8]3X^3O;YnuM[AOL$->1IF7mkfhq3C4_/NE4X\<@Se^Z<lgd?\F\Ze]u,Yn$JP>5/$*e1V$i$)/jO$VUMstU<Z_P
%o;-=qp^sfIkN^X]NFr"!8On$ZDT:F,[P]ffna02c>."rS\qC2&c2a3)Y8M$C\lSrVA9Pg3@;X)aDIV*nUKbu>o29Z?NZ[0K?J%`L
%Zu5P,pll'_#V9NXmr!`&NGcqpBV=mIo!9g8oQ?_f[^URj>(dQ-BaD:nqK3Jr>`cZ)@I73s9AShD_Y//X_`nZue8a66B":kC#n419
%[Q&q7MQ)C%d6&og(\m?^(Y7iZS*/`V4M/tO'bP`_8(_^q1#KNRr,Spn+smCN_r&DE:?eQ8QYA)*UWl?Bnq6@e3"q.<&jQBH-U>9p
%2qsV%1?A'`%pq3+K>0omCki5>BqDe>*-QHl3qncp@:.'$poSh3NS#V8RF;:#jJac?j^TdjC/LVK-&-ZD#NCo'Oc9qt[u#4\SZp3:
%b]JcQVHN)pg,c)55JLfBib.0l8IiZ_!&:hCc/\328McPqcKbsde254rDS61C)o:Eqm9?L]oB\2n^Njj_'s0J/PU"r79C;>rV=qf%
%B5mWP-R9U@;N%]!+J_$aAoVE++%&B'%@aBHX^s"<(119n\\lHVF58IB`Egm"<N22%=)4U=7B:IrW8]Mu[iBRfX]AZ8]BZ&gOe+L@
%i.7*"bb95OD3O+aDl[\.ZK6VE3#m^P<OGTOQ`ZAa8_:9&Co(=5Zu.7WE:mtBr;^.V&;Ce#Y%3QBAr:F<@dOc+LAm/U$If&:?9GmJ
%XfalJ)(bW]rH6"`Cj-0j\/FW%fC0s'qrUJXG0pR4g@/2`WRhY`l3Q^dQ;q:=b3_g0ffmZP?+&Ej3t$qYVFe>OTH!>do=J`JBGsNV
%ro3fTNHoeLdVDJ,n^hG%;4%PZ,U8cJMkt[A_he6Z<kKI(40D[p^M-$4<6g;sVjE'*?SB1@[!epQk6u8hW.V%B'\g_rK5$"0X6t^G
%&`R/2BFR0sZooq%A.Pj]Z)41#Q*-i/C.2dfj[f'pNTuV6S]c3(KnbTVZihuW.R)]4nI:<sD0*Y\#M&iI9hlV_Co;L4\S?J);lR1Y
%-dB@h3c%C9/jX5$'S@[K:=6^-%8o$s<lb^5*:7O<f0Js,8l@Je>fgsHLHPg]V=p2<Lkb:bHI?qQU$>ZM>J,.MG&fZGBP12;XQb]!
%2Q7LsH'6$_KH*Er@e8Dj[s#/g-&Z<i-6\@<0"$=BWp:RW%G5ojX)=&f1@`@fW>.5OCE$S/Ml9pj>3e6RL=).Qpi>CeU6J-L=ug$l
%f*[HY=%ioL5aLJrG<k:m-X1=BRTD,BSrJ]]B(miWXbZ-M1hW`<@YVs2e;Q,$W!)&3,:g3D'cTarTj7VCQ$B/@1g?7%'eNtI?DDne
%5%m,^#M$gokJC/?Y/3c%C(Ma/SsNWW7]%:l7)L]7YJS%8lr"j8"C^cDCIj-1;Jofjf`T74_P``/V:qstS9q#)0q.#=l\F&:NClZM
%^b*N3W<"*p:p%#9G,hI"lW>?EJQPk:XP*SKA5nM$`_RlVUCE[M\Ys@WcpJLoBUletF0GFa=PF5<-Xh9c]8A_Lb08qT1Jcc%$Im!f
%WDV&,fV+2R@':SqQ?$j,`I?c=]a!XtRE`EtRnkBe;Ts;o2fJ96GY>[&?Zt('7^#+jW96#jmY'U6S&rM.R2\OHPmgnSRXHPgVV5E"
%Rsm7OW6E9E,MqC7DoJuI^SoWlhrhh+?h!oob#E*L.]nJrBl`mZSf98q!2j<m4!"&K3ZSk]%EJ;6K-$D-pS,,q?/!12;dO?(r,C3*
%$bJ64@ds]"+5tCLX]qV.Eu-rsqOt]2ED%B<FI6[@.r-%kbid72bc^l.]HkfB]RaV"6jW"kEU6[EkI"'OeB)$lH\$N\2pO5#!)Ko&
%A0gRE`KKQoCDRNWU6#>I&Y&;$o@7NN\V%cm[dOoE[2".<E7]QEHgfG3qR]8lf1PLuT3M&5=7R<tVtICHe&JNQ>ITn7mMDn"D!-iU
%k1QVYHZeAne&O-/-`]=YhLE)`mZkJf:%P32=5!:a_rqfL'i10U3u_sBZ4AkEQWp#?c3s4e9s_+5F/p=hHJZo=5'suLZ#5=%L$GGR
%j^L,ps7F`E4-^=5Ti^$\]BXflg+@dNS@:_c/Ec<CSIT'ppMB*!Hb6ae[-tZNJ#hCT8(//JN9A5K8%[db-f3V0TDm%T(:%jKc^J[Z
%qKZTLI-^CDC+!4m.PBWGD(RlPSBs*??<^ctG'h2lcgSMoD56fRod#%</Y%).e\I#h]iQbcSaRN`:[Yu]JS<H%_O&_):&=24pYp@-
%qc80bs)oc6Y]@?!Mg/U/oOs]OgVQj6Zg>>2.%Js\C[8OCf"IpXX6$NX)hn0-[L-I3_;i#NDkF.sbGB:X<F+<@ff>7qQ1;*>[B"Mc
%Y#`;"YN0JCTA3df0E'SIm2XpYNX[OWX?AeSBGu*^mH9I6UO9hjo]YDj6a-LPUT3K?m$q1gG'R:DSZf&<aE$frk:N6pG<b`V=[lu1
%>'O/D93*\f/Z^LYq3ncoQT]`K\[t_k?GHGVF#e4/BV`0:ah@Z*.l>!lXhUuc=uD@ZJ*(_m2t#+[*kMr#j'"XWn(cM(*7a*Iq4bKq
%&bKpOa&&CH^FVQ"Xl%mE[Ig_`BjCT*Kh()K1lZMQa0s7m=F.WfY5_[T\+rAE(R@"pb%ToBF.4lY]s75)n`I,[Huf'S&+o;;qHE"8
%X"SjinVV%nh7OCq6`oq*j!B*@00q0Pg./3jAsdWi?Td?./r#oE[enJN<mD^$^F^0r*kqE`=Xr7BPBW)F]FOZ'^42@$/`cY`-O82j
%)rEl`T$fH@qnqBT*9]o%no=7l/\TE`mrQ*F`Gb4*$Is(__mP^)h:&LCaTFtEq"UoQm8obT$2oMFobY0pSHggVMMm`9E]VTN$OHe:
%\uk>bV'g1ShdoHA?,*bOG1ca<GPJi*]=bZ^LRU8[kVD#(Dad#6&-_G:n:5-BA**-Xq/uX-dFe;:_dY`1s15pE,TM*6]Td==?S:3e
%i8H"92nBD`T-n9B*hO*hP<>l.4&9ofcP>KbqGM+rldiqpMep[@5Q#1IhYFH0.iCG]\$mH4>7:1/MhNs2s*Sm%-bIpL=/(<X9kH9g
%Rh[(2##SJ#*c:?=@c?rqZfA0QhsBO=O64'4pTXCnp3'j55Fubq/0>,7XsH%<?PI1Bgu6H!&i#lr5r$.GiI':(\S7eodgt:A&^R=g
%Qr!+9QdM_C\$`_I>MCVg+3gY&:VYnG;1EAgYO]fdB$p/>m`Os%jull?m-QRS>($+QocX::>H-e$NOR0fiS")i1rbHMG_"B-Eq>R,
%F`57rPhSD_]2.6HhoiW)4(k")/f%7N5BCPPbqidbRr@1KM`<cBnDa&5[C(#NkWS_>fAa&`p+H+%DRhRUmTsf2n5IU3<a/^>mad^4
%R&8c6q:o)uT.dRO>O,)86A!a;gj`-m*Xg)U"RB+.EGopWdJ%j5a`HEB+S8"P4/E+8#F?A(?^K?P4"%t]bI=%TlIA)[%_b+[k[/tt
%f8]H9Ke,+WqNgomcFpmefK74roFC9fYM9sWN?InRG'WbP>Zm4d++@=AZ<M!ehM]g!j*CCJL@J`H^.J@(jGatUP*<YPIs;[S?gf'M
%XL++CWRF!(^bj01-/J13_J(1Yq2PAW%/-K\mN0Uq"3G5Y/Sb#jTDn[fPU<t]92?3S&?V)tnMKpu`A&"KO*`uRY8$YMA5-/HO$\c_
%Bk4,(,aPj*57j2'NVCE@T_l],MAL\\et$r33]*Gpk0oM^pZLAgF_^U3$2s$c/pWmJs2(+^kTJJa-OrG&o],mOd3r@BrPQT2K=<`9
%IW'NM(N,s3NHsi(FC)=Rh>Ym`kbn\\7,%>6.7hA?K;gLW@ao;D>RU!drecH[^CL/T\A<AF!^3^%NK:PlP5FP)bN8?T+*a5_k9\mE
%_h_&5Z"l0;HEN2LM-]F'llXs#NDh2f@6DQfEY?kO)ufJS?ri46ZbCo?FOS"1_5ij]_iW<<%V$?tBZ`_%cp8:EH*2)^DU@==a*fPf
%n>X0hbp>%q^AWL.TuYX!It`i//UG<TBM?mBIF6l1ro,M<,I5quIh(as%s!GD?So2LmY?R.#Fq/Qq%;[+,X"qI[_BKRYe"uC5o*qS
%#`i'c8-;u)6i'LHI,j&M2lDApQ_TPbo(i$,,23_kL==rtD=/ZlOem8<m_E!F[!6hp`RC*k-__:BD(knA(O?2WQuRK5mJVa3E7WeD
%=FBYuHTo!:r)&j9D\RCS%_f<2U"n3Wl=t:,,rR>U?Q$8Hop)^bc&9>#r+#71)6.UZS)rbLLO"*s>Y1<K.XuhL$m0:Ll`49l5X"Q>
%rNjo*fq87]_R`BT(1b1s!"NaJbnEt//e.=,VJ[p/LG/E%b[FpVTLbDn55m4T9+&jr'r_/[GY)>S7-\0=W%6Mj(tJd)nsAs^"ln4?
%m:Z8:hV:9GC=E(CH.Hs38(A\rjpVd/[j-gsfq65"H1sMIY]u[f^%(>Qrq5*n>um5Mk>.@%jJ\6=$=j*GpI2O#rQQkc:C`*a%SpFt
%Y49__>MD0^mCmj3BMW.g38.`].%<SaoWd^GM!<i3^?2#9@bZF1l'hpEQQ#9-T:XpLM9]G2_u3H0^QuK->CRUt_:"eNC2ht!&N7l0
%IEcT"jpl,F9@Wq4].386fek_Fg^:DKHh\_Zo/a@aE=S?XcYjWFrk,X2.m?"O:uHD\2OjpeaIg4P,"#r1`/Y.8'm@K]r42Xe<r[pl
%kDe"a]k63&Se"rODLQALo?V58MRW9?o7Pe%RuJK1e%?XLIDN,K3tFRO??t^Zrq5-fT"4Wir^niOpYg#XorE_S0Zg(3hL2a&0fSP=
%hKeR7ce)rCCJR%(@Jdpk&U@]MrDuche&7Wa[F&la]s1XG^3d^QX;Ogb^;9k$(ahUX4#-MJ/,q/=p[X&BIabhbE"ASTjFXcU/+F.*
%p@iA\-e@#6nj`M;kKgRX/2#\q]&&PMZs7=,\D#io3a01=L:pb0lc3?N)t.)dh-3$H3iJ2u%)+I--[>;1=3%Y4iq)krY8YkBj3=^N
%a3lfAjFP_,Og405m]f;nT?VMCD"[ak=-IW5,p6^'(7Q\*C8^@&qdJS".2A?0$Q"Oki=/>:qt_'7o8&>WosF4_`_BL!J*RiZ^uC-_
%DXPIK<KXn@o\rlI=K)PK&IL/g60A(YUKDba>D1Hto@Ds'3"3a[p?n'L)Lf@9lD&[6pFostmOK4JTY\2F9d=_nHK0M34Sj*m'.s7V
%f#II^Q\AOpS]05O4P7>gQOY7mL($-!4F[(13iL^cs8Kq`^)#ZhVbj&!G;!/*KCW99HL'-o\G9_1pkUbm2=R3$`Qdt:nRp-R#[S/p
%I-6E:T]`e%Dlc0KF0E)ZYC=VUDr52KY93,%k4T=P[QlcqT76M)kGls*.PN&S*^)&lJ(f/J%:l*#&?fD)(q+hlnD9^gXeXYF4qpfV
%aRV4gc>rIN_VtWt4FJitlG`#DF2EmoO0t05#A6D9[7RIfG;bd/\0jjnL\kg,jhGWE^!lAg;t&'jTAFV#4'OBGo?LcfA`1&p[uB]M
%:Y57VZ,gLkm`TMr-`bepY@!Hq\")2&IX(Qof]ECl3D23Rg?7Ur5Hehpp4;t<]XE0\a]eINnXTPqX05:MWgh2VO,DScUN-Ubf&rt(
%mXtCMpFTu8QZ224LLeTO1Jr(^\F6%*?5;<\\UYe`p<gVIM,`d/qfL:+h\0b"*m2RP$,8jd+-)s%\VD^Jl3l3l[.XCNHEjp=oG(nb
%O^E"`.\7W-D&0.$gi3V7mG2%-nTJsj,4XIhpNE%f<q,\@Tuuc*DSFb*bI<XL\R+%e_FAkuk^c*>jLig(=2gB]lbgu.@JAW4,7VAp
%miR]FnE!$?H+*SMLGjrDYnk=Yr3O.c>1So)"KFS5jBBI*,WO+e*p1+CTCp=$ilUKrKX>\-^#!D2[gK[lVd"k7e,<p'*i\O3nF/P!
%]LhP-[uIkPgSM%F@Q1P3ileh2fN<P<So4>*p(=nlLJ5$g/jA4j,$`h`9=n9QrrttrIp.2%?[D'%I0OugrSuUeppMa5R[Y>-pg4\p
%I(QlXp>iHE)#UZ9]N<>F=&q4[?[Y"3B^YMb6hcYD7R;fI@_2N01D,Mcf1@"n>f$Bm_mAjUfBB_34*`$rG'h2@?TOb;o't;nqVn'X
%D[7RPI*^Dg+$5gOk4KfAcH\Y[!k"m@M!<T:8V]BT=?JT[P<ETLe.\Xfh>.!Al.rIG0/hOn^N>A]c$"79h?G5q:DXT_HG<H>H"-Hg
%.'dca0mIZpMX%TlkP_li@63Ra`M\dcL89"rY'=j-Da/F)ES%W7[O^fSJGojmn\,jCIt8cj>O't!EL=gnYd!=QmBq/6/3WrtgJrNW
%XRR\$)s`Ph\!'2tBh.esj^I-kNR%)bp[K2L1ZtjPGR]t4L.oLeGc>&Ybep,@lAr'<`b*n<d*sT!`?FDe5Na'"gnK/jYa9.f:)6;m
%6`9t$+#V%>.94CPlH:K3AF&3f>H(/:!;lHFN$<f)Df9`SS.?Q!_gJc_RS`=NZ!%(QG)@6b>2Q*pb=sC2Y$f`-%i[A95=R-Cd\GtI
%T-k,)`6d[pc.fbGQA,m*\qj%)%shV(ql;4plg8r#8RKH[B8]6n<bm,s@-8mk/Kr8t2iiskqap`m&*_4I\QUFM9]J$_4[s>(\^N,_
%ms_H.$Ij>S?M8o^iG%^sQN(ngPGN?$]s[+n5J*kFI"/T>_rgUF8c@L/ZL5K<I2-IP<q):IpL]^E*7J/dBWSo%>hZm+6tc:+jf3Kb
%?P5N9\3j25AVWuSe&8T-gK:Xr/LD5)Mk_;O-:#rKpVNuUi%#2&V8o-f6(_#+F^eF5(1&YCJ-GQ0@J0?Z]%2#!<a/)%LFt;T\$k8/
%5MaQZ:HMhbdT<jmT!,dYW&OCp>.Am^::o@i9MYQ]H_&\[k0QoHi?7IQjo"/iBgP-?qu-<$oSf$MVQk<m$elI8EUuKd@A673@qNr9
%QfG[b%S.I%f\5%=-"K7(*EK=5A!\cW4pb<t0+!EjRA?X[^W[]LDp[=15%k?u_`551meq-io2i5I5ZMnZ+;r;!7[U[2.i%gGS'Q#$
%mn)J@iTsM)&"$aSCokC[^(aqe=T9V+4(%=Y4`.6ADf]FUo,H+K^"5o3\bs-79`O-5M;aY!DSP>H)dpdapD][BpO<la4LYUnDs(?B
%\8.<3YkQO,4R+f^[QD!)GZ6eJgcsAVH[f)Pa57tTP*tt#qptUE=X.M%X(!t%Yp[fF3ni`K]=7EG_u$4MaU#8:cNWd1dThR-hR`;i
%V=,"%X]3GuX(LV4?G<kB%\LK8pqB%<e'7XcJ(!E.QfHrRf?_,dA8p=:j(Y?pHt`+_,VRs28r[j9-P';8dI"\Oa>JuR4#*?H)"NSf
%B;q9>gDCe%/a9ZMH?=l`mLkG)h<Y*@1$r97n;VYE5JH''j4b&\^A`#cc&%Y`qMo)ebNS#GoiJ8K,F-S*It.F$pn7Jf]Y==&76]lf
%De$G,<U>I>2V+']SUPZH>4pVq*@kLBmCmh"\EiAaS:io,VUp<ZX9_%mQ/4C5_8Lc3q<dV$B$dVsIX-G:L3V%eLEZ'"\o2aVIFHDP
%BC!m+K5W>bf:&1?GL=OI>[4@VNU>=jCp78gA%s?ri8rO<_Wj3)2ci3<Vg801[?<e+lBgV]ggRJZ_#=8,o]-TecjOB4XfK8Ej&$j[
%!o4j"Sj+]RY(!mO5dtt\2ZH>QeOPU-]e5gl<*"n2[DKN`C4Ka,rq#j7_Mc'f]@m(kge8^(J-XniGsiB*Wj?tu\EWY=jM97eThISL
%YbsR'VL/g)rPFl-AQ/m41TR"AYMYXeN@24/[_=AA2F/%,(8'JF1&;9:#!_si[_;QShd([1k*U<*DJ@ph&5MhVk6;pEd/OkqL-LlN
%IWtJYk>YSW:2mSIq/Ro,l<@F==uu"dQ6/>dU#+R?h$MqSI_$2_^4R_+CO68XIeHG&n>tEa.f\DdIZE8m-=DtZS#"10>kk[3X7c6j
%8@+l_<DR1g27Q`C3f8ej,j%>q$6$ENC.TG'C,k_@C?/2ERuM%UXPKt5`TCM:.?Ja&O*Kk]YoC>c+0cUq$]orTW#!bDmRaQD:1:>/
%X2]',Y1`kgj6-=.FKR[635bCREHtiFm8Bu"VuD_oeOIaGC%PC9;PFoEARA@%m''ct^Vo03'W63&/N##SG5=)WYBp<,5@8[]QYXVJ
%i.kruI[O(qb]M1JN./I1l%E>M?mkQt=kLf;8j@jhV+(Y[]#agoEki].8fdi^:Yh!;E+CbC3]o+p[j1hU#6*<BAQjalR:[ZW$I\N$
%AC/e'[?7FHUgGH7+3POj3$+_Y-]mRN0i0mS<&p_dPc9qDhbTL:T\Ch&PklgLe/>.fD`<ROYb=:KbcL!&"7OX;Rj\.<<BHUTiuH%R
%ZQk8j\j77Fgoe)gH^?d4M>MpDj@8"bIX%;LUoTr%&K/=kO5F!U^JZ`FnB/dd1".VCL>2[9Dcbnf:e<OIb@!C!'s7#V^dC0LA?DFR
%H/:jUR#lHkg$%kaIT%d';tTnGMe_:PGQ6:HL`,nG1eDVmWe"VG=7;bAi5Gf.+j3YtBuC,0oYlN=^K)CXm1lp=kX3dcJb)h:/Qt6@
%UVE8bo@.Rb2d#:YpXSAMY3q[WE6Lk=XG,>NUJ+@;VAt\2=7_"U1@`+?Tg!Ibjp3\*ls@+tO!/`&]^jJA7=?F_DE!VLh4<!?0UBb&
%.SNN@9`c'5?L].8hIsa<fobK[k&LgR7YP3FD-,qaW[H?lD<9$F-cs6/-Chp>?Db="EVPFN7+_!ri>6Tg7u4F#M/-SBA"BF<l\sme
%.I3X4JY?='##as[6@I-0Z1I,QAL<EGFW<#rrlspWTdsH/QMN*L5?"!^(W\aZVcW8DPS@$*q##'Gc4[fs?!"=E"I39acMaK[r%8tj
%@us_B>^m11$fk:PL50ETqJi90X^.])nW$/BALor;^,Nf)'ba2"9GD^;59Q^*69g1VGeEtRDWn.3>ci/\U.]=-X:6ml'46:#nEl@M
%pj*5fV#<CF"VbSEni[ke5<jf#H9k#gI`?ILqM,1:cLJ[L[D8n#C,*'D?t5YV2QUfgS*_C;f@'MO>)Q*m*)Z;dEE+eGoEZP/i@j*$
%rsOb+[BB:p:?mo#J3.`GkW0XQ?TU%(Nr0ao&cHmi5A)!(q5/iVg_aAUqj8rS\@ub<UGn4rg)d@>WtbQm79P2.21.c&<_U]\HCf.2
%B-1lVIb(aj+ChAnl_=mNMJY=U'+I[bc8s`1#*nE]bTL[=Y+'r&k/G_W83AEqN.K.BZ?Ca+N.uA0r&cbiUBXPurk^Ln^\DK4+e(%S
%OnJMC>/P7$ZtSuqZ84"kQ*i0``jl(_R=Q!DmA^R^Cr7'F6Wb^QPU-mmF#*uAFL.iYGRS\BDWYS[dkr"PQnBLIelEOj2m\Mnh0dq[
%`=Tq\9/L?QL5eqXlNRh!0&<S3q@GfZle'Y30mo1S)6t(?)RA_Gh%f]ME'>*a*j%%Kg4rAe3=7:U2jG?lnSF[<Nh^und3<t%ALM#V
%:;FZ\nd&_Vm+%<+Z%56-SQ14oVdPs>p%50QjK&bWg"_R10)Mn9+-6lrPiWj+nrAJY4dgt7Y)bdea0P4I.)Vp!#5B+$T`S:)q*V<U
%rY`3H:[WRq,:=&kQ[h=lL:Bk5BAiReM,)Rnko'r@ULVDZT'[q?k33QKQ0Dg3c`"%a<`qonq+YE-L0uI=T61Up(+:cV`"b@%blk98
%9RRhA%ODBCTY")i)l<\J"7#]Z#q4Ad0l=c?f1%QKaO7I%6JNc@+Ngs;mRYsn=K[D,!J:kr'rIZj2Z:eQ:kmukdZ4n.?@;gN&]dR<
%0>JQo[e3#]94J1'.k'IfV"uC1iI]YfcjV+kiq3Gs^BBCL.0s28am`p@Ti;.d/jitN:7$3b@&5W31]Z$)D."1\/C,#R?s(PcLb8@<
%fSTup@=b8+i$&;C_8>9j1="fod45'ql.U6**lds8O9fM[KLu4o/&7q`0gHh2&-anCGqhYfJe[ij&^Zbr!+OU_;035!&CY]pNb#4q
%!X.'bXF]S8+LVGanhg#/*Jk@"1-Aof2"ZfUqW[Pl$^#hKaJ1D[XhGFkN6]iq&nQm\7%DgFEOs)o$)b>%RItFb88A>t'>UtL`;ihu
%8nDk37cJmhX"1j02n>D%g2S_'Nin6)!+U%\BPO`5J;DHj"@G>:FM[H)0lnpPJt]^GMn%P2)5W%V)44Tj\K]-ha,S[1Nt<61)KqdC
%"jEM\peBQq?p6eC-j$"]Ri!XRF%$6jbA&THV/s!-5R9n3MLNm=,hlTX!1,JM+utft5L;L=m+!qK^KU7G)A;%^]biAq^?%/+oF10Q
%OfTh0e_JL`:?N5d"_5-nN".^\P6_pVkIQ3r4al7R"Xm)`J>ko;HG\f\3>[5@9SeK1M%&?t"N5"n1IW.J_-j&c=i-CDLN%oj!$-o/
%,s@9r*''3r_5?T2a)rCH+e1<r8j!q5#_%S.4qQ<\jb*D5^?lFf,\/3%01YB`d&gPVPD<2K$K#mcEa@D$A&M3tR7B$b#l)ONekSo"
%2Q[DAQh"j-NksuqTUlU<UO8E,"de6]V?E"I,c4*8R1*Mm"$f:QdfWL8\s[Eq%R"$6SO'Ch`_%?UDAi`TcoH>O64Y"lK=,s*U:FZ"
%Q7F*+L7H1Bd@A/*Hs&0EBXD501"40'd>cg=@o>igFY[7:+31`Fa<bSfF0^XIGZp7hXqU<t0MZ"V4##cLIHB4(EgEFhA_kgV(eSi'
%`Xrkj]9Z\*oGm5k&tq\r7*NYN8lcUe.#tY;TD:]cqP4-iJ(pZJ/8dsJ%a6&]Q?<qPP/?J3<^k^I,X\6H&b-Ehpc]@0@.W@+h>8lH
%TTKfgFJKX'64VAZiBt-Ve5Nkt&uVIq?s_0'<>%^?9Vc)eZ<9Nsn1%YId]3+n&!b"`p-;/[##56<,Y=f4!\`4<KOocBis9?<"!G/e
%ip]u:c4SPA*Ws"J"$mcV0[$[V6]S\s1GIQRG:66>+Ut&.%I..?6OOlkp](S[#Qn%C6$D5r#mib+15Jb,BlW-Y`-kdLU:r0L#nfMR
%`!dn64i(e:U''+K5b]PkI5-CWZa7K(+_>rPbjRYa.*b[PS3o1@U^!#&6liFta>[m]!GI/Q.aR0ICrhll=2O:a't]4f6n@t9B"8>X
%*,auH:`#46AJ\%-!'/s=]!#i;,V3b6]d&nN$Xh>e!@$diBTQ"kLXRIgf@-D.eu)$>`q1-@fF+[>_\1o97@*$dGT*ndZ7fp*9u$c1
%I5"6VCaD9FbFfB_-0Wp!#UU>0:'R/FR3X2r\"HjW0O9*.Aqg2C)o=m-ZEPA7L`&aZD?mU$fX6+#/P?T1&seI;fao/R!Q=ZYi[gK`
%RF"`CBl:`7_up232>_U).ZB+X)k#L.J5XUt11LL/%pXP$2K;KS=G08C^.3gC@g9#g2Q[R_0]1kQY][MYQ=;oO.Voq]i+ib?LG!No
%Sf_XY--a<P%&'<a88Skr*f-\)"1q[k"%s.mMdgh`Kd'o>;is&h>NtDI>5rWrefFm4TT3a2h)2TX8#&/["qp*/jj`fD_pOSVP9@dt
%I9.Q6l>+tRi<<\`P,Q]7-or5I<ZaU#?eWgZ;t&plaTQ0$Lk`>?0+nU56leS8nhQlne+G2SZ-%TZD^@\!#TsT\Et_B>PS,)I?)G`0
%/;&>Y+&/jB`LsNf&)"PY2^HNhZ]mb/ljE$E)8llB"*pko!Q<Ys-6kmIdR,o?#3:CX*,n@36j"hPL]QIuk/4e9&:25$oEKpPg(C"D
%"2@"<iYqmHKF0uODqV@X%9lNi(!m@Q,E48ed"H;A!bK^`qI%\lCi5aW8TA>W#"TYAR(0nJJb>,qAm6;ek.n>)5`>m+hCcI+4?T=.
%#o1fC[4$\`$]_s<>*XgZliJ=:c\rUZ"oU%R20a4'%_.2NC"^`\NJe5Li#d(75($cWd7Mk&eV?2k3:,BNd.]Xa#lsAHU:_aU&NqX^
%`\o6"Vp"e%ZA>[b!n0iD_Sf;g:t^_%%+##=_+!I:Z&hT?.daU[M*aZ&I-G61E<>-]A2Xi%<ZD$3W,`sOI>I>U,dG][O:Eu6`=X8F
%et]qUbhD7fCe--]\cM5pfpJU@3C)SGk\,fON[A9q$CJTJ[TF$m&J(d\+VdIm.48:6A/R`C[Y5Ar:F,#-TbLuBKK5&=`Z[EAO!@Wa
%$,NU.]b"m<Smm]*B85H`g1<2N@&.rI]qL*]*Y68:5th<&,T7jf.Hl5^7mn'!,=#TGd"T$nY\YG?hj;(H8qKX]1ia)?X)/^UMOTIb
%<'DBm,T&di-L[DWY]PL]'H!S'OD[D]Q]M_\HOq9\\)=SFr,@ZLRMs@7=A3hcZ*btI8XO=]d=E&DksQ*E^aT90)P7H]?loR2RF&bM
%,;n3;<ic\N83hFSe)ghfQr,N"!']::@)/C%NEk3PmS?a3B8F'\_+3H&k*'em!!aFP^,YB<`o&M)eH`IhTL`6Gj$8!=,b5Z\k6c3+
%1,Wn1YQ5I<'iXEiU`d`1XcREcS5;tFB[\nC&HK^67s5d07%mT\]@[P"@>uOF,S!?H_<nGLJ4G.M"2s7@\02=Kf>*u7BVcZ1"04.%
%pC.oG&7gp`X2J-Y+9BMV*iK+SM;osYh,&Dpn]_nCXKgjbYmcOCOKVdj5)aZoNs]R<b$>Wi!4:Dg(aBe&+G1tiN-ka_!uO<q*//mZ
%LPmEIAMh::p!K=r9%7bh;?_5S-#(DM<MhdGd+9S[(4!oWJid#kaniXm&4;*_$:<I#A&;c`$Nc\*Zru!j%&9#+i=pFn_01O'&:%A1
%`!/(,aIZsp+oBaL"(@CG<SYBP#tYM^;."^sgl,qd&rmKU7"f=^`NZf`Mdh=J+A>((fKWU!beSTCS!jLG!\qds<JZ"L!)>AE0<5B>
%rW*U_V";%I>,>.'fNNun1:1\HJ3Gc4%h:]K/Pm&3$UgRrla=>++GlqhIXq_/[Kli?&t?jpWTre"L+:KNfSPH+F(>mLnAdk*h`C0q
%1#o$Un_lb<_=JjYo*>l?Gd5up,YGJt\P>VT!L@*E5Qh*)#WJ#6=FhWOiRf%M_LuLYHQlVOTLT]JVR9,g'EC2pg:CZg[`b+,@"Te>
%:C`1^].jbQ@rt+@Sg0,Ec&P3Y_!io>ki#!].I\K:^(]HTR#N_-6&6!g^8>o_FWNn$9@L7XC>!@[quX!#"dXC<9uG@LVgt83[\uuR
%J>g)K3%_X1[.@<?.R?aFV-Z2sM7@"@L8tD]5$1-W<%6_u`?J_S-H]?Ll%PL7Lgc-Ufn7aU4.n/E;#uI`BSduMj:CCGL:0<,]E6N7
%i*\m&kM!8=,AV:nQ8&cD5<q:klJSpbCW#ojFp4#$(r'opii8B.cr\9XP]lPb#_+90^Ca5Qge<L<["A-T2cF&DXp2_2#Wb>"B<SKh
%3thQXU1C^o7cT[@&pLSsYh'/4?3a$:'EOm*Rj'dRbDc9P)dumDPnLCBCnKfMnJ9'>fFm4h!5,i^UENbKKI)/WrF)2#1$FE@!s#pL
%J0FRbq@"M\ee3cPfMOk;U.5cii&#tgS8r"e.ffdc8>iY.PNCsh^@WY0d:=8c@ptINoSY:U$B^Qlk!X2*&j7k&98P%kg_!2gAU>C@
%8(bfD,s\fC]Z;)cP`et=A!:NCrT3O)p`pCa(q/).KVU*_(`9Cc=*fUkB>BbN!DLDY&F%6!6mjJ]_)4Isi8B=iQrY*_B`PZ3-8`Vt
%Y1*S$>_ZK-\gTBNR2N.\PZubTJ;'IG%W=UKAIH7^s->p;^OgJX/%QqQ^4hW*JI4g91j<tn;H2QbZ6fR>!WlKr-9DG6?V=VA=rCsi
%>6LuW2Er,UaqG(1NcKkn:'2!J&AfU^>f<ffiBK.[mR8>Ojm3944>&u@(S4hE=)!O$5h$p8f*%@!_W$gE#K^S">jtPl6A-K0R-mqX
%Lk&6n75UVj<ZhEC)W-)P`<Td#%C#],ieS*(\D#&[F&9S-,]%OIcQ(p*Aeri*Cf)U!@-_\pK'9/SKQ^MT&2b=toE6pO>eX(%h,\Wm
%Cd_u;QO$$_fl?-1WK@D[Nqe-0p,oo+AIkMafG_pl-ln7"*'459(p6]=`=Co6ocdQK,+,Yl"1T0J"aM@\aaAZ%m,u@4PjW3Q6^`,[
%19UA(e6_4MYamaC9teO"$;>V3+bIMp-XA.K6%2?\@QY4in77'k,B@@9A<q<NfWZGc8GRhhHr_B\119jeB5)ebiYi/DGb7q`(tXed
%KfQeAqGi(&*9][JfE>uCQK5s&!^:$:\c^[kmK:<D_-n;^2-YUtTr2Mh&-*tpfuX@o_%$Ul(^(HA/'!klM>o$E@GfGVbeUJ@&pk$@
%Hp<pJ1oRI12al;c7'E12SrLOkK`o@+A+,0t)e'Bu!HbD1r+,b,KS&4]cor(c)ma$6kr"#djr-"K:V*4EF)YZN"tnub3GWIdAe)=2
%R$MmR+EV2sPTU:LnSD#H>_<`rOU2#bV6?H8<+c]n^.nZ)[XD/uJY@W)<!!R(RlXW%P;7k=!3f)2AdTM;#*_%[HD;<NXOcnW>uuD9
%:7u,aGetKg3?of2lm9\-V&A_:`u5)X3B/2->$9kJ@5fEcdUtoO):Z.=LT1lSe"JlY6("G5>S`/s,>]VOkN]](%r"^V6I:76O=%V=
%NYCqgZ47,..EEK5lj_7.#bX[['B7cOn.nLT+UuZ([ED^0iMcmr:(fRS[#X@sB^GS(Vi[a;+CLZG<gGBWRU^\Rjsn[n':.ju;3'eN
%baWTB_CJ3Pfs[=(+Zsem,m!tsqM:Vd,5;d<+[+*kS.H8Qa%\,.1.@VHk]Bf_B:)866IKO5qO#\P-s"8@'$&SUe3hUQnf8M*]/;Tb
%V^8iJ&2QU'#rs)@^KRESE#[7?Zc1ES-^S$(aJM)F'bj*SZJZP(':O_gCE=?B/:8.TA1^;tNMUng?h^h4X<!C$!&D0EV+\+h80EXT
%1'rO^RPE46Q"E3N17!1oZ2Dd$Z3)luTEOeLm3dQ<6!S8,Z6\$">Xs]F&_MV9H:!q^!%9E9SX>S67/9SE6,4)ENgiih&@c5jE`1Mn
%%$>7PPm!Feq,Th!!EpCb6G(Y>b*arg)Pkj5/.7g^.n`(s)oX`<rr_5m-$l3o2+48!)IfEj?@;*#(\`d4inKDI;dH23i(QiV0sZZ4
%qB=8o!d?nbN'm<DVV-_mg?:taNsL;IS\kk6lN]J-a9?)<WtCXBR4&0k"p'-RHc&9$Z.Rs9@^Q6Z#"%ED9+XrQ/D**HlG<>;V+!e1
%,8SOtlH$W:CS6BfN/\AV&M)I/fI<>NBan6%5Rp./q23G7&DKk170AXmHifB9,.=c_&hkrXQ5J\AcY6ttK+7/+"=e9==f_a.$,_gF
%X?::F5)cEe[N[;%&eSS?'+@da-"2i]JRZ%h@V`;M/6bAegDi&##<K/]bR=/sKIq&W9kN'MHQ-eUf8[]q8+pV<#]-pO=#nDE)>BT$
%>kX.G?@X$sC(!,o'h$!lG:*qi?1L#Zd-cL]F2HNX"apU[\<`cVF(gPbKWpkdL\MdW,Ho4E8F^)kL+2,/!+H)"!smB<Y^iXZ6Q!>K
%H8m[&Ncu$OOlJp/MHd0+,lKe1TX"-Kh*<r4.uH'cWsFL".;b2;8U%P/+2dVZEKh\?"HNCYnF$?jl`>,H@rXhmi?ql9*(&,jnAmQo
%)%2dkD>599Mt@q80k*S#hfDm9R,kp#%S!h2*@p*%Zjj_A!O7\f!OK_cV.mb#_KKhXp-d':U[?7WF3$V41Q`1_&GBbTITD2*#q'02
%;1RA2hMHd:!#MhKJ,IAD3GKGkLl;5%\,hW)`kG9&a+^97r":nCpW\A$Q291:mjFX/(Cs\bZA9#P@(>^P,=/mn5k0UjL-A+<[W#iN
%!tPH0e@*<McQ#Sl@0RieYCl=sJQBk1eQHUX,f(Z6f@82B;eJlp^`<H5YCQugdN>/b8cGB2)MI5pA?hTf)j8+SHX]nc&IcUZ0(6(W
%kMV9G5pL`$$XNeAcE?X_dUefmNj1^,NS'9$o6G1Hl>YTAQ4r)kKoSDhGsPq5c4d@JF*Y8)mS&E1"CV:`[uVV/E"]/[NmD_r@`=/R
%qG*QBk<js2h5mEaPJMhIP+<PdF,12*EF6nM3Lg,PLr5=;pkp7R5O,N7J2j=UkP7fn-R]?MOm>DQTe1MdGnS4&\GIm#Bq]I;6ED<P
%Lcg[<4b3IG#hDes[pVWQ0*soUb.$@mrs6^!TS\fhoW^3/kld[((Y?Nii^O-M=s\pf"8\3MY]rb00[ZmRCb:P%Qs.nC&?F>&&`fI'
%l6d5->]HZ4b`;a9TNsc%&CrSnZ?Rl[m;W<(_@=G`Ah+24$r1&bS;`D#[N2JU@L:+@FDV<j3;c_`BjRl1RQ<[j6DA#O^p#Z$JKqG-
%"NL`pP?L$,c\<KGNZ93C3^XV,*9L>\Dbt5#P&:7&[!\FJDgIT9J2P/Lei1b!CqSu;%6G`oE@eip&m?b-7M+7.`&e-736:>REZHMk
%j7rPFDeNNhm9Dul.jnog%Ql&c8IQtQ,`gu"NX[#ZdB5edMYfcTH(;_anUJ^u(W0$_7Wt<(:QNa9)NC<9BTGB,#Vh0X`NXoTS0)$j
%i@-9crr@c>a=*'h:Fo;S'*H:jm#qs<PE)m`SZiRZJ?qj&T..K#8RK?bMn_2Cou,"T#T3p2/3]RhZ8=RI&pam-,fNIIcM<Jc35%R=
%nV!mGlnJ[%,eF*h%hIOTF11a<XCGu:P7R_lf<VRjBmb49NbF!^E*U+jW'!\u8>`j,WJ[O`6K,?pGl#EREP8uuWV!'Qcj<R5_1$bO
%TF:K6.#o#_i!?JN_?_&M?-lJP]W)Uc!`0jhQB#;2at*e3)cN6(&^>;cV-eq]%:hPWa<VP`o$a!-Lt`G\@_2`e4>pnmY8lc?`-F10
%iqHa*nMtel$p"JmJW4[c-i:/?63j)Q#L8.'9sVXRU&\U0m5AU2#@hc)#S%pp@4X*O70]6iO?H3#<Zn&J3>130G6Z9e?s"Rh_"UjG
%@u(O=6bi$J6r6qm107f2&?boC!)E1GLH4^kKh;nHYAM9b#/N`_7igsLKTb@d^7=0R\nsJu?Z7%s63;+7A@itlJBs5X7^g3cFFI30
%p&tI:D87![NXZZG6RF0F2IR+I-g5Wq)qb],r#l`he%QU8'>Y3Pbu2Q#Aab-l\cMl0c1*e[iSb(VXUOpNcq'\*LR!e`j5R1VJW,k6
%TI&$sl8"r)''j=`YX:QOl2"*eMBDC*H.H(^1uJDm2lVoLC#Hg\)H=QdUI@cr;CHB<MZ5])b6s:f5cUr%CDS900'WMf0B8e>%"aR!
%BI.[X$mbChG!Em>+<<Jq43e#_d6N-c)/"oHPK$`OL/)(q83Sct=:Au*F&WSG!DX6iYo%^CX2L>>Vn8U)TMpk5aa-j^:;W.#)$BMC
%H^THO)IC*':)upC0d9X8-gDOf<nNR])!CK5H&7aHUU2+R7Kk84V?Ro1iZnUD6qH"jXJ\&*aO'pY3#@DOJc^eI(/?EeD=+Eg4=D]e
%gdO4YQYok!f7Q#=/7;qm@Too_=r+"AdJ`*DcG*k&i"<^NNiR4BPiKY]V$I4(ju5I6R#]-J=n.o,$q2_p5f4_f&$6R/$ckM3nBl;X
%VinO2P"t.Bd=>V?#\W*Z$pW/_O=O,Aph^>S8-H5\8C)JbW'%srS5a$nTr[3=(lk.V(lkrNBO8r^H![G@[]GOrNrUmtj;)5=lq::T
%P0+)A[t^&j.50A]/:eFHUYPtsmBcsr)EHS$OH=!=Al\b\)c/:L'[OUe&O(F4h#J]i*C.&^cHf<F`>FI^!$5Tt\gP[EL04@o$1@q$
%2r6%IF7IKZN_IUY73EnU@lPgS%Ust`%2eh^,^!IeLfH1NiAXk0$WO85Z0B+J3qfL*WN?S_>=V7P)t%AD&[.A`EI:N5GEI(9YkZ'3
%,*&i<P]-UL+[;96(^H-fkW)111ppA[&Co,\"n5^>2s$$cJ]&_s9->T9I1=&S!*QH:JP\EnpU0\#2FA\fgfGq'K.Jqm&FtK,c-(Ee
%Si:V"&j)\<<!rnunkb61nf40nSE)>"12e&koS<$L37BZ:9T++E[M<p2][,O3QpfhN<;^nVKH]fp6*-m]ag?T(4,^8&Ge>2q``U;)
%[Xn4-T4uD\A:n[!+s;Z3!&a9tQpHb*&9+3Qd_jg2h3UKG]!(Tu5Wqb[3scu/_H`EnY,/=!\afk9=Pub<VE%]2OBr[ckB\IV>p*G'
%Eg^tlEPm^OKncD:1TH94b),VVp9[\phemtZ=k_+0e]SQU&@pmraB1oW#:X#goOX%M]Z5Z6_i8JF&jsmf/1hW^'&J8c6:>%Em"eQ<
%>N%tu<L+jX$DB)NdL9NH_YXikOB4=]Vp$V`X)(rm2gp-3BR5h5bLn#PcQG_G,Nh.-qOtd[*?@f9PUh2IC771n)*0#Z%RHD2Di=$4
%3OkH,'mP.'*#YHhi(9=iaTfU^&Wi*M)Fk#cLpOnmTQ=P9CkdC+"9A461U!1<`NfZiGAXXk*COlu%bbqjS,IhAc\12HRf'lj&dKDi
%Y<Y3$jX=lcljWl<7u<jCC6J58h:LoSK@f/Jk]l).&\2@+leaVm8kA24[.(GZP/&/8BAP#?/=p8M*TP\gBM0:B,.odF_nj=&Ylb[?
%,LGNsLe3<M(]E>A-7BCE0inf^*aV/OdSNIki)c.t4ABBJL;TF;'h%\s[':tb$k_gf-k3qloZ`2?5elJ+%A"Um[eI95K<Nr?NYhau
%42S>VRG_4/rufG=pbA_)\;XB`E:*F3YND*pOigJ'#+-k])KUX^b^15E%_J)q1J$@\-WiA>aHfcKoD-q;11QmdgWf82"EeZe?XC_F
%AW=?iocb9o3G=dGE$lg?GXOJ/&0d-An2bG<<;7&p0<_qlVa]7eF<ed7AAOa<@6KbN`NsSDO;mKnlGSm.89>5?!gF)BlHjPn.tN:[
%Llb,Wfb3&!ThY^o&MhH"ZmNVG$\33-%n!!olE1c0&d8K"-g2=h6kufc!9CH3R+3?U5J%"shXe)1jN76\;lI[nncT@5*Y!qR8Q).T
%PIcG<i3r<Q#ABj[_#d%2f&;$'F?bN6U.sZVUi'g6C1AAD"9;n+$WQV<9a3lEID"V+QP':<b!.if#CQU3+Ou"N$E,,jA>IfI8[0'k
%<dski/7s/6-(-7iYRMXhdnJYn?Ybprb8s3RJqS$efYT7p=Gc56aa="XeL)e:.Y_WYI@J"tj\O`C`l8*P)BCJk/IW:qC&Be;Bo89A
%^E[hUI@Gp/km@Q&f[+<5>.GORfE+B@dO)q3b>9!m`5'eE>(@k68g&C,_UiJd)FAZu_iYVOmq0ZWZH,9F8$(]oEHK8&mbQKHO(=DY
%D?)mM\$HL*m\CoHRpq\maI>$h6g*PZcL'2d/U];S`ahh"K=ff\,AEp[K>?Q$612p1Q*(Z?*Y/Ud-tI-RI)^p,C5</t-Nqn=?g0s\
%I6I.3$W,mr!lAD5+9jWC1=f<5KL'G"0ilY$po\L*a6>8bpib06\)@khn4lD!YU+XTqgtBF`eEOMi5kt=N.sX>$Xf(c7]n^]7pSi<
%Xc,8JVu\)S59Q-*!ZP)&>q&a\iLZW'l4k_^=8)-:?V]7:QTklk$O\(M@Q-lWM**"SG!TsRd@4"2b*N-G_'lIRj2bC,AW]FHBMHJ;
%jFt?63NJ<cA/7c;.;%?hMHL*mON('YaV4rW3.gNQ3HF$_&C12aVTS?CPsGNkV)%[g2r;/<='Gq"!9.N_VK^<I"XngBiP?3qG)!jA
%/_%MoEX*Sh:jCS,=Lu9TUCRrmMhg+jZ(q!CPlN9UfO\$+C*g)QjlJF$d!AOa_q'i@)d[C."K2b9I":u=]WeaP8^Z^a?^u\(eXD6G
%J()KM5C:,/]\AYbcbL2]:*+7<!C]]q(pI,C*P(i/IIM^F$)kca@*#XF"UKmU7<J3pO%PRq'3,(FfF/;tha@usF[tDeSpm"8LrHu:
%Tbg6i/'>[bC`R/?c]s>,mt?rL%pa<iXsI4O&esLk=l(=JB5!orO4S'8E"qNQ6RX2=RM)#)6j_eh21m;f,[P!"ong2VM@:*7Pq3Qn
%l/dF&8:^;_$50.t6WA"8qj\(+8ua[u+I`cGopCUKhSA.g/\3K;LI^i?d?AMb(CS&87r:h:[1ND+m1gnP,S`3=8#j]S!$s?*n64GP
%[0_FHM]b'f,g!E51W863D_c9"UrNef!A;m-j*2_3ciVDR$l0?*+MT;.Kc'Sf%_IN!,]u.S'F#/u%;lc,LBC*P,4^.7f*"%IA53Ai
%4SpX"fL6kDT^j>IiioE(bp$%4_4fsUnj&HfS1&CJGk`H)>'rOCMRZl<O^-\#j[adZaJrmj-:SC2i1#A_US<NA0pW].f'-X;1_9]l
%G>BEae--*j=D`",AJ4SD><'e+JH3dVHV?q[ph#]?N2Ws^OsCLL'/1)QCToF,-]%Y/'A\Z@Kg)DbUK<W:,An.+fTT!aCK3>[JiA7S
%)JhZ-$k/2C*@2+R_<>k#Q8u_miT#YhMn,^Y9;3]"WsTF4"n"l3(bRdnlPd$BG\G%$95nqdJ'uV(//$f<L$A_KGk7&%ie%ZX?nq:h
%gk,;5g"_ZP\4W9GXs"bBl:@e^(<(?MGD>Zj8URCeB)FjHA]Lmm0f$g5IN>B>(,`L-N>r%X/Qk!c'IO4?ge__l!5s_T%-"!l%'nt,
%31#9W=<3TVcgE>_kErR1\(KeW_HZIV'SM)1NM'ICf[3OE[LuaK5lAKoYF@3oekI>7##OFX:.!V78CVmd&A^H3rE4Q^kp"L(9,WCd
%:=S%dpO90tnUl,7c;ZV.X3%H\"\M$h4sZ@U5]+f/Lp]PdXP-_nl&Gb#k+'dQ!Ajl(9IQ[?C:SpmXKf([!QboUROoKdg(tH;^i1^C
%qnks!L-\KGa;n6X(#12<S)9@bc'Bg1'8a,<[Kd[%&m@CK)NJ:Gg-1H=X`[)[!C64s5&!*oORbgde2@Nb8I.:66kmdHEPO#;Z%tar
%15jel@H5cO2iT_GL;\tlad;\*nW,'/n3lN=o`g0lEBjOh?:&U3S1Io)L_ZnfZ3<Ljj2V>H7)oC/g^+JGObU;X=IXt]-s8\5R=Xel
%=qXltH20ke!X]#&h(/HV*f?s3\AL['6U.pH@TsIf+/%>nHH\AdMA(mV!D/FqE5=j(?JG/,:E=?i4om8gJ8'kHM7p(%3"M+%/87=(
%&[\fp,UA0O[W3A(&D,qG#>nS(&$e<'C_=Z*lSf/B<*[2X[rg:8/e?352L_UD^0r]OnH#B@%4`cEQ:b:Pcd<U2=9h'nj]Z/qk@+gj
%TldP.;jXZH]5Ri=T+\U;mSQR7.S%c($=QmRP5(B@?K0VI:Th?C3I7m)#5_S8AVVJiM=tc)K`qJ<V"1J,$:"N"MW<2%A0r.F(W^_)
%r6,]d/a0Q&Sb\-!r+_lWlBj0B!.cebFI\(s7Je<uFq\fB)#]CAD;('+#C,"G.9+[U4RlGkP,UPtXcJ.@_Q^Gh1O?8\O6^Jt='sR,
%<Gj>(&XGbd(lTAq3-HauL]kRLe5ZgnA?ToZ]*\*5aE8[G3l5t3(n4Qh+?5>D1MTBi_id$A^4#iE5g&^$2aN3q'*9V>(f;f*$.ju\
%(D0fNJ8<t07gAg&2+6G`0pd]sM[Zg'6RTGmpeG(fW_]d;M5hh]E#s`]i[[>B")fZA!L/L@,%B?W8tC.W7!Q?h:lBB6@YDcs4GhNT
%A>.ZJE8<hViS^H\V_YEGaiPSY-)+kH'IZS:/=3RT6)R9n;GQNC`XDi%!fjH0)27(5JJ*FZr.G5!=,i'Ic4CsIa#OBUX'a0$0QQQ6
%^B&]t>d=nV#D2WY:-:^BJ^99l;:oE:1[\)P`Y$6CFP21C,b_Ui$3Xq*Oj,Ygc%<5Z*p:Xbbm_^3$_f$I(+R?IH]D^&//-7k_8<t"
%<7qHlq;SE<>h.!Z/HEj<I/mgFJJBg\Moeu>BPi:hdq=Dk+lql+n,e5\L55MG5PB_8T!0oCmN7=/ZH%hq`$gb^"$k.3Ar*Pia?gR@
%Qc&GA.CQ>TE@jT.0r-&b4fLK<!Q:r;iL7X)UI#6U(?RuR#'$rL">B`3pf!2#o<DfSoB"@*6R(\XhUVJ6X<t^=Jgk8Nd8.drb6,CL
%$?Euemtk-51/K**!qLu!(FPbQj!4IinMH0I1STsY@N1Z[YOIJ8%-$fQ"Xaf3dmZ0*>m#A)+=oXS@YjrO2$j-7e@c8>]fW=;O?r_a
%H2VU_$eQ>J7#LTWGZG3,?GKYGW-I4pN?H([@_+?^+Qjb'&$.V5%IAR.Jkcl2$`1cl_B:Hq#S3Z:BElnFi)o^j9.\>!:sdhfF[*=t
%0p\dHlbl&>=:lh*&17dHNkVZ5l:O@e!"Y@e81p=\)>5H])A4]0(PpF'bEcb!W<3\j83kO!ano<q#g*a85j?'!J'e<u:B5CZ/*1#c
%`b3fn%Cl2#Xe/Su;2H+_"[ZK*:t![/K_!d]"3Nt3%5.QqHVuI4&22DTfT'R"<64`8d?K?*`GVZA$3^b`\R\79[gp>3"=np9D((ke
%GVP[08?Lsa5^e:4##Jj91J%&F'EE`W?U0#25%f+rG(C8$krbUY@:>88'ueiL#H\1Q"_@i[8K8SQ(9Mi_9pPWabMuPQP$bqER8tTq
%Z2&.ORE'LY$Oq$l=h*4hgaJXcR#+$9_8UCk!X3Kh38]7Y#/O$Z:C&s(_@6(DqOoDYHmU)<&#U9R7/.nXJHHHngQ3/nNBpI+Xb:DU
%kTkKm:at-!W/\Z)!(lu"NcFTWiMhFNe-7RfY*6_!Qg:[cP_8lB$Fkb(^aWq<T8[4KpG_"]EjPn*":9kLQ3LUXN\2'Eb'mia=U4Y0
%981%o`8nF%>?UBIh_$XJlX;4fVoqDK<k./C]?Ea;1$Nnc\7^6>W2b^.n,Q$>$0\%DX/Pe$*;k'nP\\<,6/@m\.Q924.<<CE>q$\j
%`>+$8h@G3WP#M\a11`k/lQtin%+rCKG-$_>bSR<#UN+:$?X(>:$Lpcc'=LS:3-$0sKY%8j!lfpZaZ0mBEkqp?CZXUG@G[DY,aS4(
%*F(QBL79!-AUk/.,@#Fq`Y>qX/iQEgIRO9n`Bj[E!spSSW,WFVpRG(!JQ#36ZiS>.*6Z]ooT^.^WH\e"d(D6jd*M_CjPL4@3te+4
%JicJ_h@pJ.JUD`W##N*hgFSQ%A)d-cD4U'(=h=*SZ6LU6!]0RZ:>$2og^;a&9#MC9>_7X%W:0do'/sH5e'_hN5XrPkn-[:%b]QT'
%mftC!0hp>kV&qKtE!X&506ejVa@Z2ISsA:g+pAl7N/31HV:B=PAB62i/-/$Sd#H"%'MQaaJ?4<l%_qF_*T;%=VhGog#`QPcZ@-*G
%af[;^"pYm.(U7O&#>SART8?r>^3'Qi6!fcu@t6(k@jeLF\0`9(2\WUa)'kH'-a.cJ.a^W7*ut55Mu,Oron&*f6Ius6V]4>\W=TWA
%Jp7qK"M1c[<E</YR5"/Q#@'kNY2^01#Z<o#F,b+@HZ)CE>$8-D8+OA3_T^/B75k[M9"tc@,[piuo0%]AU^dfA0s'gf+:<YF)@DXL
%<"S`.N!RMs%Z"h6#WpB8:,=X/_B3@9*BD3\ncmbg?l2S?:*=,o!T7L.;ppW"$2M+_!te&?[k'N+$NSJ:!^s&W]:/)^+.&a1+P1K3
%K_&+#2<$#AJ%pLE'H'<u.Lur)Yd+)NQW%N(AdAWtOo3"7)U@6g.P?6V;%>k>TQl)ohh\*b8(@TJ.Ns>EX)9/<k'C3`Ak+I(C92%j
%f82-l'ja>Pp*;"^3m&C"Y0G8tYN5456TD0e$+cES&5E@pNq/D=mRSF")khm%/3Mjl#!6>jV*l'V/0U[T,7fjGgcj/*&Er(T$Q&*k
%KPr*8f>>/)1cmN68S*E/iQ$UFampnhF`$&FKsOo3&6i#^,o/3($X(?[i'i3=QH/A.X<c9uLEI@f[09p0rlP:TUq4d_fVE!l+HV[#
%ZUZ^*+e5GmdP,Z_'km=@5pNH=h.hD[C+j!j^s@>[ElA\NLG?jYKF&dS>2hP9J"DB\gP8hSnK!@W4k+&`f8qD9Jb<h[0)<W(`G!KC
%6Hu-MIlO45`(l'VS5IL%kJ`>OC2#<?2pSEc=,e;B5efu_a5ngP$Lj`4>Di4VlE_ZK\>&5,hQ%sNJ3TqU$5d7R+<$AFBZl`h!r[_8
%6!?@''+-2Rge&8Jr_u9O<!%>?L1[<]\\@IqIU#;ZqNNrh!k@%g1VuV<QN5/CRXgB\?OG3BUWBo287'#+"R52Ba`'L*HX5\Zmg<B/
%c5-P<Z^1^`7G]5ff$_,j4uF49COH)2Q!%2\1J^>Cq#$k)nqTLBL=b>9&nmp^-kcL[i\I\G1>uVPOJO+_'XaZ'W;^ZZAI9!0'neie
%#3.dfFG,mPApi'YXW+8WKWDYB%u'ebCLf3a![@D5OoF^9eAR6Z!=4L\^EK:$"7g*gge@;!I_);soY1F*,%"pZS\RlS7fId&a*"-f
%imf[_PoE_*oN4KHJ(bB!aE4/j&O]\Gl$k#*cri^<c2'fHOQ81hnrOs4+Y-:fF7cM!5_]+R)T^O"fRCC31;uiK8TmorqQaQV:um7M
%(+89/!Q=(]jNCFN!_$HC)eeG-6E)QN\I8!=Y'H6^'%(F`b'5<>l[%8XC@a5E8S;P"W3'=<>>@3=NrUTA#C_E,]qhg/=2J=`9__gT
%H1?MWKT;rXjS(-G6'/Wd*$ML"&'8*&SnfpB5I9K+<<AiSRm>KJM*A/^5h*o.XsH[h+RnAOg@Sk\B1s#LUWHL]&<6;NK``_!MB@dr
%p_Y`Kc^G!:%Vd(4CHDA6+.kc6QbcaSptH!8T-o(rXX\UI=9<LsY/i:m=2KM8c,E"0`=]']QZ&VrMhH].!FrR%BIe<W#^8(&"s't>
%!n>Qd/cD1I<Xh9H`IU#r>?ut#R#n>&Nn$H<iIj&KJT>='fG\uh_J,/1U`Rf0=?^\?H;a$&4T7`fr:Md7/4BI_/jF(08)q[l5un-"
%3F^AiZaTDC5c,u/q]WKA$bqM=Y[OY^F,5I*>KN-Hm/02$]o'<Z\3k42r43+M`i6(O^*e@<_*G0Z%LCgVJFG(HTbi(o%kaQu:k[h@
%")d2RJk"`&Oi%o_:S\7ej]sGtUW9u#"o&BIU^99-\c?`[K!bt@)7b=NV%;%+]j?79%N=]SAKrJI.=).]G)Hae=j\T-E$4KOZgct1
%eA;X+>/2EeXX&>\!j7Xk\VtrT)6X-DMIZ,ib*PFc=FtoK$8DoJX\"F\!aPh*j1mQ:Lh9,r#W#lqBBYCJ\[i?@kNe0VYfdP+Qh\K!
%=0(F^<h6%>+9WL-kJoBm+ILYf!bq5\Gj4E!F)](C0/,`i@\^_U#EnQsrO<EK,4QTY]6M0lce=`O8s4#4klg,j8gF_mKC=_GePb(2
%MaRT1GXW+X^Lu8@4<g,\GlS)OoX,%PM"'oqpfYg/6u/PsQ7BOk4RAuK<&?WRQjJJ:-c@rXIE2;*]'bCp)jmp*;7&Vd9$B^F52JBo
%:KI=e(E_,Aa$gd'J#aBrC%Hk2','Gnp8ZN)d"5RDS`fu%B=0(VdYN."K80t.G6!:NpWpPQp6"2rjQH!FcJ^\)e[9A??@F%MrU6q7
%3Ra?n*T7nue*[g<?\T8dlD-ZMi,`H#@Xl%Dj5Ti#r=i2^GT$(SE6-6arcK*WUE@7@o2X2B8/tQV<Y]tYdUdSl15-8i6t<T3Rd(EQ
%QX$H[E](O\O+I7]'IJ/9UaK.a9kfoPC6DdBQ[?C,XhWAFeE88%CFniK-E-c8fUE%>kr-Lc9.qZ>%2gHc8-P1$fLJh%T&nqP5c=ft
%+pH#3);I[="e=%74\=PX&4ESL0a&iA!h%;.XU\)T+GgRAN07:iLW_d[de42t#9eo5+p0?t)ZZq6.`G"G$S7uB9%RL/X4?5>6+o9!
%mFY&l?V!F8>Xc(]'U_Id`F+QeYh?\;0'V1#i9#%[pAb7`LuWOI,(`0GqOR-k,"[^sCe,`om&9Cti1%i^$,Q_54Q!p5J(.W.9kQ?"
%iCi5*gE=%?#X2kN47Y<`,C'qg-IFc@]1NU,/^Km0?A.glY<K[+<HsdP\,-]L4I1aYG`Z<A<g4mTW2%D`EXe-0q\IS%+K>&4i<?sp
%pmt:UrCaoOj59ge(s:58+036TF8_-`p[\<0hELU\Qi(3-.d?GRq!8EBRH-Wk^Jqs*L22@fSB$/K`C:g\FJr1QAf]^(H;D]+?D(8j
%%[*^(-`,NZKP/nJF?1^`Z2SGC^Q8$]g$j"0fM7,A*EEW^G@_>:$La#la5Co%@Nsi#bnO7?=+X3Lh[O\$64fpi3.a=([(!=85%6`o
%c@>]!D_p="P.V;o\AXimF/_@8\"M2B?,<ad+Mp`:CKrrWgb)\[$B.5`"6P`R=HLG-:U=UT+(m[P%GKDhCcsP'(ElhuFHFJ,pbD^1
%>p1U*6?*(l>AM<B7Dn$:_ieSsB6<rR:S'ghA+`$Ws#fR2b`/T!H-Mu-+79)TIDg:nR4;4Bj@R+s*E/Pr_(SsoE8DsrEh(cS6#a?'
%.eCll,/>[9!A[^hXQV,aNZ!q$LAp\-hZq'RJGIY,pV%9SY*P[qYP0@2djk-4MS7?SpY#C$V&,M1L<c]=0!sPOXir8EHrG<+q+QV7
%ngU=B#lWVAN8'-/R+R?09Q[3p]o)RmAm@+AI&1r1_h*PH+[+5\9GLVMLIXd-Q.$m)YH@Ei;Dp&,8uB!tK]sTWnNLQF/bV<<^YdUa
%NUHOdnp*9E=OWn.rkCS]??_5"?0#kRh1\Rc'!$&_j8&LOqJ9a"flZ_LWK0YMR-"H<K"hpI'ma#c";o:LAV?qTc]BB^oQ*l)5W0lX
%?^<J@^JkQ5=uh=kR*^m"=Pl$dGp00iHDdNc\=/TTc-iIcW/K%=R-rYj!7Cr1EQ+K;ntj+N<,<G^8&tTtLf#8Y\g,5r;"'ER;)$P0
%F^tP+Le7`H&G@HhQnG(A.-U2S/t;hk2"RIV5mq[?5-naK>PSnLX4TN2PVHf94?H;6!$[W#7?Sj.Pntn\@+$cbO:F8^%c)S>kmpSn
%I*L,?G8-`#5rBeTXM:JO/t<p"W08&DG2gUY,]g'[d)j!HJHnI\3*1EGW/?AehdYH*:CD04!X8['*>G>DAd)thLVU'mo0glW8eQJ#
%lq1q@B5Tc^jU!-k6*rd'bC+G.OqAlc0HkjN,VRsA9<q%L^qk"YW%LGp"n=GoGE,ANdIs6?WG_/4Y&9If'2lc&"deW3QUK_!q=K>D
%5[;M=Oh&cskqTMfaJ.kc.B!E89$DGC-(<UrW#'=&?)a#TFRnbg5TL/OqRWEL)M2W[`]-s8Q\DFg#.,Gtm*LFHQpt>&RG\K&&X;-a
%D(RNh=HLG!/XVcf4Of!K5[oZ=eG"c&J\nU06=r9n'p8^Q:0Xe/dOp0RJ5Bs)71np5L]7:N/hC<"A%;:H0iRY"!m2r=K@]$G7)&R4
%AK.GbpoUuQ9IEa/r(3>7-^hh;MB9\EljVS_a3f?O?:rNFk[W![]T@F8'X&n3)<W<VmuF!QgIe^agdF4Ih[Gu0oqr0"g!^N.D?9:W
%j>ibkZAL0FM%#E<dM)fHkG9:8TUK?U8L=]fF`?@VO<e$.'*Tl@\Ht!t:5uQ,XX$Vh:fRWap(E\0OMjc/08\)I:aj=#?%I#m-M)o'
%5]eUjC?KHu65NgQSTZT(R3Kj-Lg(gk>3BT\#LTV&%'m1#6O:Lb1*mU.!C33o2,@GR6iN;k,l%DZa]9iiV9SbCW6;1+V($(p3BIL(
%?W[3J6l8AKT+VeuWH&l=8FLC\R!OTe)[s3&dj8pB1sPY*6\20MIgccA'F?+qD2[51Rd3uJl);Q3c:VpIMJ?H'V;Zl)%PZ%&bU6(`
%)2FXHbT7S%F94jVO;qCg5H0C%?&nc=[eh0Qk\jgq3.OgFUSTt>C*JVoBM2N)6=^fo"*YSV=oBO*""H#MQ(Ln,L/."O-A)0Ud%_ga
%i&I-(XAiBg(DRM_U>IcXf,M<40B>qV1r^I[\"BNHo;T#U0fd33UJ-bq96uc&QYho.MR>`;UPZZUX+gDLab\u_U*p"5K\MojM1V7r
%mbb!-XZne!FH7lS;Q0=qB.lhFj%&#\06&fDpV\'X80QYkF^qSAA7-_$nOu*38#ZjtV-fIf/ShBe0eJj;10L@tM!$Aj.MDf;.3,Ag
%f`@SK<;cg97*$27+AaB_638t0.THk/07X3.KTqZ&@YE=YI4JktJ.>pVPEJIhYW<m5\kjt:3tp]nKbfW?HADLnKulPMR6?kl.a"Bl
%<5lD-1SC$bFPs(WYuPK'c1SQQ*Y?P(-7Xkn(o[X;URZO24U`_F%g^;2KOY5i_Ls[#_^H:(HaJ4R<(*9B84^9>8E<1KJl#pp-<]ie
%D'p2WJ2ZJGe'*n.LP%f$)r.VS,#Qu7``s&6#1>_[Q8pUbM%X9h%A;sD=N9I"ND/si3Mu$F1J$ACPbfou$6#'Sg<q38CS7o"$,r)R
%&@;D5$_?_c31>^*!3WAuV\ucS@;)WBS"(/@)b`Kh<'Y-u!)bKY&E:caVOe[,#r,'2I8Fj)(PGRaZ4e,GCSEXsq-m6UL<t=p=akaK
%rmldp7E@#am-*r8Ot&i&41.QXPid9Vmj:q.U1rj=R9h'Q3C;haOH'Ug1]_JE$3ej_J0c60h53._MCFrC!(bORXPb'NAV:Xe_%Q;Y
%,C;tiTt77E7KHrOs%a2:9_5@4Z;fp+I#6&@&=kd(''aXA/.'29mC&V^#oP<nVQ8tq&FH-]e]E+l"``8&.7,g/c<2;J5dPJO7bJ5d
%lpK\=7BAfD!OO;oM\8GgdN2V*8r>3a3e1JcXFCZa"SA9b\;C,@Upc@5J5q:@H&7pm&BiJ&a4^&V?u$pG#1U>L/E28iA;MNs_.JZV
%6H)eF9U'\,5d@<q,5&kXQ2&Ni[TFme+Nm!2BXt/_Ym:E7UnT8&CH9M?=4_p'jh_5#:s_3Q'.sYj#qVb^9h3oRMJC/MbHr&e@0.En
%3(3h>R5#QE8$a.me[rnP-DVj\mAs8R'F\EX1/;;nh6rL\!iX\#VSfkc*V,XJchStNYL?M\O$G_VJS[OWUCr5lpC2G3b>[W7JM5)S
%e+q1R`KR[kb=nggjC>G_1`M,7\M[-[]V*#uf$hf0h*S@\+dH*G"7hX<#4.9l]_!IT>)GT!-:8phG*]kCLr<BrR*XDtD#q[126[@#
%I$$F#$5(&0##DpfrX4Ur7mZ_NrTt!cK*@MU7G%?,=J!X4AXX)Ol@JdA>]TqKGR)[ll39"sWiF&Ed6HU[C>(MgbEOhU&rd/^'UU7)
%HkGZd4`45lJ=`OK&ti]!l,EGgWHaFZ6-:dUK#8f1"_/Bc*)(=jAE!WOlOm,On-,#0qLGRgP&mOjLue(TX4ASoglmF[oY=k\LWF)o
%@`kE6b&h-s+FB5@@.5Y+Y!%Q[$6aSLgYU?SG$TSbHqN\I`9(<EGndl2*<9rG,>QPcA^^'F['*$]9]k<.AOL8d0'h2.$^$;ZC8i6&
%9kS#A^UhZW?'iOF6EBZn)emf3cDKjnKuX?Obg;r8!.r54Nr"CH'%:tsE93JhD+,75=,2lu5,n?<noC<W:E8Q'Q,ih76E%OaophHr
%f-.Ns6D]^tgZDIR:#h2"<kO1"]/WU0ke08kPp/'*3UY3niao%$+H)b#KYg0QdMMSt#lgG/BSkFh>3)HUaMbIS:\Ej!9+`QLL?,Zb
%ML&pH->VCiAaq^/.)5KGN6a;)TMto%NTIjFop:4(DmgX%Sq2$.boL;V6&oE+Idqe36-deJl#IntTV-O[cG_#EM$.f`Ka^L[(927E
%kHN]Ij..H7,bn+CffYQ\77,R_):]c"J7M8Wf&Y\fP5-B?,o6;EEf4?,E9](&WW[V2EM+(1;n+LV%]k.)3Kj\IP/<I<.OIeFURpEF
%3UDAZP=@bnpntL/1Gs2C>O(tj9j>FVdOPl4D&D!OL);G[fs]#G:NUE^XWh.B0`c$;!4A-*19rI]D9ZK1M6*,8f("9$)^ZgC=B6rJ
%doJJj5TcJA<rbmn!3d.rg\)bt7NLI]lZOj"!_X$GOC;g2aT81c=(YI,H.84_<r@S[d$)on+S[C73XUdqf!c$d.t!NLoD&&p*P1S'
%10QugBo!!n5o>._i2)\:K.522",Bgh>B>>=]h:_.TAZ=Ur.qeT[UKuJBgal\TOTX`?;Fc]e'SZBBn<P-lC/n:*QVDmbq`;I:!JFr
%)jf\Qk]d_LU+mgWM?+o`!SbmBE.Q,93H8]Y/]4_l#SRAP`F_1VeS`P;Ir4G8X44M'P_M5)<&<$.G/"M9Ug$nrFn$:KR\KT5?.:HV
%Uid-&TA+5I`["aP7n$b*E`6TK&_\M2@[U<-$^^IIJW_4<bV\>FhSIZQrAbmDH;)%a0/V&'QL7&b$6cu010(Z'!bmGg>Cm^H-7FM-
%J<]=.Lo(!:7=IF$m1C;a;G^5Vg#2U]65H#.>,SgN9k`T&QeR-%5D;8AO96+"Mf6E_.Iu0VjFr67RaFsCg9Q,%)7PJ)Cc!e2;R_ii
%)?IQhI6OqlBqsP$m0T8J`CQ[#ccm5B%:][Bj>'Q1c_/GeO[VOZ_B^t)Tnccsm^rESY0\;b?RNtOAdl$X'%7ea=H^-*J6nA:s42Fc
%,Yk>W6JWGC[^`<T&l#3"##M3%VRYq7%+DC=dgbS58)h?+D'`.N[(*5IQ[/I0#dn>m]QPDndL]-]5o<QJ<T2Z5TGHu>^Fcr'E\L1!
%%=FmD'IGY^#R-V"r;D/aB+'NuGdeF:.SuZ'Qp3<kmm4BF5`Dp1QI[9j8l4CRKa,sY$<]MW'VQj1p`Z#3]iMN-g)l_[4`k,ibr;>P
%)-*D!mC/AumbIME^@3IJb.sF8"<;aGn_rUaWTU_nOe1'>9e_E==DZ$2-l"3MXej<APmSXSQ+:c(rD]%2R5;6AXVn-.`M@7,7!47d
%<!m;(WSg$tr%D$S!C7MEOZNYSPgaKO)+2fH\<&^CJ@MbEm'@22/^;[c<_mSiQaEXL%co/LL>4Wp8H<L.DU*)62[;Bj&oFUl!pC&P
%WZGQHQV]Ua1&4O"KfW%tK'FdOiXeMo"4GZi$mQ>q44J*r,Xmr,KnOg]qP+=Pl>eab>]+7nmg%!`LCjE1J>bCu8DNWD:t[AQMIup&
%)c_).,oe)*,nZ;0%\U0^E`eBSE+>%NG54IF_@i;BD,H?*`",+%:qFjh/I#C,Zms7U:gLeM<YKo`h6]OGB[sREoGY1_((Q-homj"8
%iO5k-gK;F;SWb&@9+]pWW-MR8V-/g%2i[V<[-HJ%1j94j5^ZG`qqQ<0KA*BI^rp#$=n7rA."7jL@+gpk)A+Q7O4CS*W`Kq0<!\te
%ZpnAYN(U,;oH4k/O>D_AG!SGW/HXp6P/&$/%T$qrl0s_a.GEP='R-4@IO%2,U=se!;rB5H@[tgVUKqoC&@ZC^KBRnVos9m_]0^_i
%:-Ve)8.fGoBE1SnJWo*%HB9?"*`\f,b]o2S\Vq*EET)J[M'@krlNiJ;'NnB-9nr,Q#b_fUDZE?OE$F="f6CiL#g=`D'LES5R5trm
%d[VTS?,,#!/TEZgmfFbC6?&mS@VAAsXWQe)U&%#[!m-%iN<Zl(!I>[cjB+j>/"WSJfCa]@eW2Rj^4[cZ`qb%)"?Uh3Bku$c(\H?N
%U1H1pa"`0Nd4mAFT2%iF=sMfs8qQ1,(s+osf[I)@pE%q/?UnNd]bPt.duqK/?+FFiYf$g,\?Pb[/9Y!;A;U<YLO_`"#8r!B:jaKJ
%!f%G<*@A-BB/H:jnj-_Kc-UH.@MEI9,_hW?`B^;RXd2`YnU"J4/]`U9>(!b<4E3V1AMTS_/oEebV6cC\l!pr0Wd*L^;F00$,!AFn
%U[Z(4bL*>SlP^lp(l6OR(`k@,R$&V-OfM)NIW0hK8:$RqlLfI<[a!dekcEGfd(\=:b%l[C=*W:-&ci0_a$#C(r4hq43'[*dhIiYV
%<,]qi[>B[c*.(-&:e1BOn=I9qU73f&(P4^"%+F)H.\R-uLM\1BqG9,n/86bN45B#C_PYs!_cRoQQ0Tub5##`d[h,O=B6%5YVl[bA
%-R>A[,4OCsolRH9#HqB8mY!:nqG]ck`t'U'kmq[u()YeA.\7Gc>U[!%a8>ge^-^Y4UI<l6Kl7OuSch'5'er2_g3IGS]fChJ8N"_c
%"ckf@Fu]5"3jBrUk1$5b!&3Mb85$p!![bY.1E-)'5[-0?\:\[3l]P?":ia%/c6n2\oQ2T>a:X^]JOh&X1r^`>Bl9:OP/dm]AP%Qj
%3Be<?/cRN.H0h4j\fd]J*=d6DOt4o%-u>"jJe/%4N'iKHR.Vp%_bpt;>$5J0@8'V)SSjU,5UlkKN2(%+CiZKFU#^/QE'!'j!0jD8
%aq=)MFu4'()]([n9cp0N\u23%`lq4H&SMV/&F:YcTUEtT:uuR?=3UeUNWL@>i"A(*O;(#4M#G]0%jEUr)=j9F!=WOSIU%Q0QLbju
%8f.p?CK';]nUV8B.Y>5GE2s\ickblm/JQ<o8-!<]M1?<qktm%,r]kjr;KK3nm!qH:-7]]Oa^bGSbord,Y,^mYkD+$Hj'/@[S!9p]
%OHk6`.D(#85*ld`/L1DF60-m@.jf-]+cr?C4ZC%"oPkYF-.=d&BS\>IS-ZI2#gq\`,a'&tjU>mI]b!g+A$!Wc`+9Y08g_Ya-HX/p
%nL+lZ3Y>4<IZ+.)OMi?Q]X6V-UD17-jHb&YZ8<:W%7;<9I)I#cS8[UEUJeqF9OsG'Iup.eOp6Sui<L]*aDX!XgY[r-*/%o6LkfJ,
%ROqZ9kL#S5HCR\8f^[Lfq1*b>Fkb>XqVlSBBNTTNVk%P4iJ>Y]W[A'HF_?jWQJ5I9^;07A$5Ps#%d8bM1D!?,UhYRBfLBiEj$P"M
%8SEmr2,@@SfOK_lj10FQ!*Zj]Om0c:aBZn3boCsn4%<!akD=ujP9[&?==EouGpC!0MD;^QD)s>ob@h:_6d'DPD&/[OY>Q-@<sXX<
%&R7"3-q2n@0A./a.?;];W%oaU4Kk6@q`k>nBGXmsPmUia9[*P^IDsra7EL4WY*kB-h?boh#1+b!/_O5kcQo>Z'-JB83OuD)J5>ak
%G>10JLou@??ag*PY"WArCY"NXqJa<*-L7gXlujkE$?FurVp8k1]9Y"%j!;325R`P+7rf-^(dQhn;P<SP?kuT=#EUbsH:5iD9b]qT
%\RJcfD2QqFYK8AN$Kh*&Nn2LLW'`$]VCgFSA*[&cI)?Fj_Aj\$<eH$ufrjWQK-^mQXVFgg_52iXR3=f1<-VP.U\:^,an\h-lh@MJ
%:GI>ld]ROfD"D^O%=R[!?qbl8Gop.&!GEfA($JI?Ujs."'('GGU@$<VQ9laL*$E5=C\jN#/T+Z[pc#^q&@,Xc6@KAZ;"8HY3Qu=^
%B6KjR+[rta;ru.7@Yb\ZFM,E?e+8C(b'ejlA,<dW$-'+V<[a-dc,\+PQ$+,_\3/g;O9KO3X\9Hp1]'c'1^^g1%9b0fE/?&VP2WC&
%XqGF&%GB#!'KQ;$NM9M\rCd\i/lAuLWrp,l#l,L&0!`gc'Aucu=&93%&ht%c3Nef\?>V@&cI]Ku)1RB;*.?P,BNr.Yd_#>O..+ns
%9>CZr6BHM7M9<^gPnFJ]=E`6CM\<'0RCIo^08"JI"E`@P[IK1k3RN(amOW>D[\:\1@0"qu3gpj@;<%_PCVVGkkA%9-S-,"&aW;o8
%4MtRRp#1.!hsX4U9O:Kjd&,rd=?nUMPtMEY?2K)+\EUX3<9_H)aJC02DK`6Tr3V5n(Ql.9Ld.Z(CmoR(2.D/P5`rER6_P]^%T-be
%.]?tO(>/h$6QF3Vl!Qsa+X3]CbXKeOp41.\NmZ@.NOE<Lc).-'D6%]s;98p7>7rBsjp?r?)n,B<lF2f7T$_RG"jQ]MePC%S0)VPg
%?X*u?!A%ObL=e]+edQ_LEC:QYAaLg.(Qt#g()ts1oRi8=OUR[YmN=9.o@QjhcrcL;=9/_+Wg,Et8LbP3R"\3\N5L/b+id%-Xt>lS
%m-Hm`/WmT2iL![<i.RJMj?:clE_-j>,-%@@mfEB-Xk_Ulf@ABpZp`N+m4m>#`/kNl',tn*cM&nKG)<XVRdA'CFB^N8&6d3M/_'l'
%<$9Vu!`UNiC+B!>S`Ul]2gXP*`D;"BIR]ug>bWOMhJj1SqR&bK:*Qa1]:.jukC3Wb1$bYS%^&f0\H5\-!Y2!Y*b+VSX(3O?,RO"a
%!ho5e8[q3n>X^.Bjee!5(NNGLq(RB*])SFTVLO`5W>?sf0MlT7i5<*O=$?3&]^!`j!Njd5_ii7eKbbN%`MIU)[BE`[(8AH!*80%0
%<Z&0l<!(dN9WmB(+3LhJ_CA+d,i\">K3D)]!A1[-k\eV!(uusl")@Go,h=Z"S#:QEdFfHI@"*r@msLi'C5c76RW@ACcLKp0H9CfV
%ET%1fE`>gGlN.46J?$SKhU,^)"3I7RcUZ,Q,kjBl-COV""oma%T2>Q^4R9(nhq\g=hPRU1dQp-_,1LAba6L--#9kMbTsgur?r^d$
%gc+QQP%kPG7[lN.dTU#ojBU[=@"K9K.n_f#]M:7j)l.!$6XT\f'GkDJ!e*o!$/#qq%!#3geZ0qqdnhUYaH$A0"t-I;lYYn>gJf<O
%f/uulS:RCIT"B?6^JGJ#Mg(>Q(*2]7<G"AXDb&>;pM.S;W\.eY8mu7kgKrC(]S5$-gIJ63/Moa\kn4+A4kR=Ult(qd$&dulBpH?N
%]uWkTG-`OYW5hP2Gn:+*a-&%<ZDi9G^Yo;TFqohaim99';C6Q%NVlcdL"_*(Fmg>B$)"<d"1im4f3,40Fj('\<XCmVT&[Q6$0$^l
%P/m24(Q.XJ!o1[=c@+eQ/L!bg.Y4NpY.1R/6ra;:U.Xsp+;e,k+h]0\GM#S'@V)]Zp.\ee?PUd`O64N'XeA+4n^irQ4pRDfZ:m'p
%WnDYoR!9AMUFl%M\%M"Mgn\urDkYmq@6ssBhAj`\h9;3N=TcP57WEE%<D49f=lL`-hI58_"Q_!DZt`XuU8fUq*Yk+Dg#"PL?KbN*
%<2qi9dE.\;Nhs.29#C`an^Bc/F$uI@s+_!bW:DPg:g144_-*Yu%697udU:s4:.hT[,Tos%@lgE:c3e)R*f2K52IkM/K@o.m<MEUc
%Kf\Ek<fIXgh!,KE[%OTO2]64"_9`7>jX0G$0jg9C.=Gc$joKTQn*r!e[T1@eCgi?*NuW:_s)r\"PB<MFZSO[6K=Y8&FWphfp<PCe
%[?tA^2>cT9)lAcES^>P5NkWdlWa6+3CRkY'iH$%if$_n7,'3C+l0ZQ#,^BIZ!]00IjP_mcfU12fA;0Xm9(_8f^t@)3UF,@:eeme`
%UseF!+E4ugcnjG(_^B%r5%["m3RE6o&FWo.%s)(nP)S(47s-4SMkr>VU@?L[P(Kb^c4gDFC2@V;[%Ba-Dh1XeU<6MD<tW7\'#b8&
%D_5Y7R_QL/$C:_12`@K8-?(jJnD7"g<CKK,Tn;D8W#I5&!)(SsBKHV`QrI(_,'rSBih<?OF>3*:5F3e-9fT+O@8]Jd#OX!D%YU].
%M3#n$Puo6jcMbdr6m^1.r%WY,V:?@DEk*<o#9sg@_7.RB]J(u$$%Ma.0bUqISk4`pKGtDS-1Uehc]`RA;7@*G:(E;1GY"&'0jaM]
%oDuRf?Wj0s/"&2=WcUb1r+0'_:d13)jY2HHcW(:)C$^H=pqeoR-XYcklY'mNboC0@nON_YG[tm]oS+n;r#]OK/K[f#_knbtMDeg,
%8K@ai;KHH.G9,dE%qA(%N0GaR_qZPdM=^fMqCNH3/H\&\/1Y](!EgMd1lTu?@;?,0_#/s5.op((M<Q+A7r.a?EK^%k,g;Zf_oToR
%`Q;9)h!6H;XAD5Kme%%r/q2+'C+ID-U.fkO/'+=hNF>A9m1cZHmQ:/Gk(f[M/2g@nct_R6+@X86<*]ml>RVe2oT<SgIQ\72CqiCP
%\J5re>^3\0OUEqS0J+@pdf`7ni^`EG?,Ott<SArpEl[q5lE2FoATk<I]9L41cP,?#r@Z4'GcUK<%'tmq7*PMQ6@*[T\^q[Sl'/iU
%WN3*K_ipVuhP0CIAQ(YeUUL>ooBbtD9F&.$Zop?.:pl!uR`WDmeZd7!eUrG*QY2E=_Abh<p![rhm0egh1:CnnJIG2i03/GdEd.hW
%]pA7\8fCPrdPcHVgd;bKHuX)S#gr]a>qaUA,c)ZmHm4_H*qm2^WAr.9C*!hA6GYLU@R:@8;:(OfGLEJoP`'HA6^S?s@=$:"P*ho"
%cC<mrN4/R:b[f8l\]mkOMICcnORLG('PicAq2UkIMRKTId8mX(o+X;V]WoD0rg6f`L@M^.d[%r&PD,uM":l)(@U'!eRWh4%FY1GN
%W.n=_Tr!`mS9=!0SR&NCImQ_c-PZ0-9Mpr`,1JXg^KGA!aS\DE/=LA[-t4K%1R/4*4>nE+H,_@1DQAK%$HmibbIk(-9U][uR$B;;
%QC9*KcS$`mMq4'>J?\Sm)dd)F@6)#c#5"V_=^#MT=Nte86!_Jtos]9)TReho0sFXBM3_Enqd,JcXaWkJOU)G$*F0;Zet#.2rZ7-F
%ZGcSdI<2-`SQ.=[ISM!N(,b$''XAi4;-3VgSjEA2G,U>"/Nh7%R*e5pP7](Ge`BoDod/n&nQek:9))q2T'J)tWTC+#*[0Vhcr\t2
%eSdP8/"4lt%u1fIN'^Sk/ed+39,q*=2&+I^1t%E'Ho+/qKHm^(HtEUE`;mH+j@Jc)?E1456Q[A2.qY\^8D3\SID6=,Srh9;JE2mP
%9mTo-gmImcOuri"rO+[/>Y%_6P+uj)--p`1#p0If(4@lbIa]p$k2J/8h3,eHGG+S@+Gg(;X<;4<09lPLC*?+gMFeOKC9<?KamaoC
%DDoh2<#oQ0V%E1"mHBh\/YOtVV7GZQqON[IVM8K`A>um*RqjTfG,V53WBWYrW\b>:@PC"N/?SKOoCAau.B'.<$"Y7+NL-`2\gLE+
%\cm5MLPke<ATjT,I_c)UQnDO2#pjOLk12fWP&d?0Ca%aqf3&Ou5/8FFXiY5'SJH0U1!*o]_/Ce.!.:S:PI-)(OrULSr%$4q,faPQ
%B^I=1I*<ZRDMk3$d&K"VS:Ghs[J1e,22^Xf?*i<XI]KG<,I;_=D]u%uU1mBDC'Y@AW@>%Oe=,>EMaa'u+>KjWBm!3=HAQs8N%.sJ
%oc@+TE](-:-#?[6Om"-mZF["OjP_j75X(Ek/Acq[8q20YaQ]^6;kdPMFN\,onm8<aOt6f(@Xm]%gYA*#.tL6M-IQ`[<40.5<@2*o
%NK,W4dk5(!^6ELBM"seFZWsG$+sc%gc<^.k&=n[r9c[RHm1X>eVl05/)Au)0/?2o!8l;`(q65C83/\UqC$PIn\^/0AOk7,sitFg"
%:>URhB='tj;NSa09e+C-O3P(o==]J7;&L79iZE=D%-@408nU0tIX>9@@UT*L9($=4I#t,m9;j70E%TQ%!LY,=3lU:i/0.kVM]+l/
%`IjJF]mL]H=:@n%"BuUh%5PU@GA7mXU6gYCV(#hm&eIEKSL\lGA!Q-&)B[`)\[ZM@/pjMR+2`\l/.WG__VukP7q@a'n@.*en_Tse
%FE%oX6,<]M-3D\IPYFJ9B7ub%hiYdC->`mY&7Afc8>V*++,g/`SR"%s)^RCQ3-QlUp3LQ030L'"PqS!C.cm/6r8C'"L5Ich.hVoF
%j2u`@LQ<LOU$=A&aH<Jl_\7pq'\!VG!IKGoHH5>oF8U:Y20`e@TN5uJYD:g,og8#2+!17PGo,#rC'Q.MhLu8;PlX'3NpPK"<"Ier
%0rkB)Ase\=otmO5hgXqRSphLrU5K/Qk)knJVWl'M;%S[]E+RU7cT[[kI!cu2X`(&<3`j_k.Wk?.=O&TjOK'R:-pk%3^[%!j-T\[h
%A7.kCC8b@.*DlF1]:8ntS<oNX$eZ=;cUiSC0u-+%kIm6I&;[R-2pi52%6E#Fq#M)J^g7@=:'a6L;N'YS4bDbrY=]a!Tb@^S6'@\q
%:.9/;g_+</gHX7T0M,rrcd@eHa?#er<\N5$fPi''KpgU^@u.=E<!$fWO(;pBl,Nf^s73Vp+_@]qk[uXgo#%-1VBHs3PS<)/j.T,#
%P6\ZurWYn=fsN-rr:-dZ'+:MXVF)^G.<nh00@I@%4\RRM+1^Kpd%9:3A<kM_geWXBW=_B.Di/V_"@1Qn,/k/4cUO=Z-&"4(9H)_W
%&d+bdb5eq,kh;c*T#5,O<q:uR57tH>E8->_p>l[mpu/Z.L:RpPK(ucAe!=_Sb]L]"3sgD@;3:;66SJI'H_P"(XK.Y#"];glQG&W<
%;F#ZACZ702V1%cCfgc8eSrp<D8:qB`!g&#"cf0n0IXQU4?X?Y^c1_l!6@N4C.4qVkj:rmWSf?n#RE/>IX<+*D@=2`<b/@Rt)._k?
%mHPS9VGZ5mI,hZQdDD1rID;0?0ncPPe4:h[GiSP]rH]5O^j"gFa[cRG.c3QkG].^?!qG>H4qU]h(!r'&$dJs'o7//"0$g4N%TT7)
%@#Dm36S,RAm_TjRfN9PcK$tIL!;3-UBfqE`;dIU5PC?/&Q)Fat+HpNrV@K=pSP@9<9;pCIk6:"Eq2ViCT9@"q-CnGfp,&"F"PtTo
%Lj8eJ$6^0X@)9h+:cG@EAR+gQZCk;5o1K`]ad:S"9Xh!932M`0-A]QE!nX^H5,3'[^HfjqH%D.28>o-*_J3W.kP=-rooR?-Mb+\a
%P2<(k@)',+C_=%k,6E5`3c^O$BCKc9"LC,^FDl$i.?pZ^&&)qNVS]6c#a\VL1E[R?NZI$SNoG`j%fQ?E>UY:+s5IDU8a(Z&8cN,G
%8Q:4O3k07mn1f_$I)iCfK/ZoE))VHUislRRM47Y5WC;haDJNUb.jSRl'M^_VPES(((%4=RbfU3\7/7'uhCe*l,-NS_<,q=+<98c8
%a*(Lt):`>D*m\,&Z902L\!5.`TG%G%I4R`Y6o%riK'Sl).Ji8]/Cr$M#35n+>[Nb9#*]0)iff[hU.HVb1spFm/UD#3]4I`=[>&:(
%XjU/^RsX5)lGZqU:4gIZciN9>b5u_7D<01J]')nWI-]+*6SkA1%Pa=E"`i$E#)l+E:NeGTbRb#2F,0jR,j:P0/9.GXmU/=*U"0[X
%fSP[scep`eX2V`9]7jK/F3@$PN=j'(8VhNunkfhm9X6Yo`=%g=m0;T0F0/:G,6QM%$tPt*D*sZ.s/^Z7EZcO1;R5qgkh#%pA!t7&
%4.8Vf/ODU#e$!ALWhT'X]4k-/"R1Nm](gor$XM=\joW^uLW\^tb?e&B_q8VhF7h26N7diK`3/63i"6mKB[me$N75D<cBgdf+@E(2
%.0Ab\YEM+p')&9Op4hS9F_hbc!,S.)T5295d$%8I3(k#eHV?kd\6Lg3NH(Z*_^nE7aD1+N3]\C\7.rZ5P-#j5fRB!JI*kQc*ih+f
%;c4skn5OQ#*/ZLkK:0Vg(r6bX<,(bc+^.Ko(+j$&4R3)Abs07UF1:OHq%kh$hQL4:[3""eZjWEP?00I5!=?%n/8p%g<=QYIb*__;
%P,SdoNX\bB&#('N3S5HtG>l6YP$D@O$Y\[\Iua1T[G"SXO[Kdm788R*i`9IWMK1(nJ]\prr+Z2e$U=PoRF,&5`)-LYj(@)(7/lCe
%:g!/8al$a"BQTu;LA'[H04d'V=(>hF.5eal8f!eP$MXh8B[,fg.S?u6WuFr(P#bEI0neaa+LG.e;FFOIj__#T*VhbK.(&jI3X2+1
%W-f'u%SM4hiRZ9U&Ta2*&3;+FZ5N^ce(LtX2O^dZ*hCH],!47H]JiFFZL$1hgcpe)KB0,VR1q_?P'3l;Z7HSb:$(@ihbR19$R3lO
%P7/Q\lt\aR'dOrf$"6]54%EKkY@:A*a,a&<>EUrY@VgY^m'\,FRpMOih7W!+$&Ge04:'W#6!Ft\I+fT@6!#o7D]:#o*OnLKMcKck
%AQISF8`Gq]%(l@&f<lh@$0e(8<6.T/Z?_0.7@6W$L5IKJ,4e1/-Ut%i'WB`353'L*AOo5EG,dZ*=*$*\dDq=&TETsRmUnLO2h\Po
%F)0\)I>:CX[I<eHmO5]e^?:qD0Uca79-a3o&r?%f^R89dWe.l8qGAle75^PrJDOP5AB!*H;1*Z]*3Uhd5]Y;QQF!QmU:I2cdqb_=
%Rg8n'1od?aF6bYXiH4hA8ifl4T0E_8]#n8.O%7GDDbS9+L'!]#9hD-%YI)WM=&//\jN4&d^0'L/o&q6<]XSThYBdcBG?!u?;hl"E
%Y2#aU!6ppm@n8JE-o+u]=dgm>6)A=G.,p+tN466?j=DK@,Y.!m7lEj__O2MoVjjMPNAQ'QiD!;Q*\4.DcF$RY+6onBp=W!f,\!^s
%;&V"W@W"Oe@u^HI[dlp#2g:(#T\,R197WBaMHW,/@Z\CaEYc3*%raGT44]=E8omJ;D.(jlq+Ea5*tkPKB$_[t21Md-%\*Y!@5Sd*
%34PP9]Rr!YY7el@<?AqiH_HL?n\<sY50Ph4h]^%%TF.s5#nIg=F$N1#.&%e49CPP0E&r:QP[Z"LWPEP<`7cCbLU,E/d4B8[XOD:5
%G3nAG-BppgOi;ACLnnIJVDTo9XIf\9Q=D$Er&HRD&Q6cgSSA3SEs?l_4M/^?Djp?ol*dQZrAV9-I9VGIocfBuLa:$ETN)DWQ4L#o
%/"WUkk^L.*#D8gWRXit'H[9sVR0teO+!Yb,@2"H0,PCbK[@DZ6QfN-1*4jLTP4P=I%BkJaV@/S&\MhQ/-*/@7e5^'e<:NQ$A#ea7
%k9j:9N8-:]AoVj]>bj;QD9_!pOF20Z(VJIrOT<'eR;/c6K`jBDHMOde:m<)k#.Pg_$q-3d%/JtN[AZNuI^g\^21A/],H41=[#Nb5
%_cJmg7b,:q>DXb"I\H)VAl0L%@sY-CPab68>_$CT3e>bO?=H0/.)d)+P5pDlnjJk@/f#pK&[309AeLcJpOO@fq%[q%%oDfS+Z><B
%(dR6;UR95&>LrHZi[=7@bO;RPC[$tfkTU"XWelhY'`eaQ8"d,TFtlLQ*U6HFQg00s;hdhPflf@Y7hd<P6=)u\2:Mo"8\CMq`GNj*
%#n7rO9b8doPHO=X_-l,*b2g"nQKpSA&^g+^qEWS,;S/AAP>3:p(DJ_EY>D*d'@AXA*Db]5OJJP:#`]QK+@WK$/jB,W\*Oo^R!;XZ
%"O4nbOWbkgX/KEG4eP$9`V51E?B=)>Ns/(Z/^;<b$7=VQ`b(*%$Q)&9A1]C8>=AiLHkSFtM^p)Y^cF(;^JMn#heae1L(JtcKXC#A
%85BQ6XSV3F^q,"$U6CC02^Fja;!*\E(CC=!65jTlRbQ+*LpP9d.+O4D61Y6<6Cq>/9$;Ge1.;p(PdRkPY"6;a$-b41I1K0r-mF1G
%QSD;`%Gf.Q(dbVF?,T1I5\i9C#Qr.57(Wq%HOkUu-Dn>G(*_tTcF,*:FL^K6`Np^/fhYhY,VtX?CJ`Ii,m^KHKFTRV;^gGP$SKC$
%B)\L.Z;0Q,)5(Lhn%iJCC,D3#Zr@*iDQDIm8d*A8[oI`(Mo/#c%S\1.#8JSM&^o&@;&=mX=O*fV3`pZtU[<ajU9(pjOk$/dW9@)(
%&'!V=OiM1Zd#L()QX2UB63)ns./I?ah%]CPV.J<qSkef=3c1+CZuf+l>al;X?)mle/Oe;^;ZGf^BTk\E0_R(`jq];EJ#UgRL^XNS
%hPglsZGFE[E\J[^BIl_9(/;2ZU8eQ26%ZDgN&5)PM$sHn(O]PtD;?W+Pm%?i#CRG5a=/@3D4l0?p2XSqdJ+-4e+2V78CU<.klI-L
%eaBVl4f-EhIFU%f/6'ZgS%!&@">)EhhE"dK?':t#(Ydu99Z-i+Ct2KS;si3e8(dgLgNQcK?e_/(8--3K:YS)%"A2#:6Y.9#r;3ti
%g.eRoIiaK3/77(?[bF<fitnE>rF<2b@gXL]+=emtAGL5O11<"8\/[r"@l/%GLlg:TLra&3]^VA7nngaCF7(jCj^\I[GMTiI:^U2C
%;7Q6,nag!"Qu?Y`^TdY2^]3)Co>eV[?T:Ui_E9QDIY3iJR:ol":hK-+rBf+^E>Um-n%QZ.3L.l0RJp_f"\ZQZ)HJEQ8ss0ESt%m@
%-\gl;jFJm1(cDI%*\p+!Mf"_C"kud$.L64"+e]lm8b'WM#OtN`NYr54gJW#gB_"maBqnIIDF.J9.WDdj71WON0W(g78]7T;WoC.A
%XH>&=n6/p^k/k'L0iX#+oYLtNdjFs->=;/l$0p-E9N.TXQl"J]![3q"R<:jCi?OQsH^=mMR@b;Ao&pM<,O%1?I+^dk2XLe$fX1Uc
%h5R)G21i*>Ne<8EIhsrqTguLY4mNt`r#uk,=O/*NXC2>Z+T#$8YE[=\+/_L+@Rf;u$b!'iJ]/e#A_?!"6K`l!@C!:liX&RGVFQ2*
%!=Jj/btq)_94;kM2*5g/nccaRn`5Z\d3h0do?0`UdEptG82nQ1S:uhVfuBbn*$G,YTi^??4_@/54p_r&)3so\J5frTc($r8'B>BP
%W#"TdQMA)UD`^ingV7!6JYX,0S.KObZsm&A6AVKOP08&[H*2XtHst)$!>HIgTRM?MV2-\g%A^pM.\`+M2N$cOno,,e_nk=<()RWU
%eIr22e+1gr9p9D%#!u.N.1.*jkAj]Wg;\MLc%.?4U_,FgI*Js;gC%-mokmrLR9Co)Q0'mUe7VUAou1d5J7:d>+>!bSEPPc/Z@!jh
%N&,O/'S.+XP2*L./;.]r\sNt!G`i+\TQ#M#?#P?'0ajtG!,_WL;8bj.8W#'-Y/*`SloqeIg\D+C1J1a\6l(t)+BgFSG:7!_'?6&u
%55:0ar=G:-GT+G#20E!t.>E79DO]e!&?]gbZe2e++U3*B!mU`$+sQod11(8NLODVP,KOk6UEG<VjjScClU[]cG6R;%&[C!t#jXGo
%f/X=>VScI)n;b<oQWmm@@.Va?f`aoX`*?,3nQh^*n&6+o+:8$W^#Bo/Fks;O,Xoub9"]d\`R*Y1EO`mu0Hh]+)YY(KK*^jWk?2\L
%6""YWKlW6_5.4ro7X6<'Qq(uUbcJSEl$.;j2T@8Y?EYmGWFnciitiCtnq:g<X7V?ANPh1KVFf[,./*_<1[kPM1=%M>mC2L52P3&]
%5#H60@a?DW[r$)=&,9p_RJW(.\o&EZK5(3k=Wt)"9P4m`Xq,Sf!!$J&p!F-A;UakA@q"Tl"_jmrJU2EE%qkMkH1NPnp+%t*(\`NA
%qKCh--iM4)ROb\Bn;*0:g;&lT!SL76Yc?@N\(f&>1bI8S$o)dILYB/Po=eGeT_1bXMr^B33@Aa9m%ag"gC5b3ot'S'hB5`shpEV<
%$:8A!*'0@Hk=(+ICP_`L;X[u:;Sbj$!j1u"\IKE`)bsXHEZCe@%%>3ljd+pl1FDNGlF4Go]tH^(($&cR&d2B/I/DZO_6V5fF.=eC
%/Q_S465Kt:q#r8=--i_fYuT^U6:@9#;jgORC*H&YmZQBi5g?tK4Z+j[;9sP*?Z4D8Z6#Z.>:2sMWru-XR<[f-6QQ6@d9K&+5*1&%
%HsTlTQJCa]oU('u"erqL[$B4Z$57+XY7ROZZ@?`2721l);_'fB35X6j>8sP.['VaZ,q6#jY,IkJG7#ID</]Ljg^L+9(;k!Em*n%(
%EHELjO-9&POH0Le9[;6"M2LHVj#oX6=TaB0N)2H2X.D\;B[l4f2LQW6b8r8kA8E'hDS:[V*m6Yslo:g.H)uS&PoJ_b;Ob=@XJXub
%KJ[C_%()T?e$56!<Mt)=Bh::hA:hS6`eC-:4O;aGKB]&i-&Aj,esnBR6jUns833S`ACpFa.]oDe)j5CN8[W=_@?f?)27D(#Y30pG
%#fYr9478S5*=3TsE%/a8PSJK<0Y!?l92l"./,Ab6o^V]b\!WHac$#%'b$u%>g:k$V:FO";X0"jFN@EA$RYDAs;T)Cn1aiC4-\E(/
%bkJ%nUQ2")ocm0Qd)/u8gKJ9.B5Lm3Li**RcQ^[WcOb/@$&LB^k>Q%c@p7c:RlH(U\>I'ei_l\bY4&]XcjrG*aVK65!*LPR.-![Z
%<0BYWmXj1KTL"emPKj[.F(?9R#t)`hPQQqgSN@Oo6/<Ych[/P:!CG07cRdYKX`SCT\<E.6Lg43Q(FpRf8CB<Y"CrT7lEY$ddFQ/h
%5XAgR89_1.K]0`t-/X6\Kl1YO55]%qLNnu_l2WLmqTu+6A?(L?AblNnk*sNnPsA&\dN"@on@ON.cDON""'Hg;LCZg*G[6A+<[*6R
%F`-@F>i"o]?.Go3=G=@$LC"t(nKPGATaGpJO^uJlZpkm5e?"!X)\flg]q*(4Z<SdN@Gb)H\:fs-6)_2a2pP_H=Td-D`r-aS?%)fW
%[0V0E?)rd;0'V/11!!]-FK;AC>9UWea=5>`7eBWe@Maon38.0"%#UlX,=dfN%c.`shYl5OYqV/2.<(jci^nE"6\Z'dB8Jk(ls^SN
%G[aSK,5$6FZ0;>RJYno,Q53qmEuuKaW(8=g>^TsN75$CL&/kR(YMF'_NariIb3@t])A1cK.>o+d\8%%OS6[Qaa_->38aJ$dC[;W%
%99ZTY)!R('F2+#aluk(>b)ttS9f30ekG0-3-(X"\Yo4jn>W34(#nb*)jm-.MX_,CY3X$6XgY7::bFqHeDYl/R1lTY01l_gj*e<XX
%CI0i,\4IcaF(=Vgoh6u7<e;G[+a%)3Z>Ze)F.>5'R)7sOo2L8dJg2'nBN`4VBFV@kBm(]joF?ASBotbOS\F*rHsr@7Ba-^#o1=t#
%g?%S@)5m*sk7D#CO@pt>SO\k3[7=F=&5nJM,b#kCKXRE9nt/j0IQ3o+P^[DBo%>XD$VK2%I\#S`8#bA"3s!f@']4%K'JHRaKo&8g
%>bV:52D_'Y+-2(q:CW"!6BM$ie5"a50"UG35>WuK,iqmG3?SI38]nr'$DGjfZuu<Vd)i,.lhG=qlK:ifPe<d%X`dO8N4Z55V-/K0
%)'q!O9-=6eHT'a.?gfBV/tSaV:q8sm74h,X5@#WiYWF!A1,fT6*)Y;)cj;NT?)V"8oe_;13Q_a2+jotl69d6/onAg35aBa`@=Z^.
%Tgj,4^3tTQ=[\ZE1ZPan5o>WrD.LZA=Osr>1I2F]#6!NFD]ZAD1"E2Sf[@,^eJjaZc\u9a%Nl&jEZp5MTX]BRLiA#s.=@L.ac*&"
%01d@B*:"i//4,6L@tiZ=/DGH75\F!AdKVV&m[nQ<^_V:%Rp,W#0/9pbF^]RiP1t$_r<4<)VB#bDMXqDHNnF#\Cp?6qbsu;VDXX2C
%DH=]4SMj^5LcCkGrDnhs8S6(Q,F7;I(iO,]L9EbohU*YS0JlknmC$7QTb_\6PQN;/]QX^\kNch]T!ZT[jeS:&G@PqXF')$E@q+2`
%"'!==c/?>L<c/J>J'ZJ*\Ln\#,M2#]kt1_+Z/EpprS4i:7DX9j6F41NNk-0_'LrZXk%K*/a*PAe!WDBnD.^VJeFXqhM0(S!Wf_.V
%MV6!u2^R<gA7[u3'_9pC,cH]lS`GhD_eL[;P#^jhGB;On+!M&k!EG>%1W`?o9,s,='%uFoi2[gAH&aCkp4nnHH%$5d+H\'46-f"M
%4t95?k(]_El1nQ0m+5Nh;R0ANJ=C)(a[gc):#d\@F,Ml56?sm]6sKB=h/u'RY0@.=\(\j5"s*M%Di$r6R-)^kJ'MBdG982p7l;Wl
%^gmJAnq+5f,+.Uo"BK.Bg?mr`R4%<OdcI4A"1$4L_PdYP+?%o_;gCti;8!1\Kdo'EA@'Pr3T869/h06i`0=E.S<\,$7('=%V-F[S
%Y1XIF`_#n1MlDSULs'>\*nZ]la]2E\!i087&jE)l&(IQpVtr>LcrGmh6W'L1,FPi^FoWhf,rZ2$d@c#a0r(TKs#-p^HL*A1E5#WO
%Ni[Y4o)&Nq05YML"ANuC$fMtSd*B>Fj2Psq<$'4G;(R<58:1W'W$r'(hoj\I`INJB4ai/,Zs+qV8R*ifYgfF3E8""ATs+if@5i)W
%@\QJ,V^60k;nrEn'iQbI[217AhIo$-&IO4LS)<P9KqfpVjMg1fDa[H,AR\V^10Yo37^F*[1.W,97\X?!;j_AQ[aJsnTk(+SbYk!)
%M)lrl<CmEl0&qV0HnY:@#$GqGd#'BI,Q^bB=Hb1lOQ`$OK[P'DeH$T+%\[b()HCE+r!e81AON[H+>YWZ7\6*<8g0PEKP[+7.*+$b
%_`a5@.&.=I(YMccgN(UdPZ9hA=0W03SMj:L^17#$eWa0;SmmkL?P$,r7>@h3ee>B7".r:te@<s2%"I65`CE[aV;KHZTUPV[DcMLm
%g3NG)Nqn20UfY[R]8SEtjea@M7+HYX\$[6H]//J\p:H-Q)O4Yj*o+QBI2Rll#WWA!<1?GHdb6"s6tFYE-:Na$f]56!lPs9_2"?*$
%a6W5UJEIYM%"uis0Z5%Q:$IHY]0W#Ljs]mkA-kVAk&X[s+YO:$U.Cq[Qru!UJ-8i^<!$O"#,"JYT=ZQX%&bU1&).`]*I<'`8r;$s
%ontG-J%h$$d:\88`,BKo*H;b*In;ir>YU-ugeZB,Xm['d2e665bJ5K%f$k<FJKDlXa_qW%%6k0jkY<Kuo./!?YE'i!O3CjrgC^f'
%'d1Ppe`m7RlKrr>3C-QRQLCRMUmJDpB3Gb:Jcl2.[=H2s;i8R;#9tPB_4+/>!4UeD\LLUJJqUMtQg2'!oO1T?GY+&+m"pVGYd?qq
%:1EoB7*ADb^^j=qe9VlYY7%"pUK`Kb^NJdLC*X2"!MV@t(,ruZibR([.ORZQc4n.4bKPE#4S#&>>[MY'Hg.tmJ-S$XmL>"W12)5^
%Uf(ijU6,&$p#+QsE0#kXjfM7\d5=p(#o2W7;5"%24OBS8M@^*b#R,0jXW2H"?k_?b)m-l)Xn'2GcX5I)C/n`*m>=RR:2N%#"#8\)
%D)2-)I#'S_G,8T#8]'s<d#r3p1s'9YO/f!jF%-.@X5),K.$1";=t"`SZoh`@-:L"Q%%AD`^>$ec#B8?+19GVOd8OUDGos6]E5U,b
%e%YTBBu<J6M2PhK8u$o..I4UKVfZNTlI>nu*UgJ,P1>;K`XS1%>!H0><=Cu:(o%Zp#9s@IRkpS:B`i4udnr!8)'RC!849R3M)pL?
%P42dUBh#I@5pXiaAON$9Z-ak-$_LI,ZRthb9mO0\R2XklX2m5@'II)2Q;plAVRCH;rJ+kh+n<`5-\r=CWE#X<h7=6j`KT,TlJpNl
%X'"%,T+V0Q7F3BSmbRV;!LD)4AQQO<YL''??_4ZgeSC$`bMWjC13%6]I79nFU:b%X;mkr4eQaMNF,3+8JpDO,nX:??WU!nLO`+pX
%O`2nOC802+hR58[_Ns>jU91rIEI[(H<.X+3.^J`lq;'OMC$IRH4T#OM1I6#BV!<Ko$R5uRn2$m3)95n5c2(%P?n\h5991eXdo4KT
%F_egRe_,l$G4:RrrHt;Rg0I%HB*?/?<*4N/JUg1nGiSJB<i928,\7dW;]XB)n1J;[?B>FngBC3,j5S(t*^46$Ca,FZSpf5'bZH@L
%es9#7:I5A#ImP?SY>n.1[MHhm7!*Y/2P;C0U`^QZJ?gOIM!;UM2LShVb!h"gS&u@^Nq_9,Z0H>^?QaW'mnhV=OdZ*@l0@96EDr?I
%B-dfDSZQ\4@K8Y_H:9_mUu+Zh"?W$>I;>C7d1oq6e@/M"p3X/H8>QLu5+iToK+auA&0^/!C.;_-PaALeigj_<Psq]EfE(*_aX4m)
%;tbp<iB;iAhc%c"A?L'$W\7`!d$Kh@KP[ALVRI'CLdk%PKrak=Y1:.FNseTP(YX1=PT$WBs.A-1eoaWO-6Z6fJjA-#)<uM7Nm>Pm
%-Yo<6:1h:22r0c^WA-#-:!9Z^T/MGC(9=p;)Z*a2f8*VeV2DJ1Z#*([jVj]BZeEsXL-Th<6K+]1A+Nj`*^0XTr7Ip.Xd7S'EkqL8
%I2Qgh<qm<L\6%!9<!bY&*S2mFX[TX;R^&A/=;0/$0.TIQ.2k9m%'ed=<WY+*d<7/#1Uc`geUPLdjp%(!C0,<`bW`NgC61Pp;i@)2
%ptA(2Guge+BbtJi3)+`+Tgkj9&<c2d@]!"`N5\a$fk0@W6Lpp]1IS[=JoLS1?06'Yk3,GBWr;%:_a0m*274G;2/"?,G$E_5d(mqH
%VW9qg`p'DS[""(QkC,Lc6:Wg,%'1FO6=]l%a1s^.)BqN"fa_[8d/G&!?#:nV9=4SpG_>#J-tA$/WmN^a8#Q%r*P=3gOcVK/b:4rk
%r0$G.".ASi=4L(%Hp5BBY>q)c(eXfP6PM>3Td;/i7.&PD`O,WdV-?Qp"hB*'4Pa$OeNnI(QAL/2Wl9&A#q2PoCL)L2EBR,1TIaXT
%.";N3,otB)Gb?`s<)k0T6i.A90'Rsk<k]le[#Gfk"so+F;B?D,PT32:^#DU_K>QM;qjZ"T!=.EPf:?>&+JY))[o;2"[!?4ImtgB6
%3gFH:_HiH@.n\r%0aFE2F<N`)OQJWpNK1pt*<bj_bOmtEO<*;An:L..)<dnd;\`s)bp:)WbSBM^O>E+C+DSI'.8+_Fg<(!j/HEWr
%+-Flqk9D/YQ4(Ph:OL*aC5oeN),O:mip%3A4`k;R0_D7PO]PJl0SP6Q5P3]oKn0YKgijU2^$=+[h=2akoP4)ni$`b`ge:T5dgtn/
%N\52!Qt?e6''$M;XfoAMk-t#!GLqd!^%mi[@]g7Ii,P+XQhKlk8eB6l^/gS8)&XIED`g[VQGXoG9h+31BO.ps\NA=C_1,tbCs'V4
%ER(C5iP5*)op^+YYuA@:OQb"mJhP^-*"BLt3!`,l*W[qAo@D7u@R=A$YL"c^VX^p[j]9HH[+r&OZB>sElGN:.E"S?>+L;Z(2:#0V
%>;?1tnV@j!=tT!?jJSpL<u/]F?).07`@P"gD^!4gY(qq'R3:d(P23$b"F:S-17V1hDX3hK?Y4hSJVb5@pmt!s?nmPbSf0>Id-I>5
%E*MpB@smsnlTtu^QqD"Y&WoT&&M2p)4GXu:-=-83AbD-1GiPn)\cc5U;)-YZ-1_&mi`fZ1H0QtIR3.;*%-,FB^a%$fb[T`L16$I;
%&:jL$VGO^MNtrme=cS+S;VABjM=[^5im#nhD"^9MW'`I"D6WaNq9@O@CdSG9IK'54>?1p:SnusaC<_r`gKQ;cMHU=mMSm1-`>K&p
%0Zb9q*!g`k\1SLdqZq2JOKPdp(W>-*Es,)$XnkAdbY,<W6o:pC=W==d6WKD7HZGR/2SWu%S;TMj'^GKO`%l@06+Z@q,UW*F[Z3RL
%+akm>6ra@`3#9oXLm%rK)VR.b,n?=T2)EB7_ioeU5g2Zh<TgPSPLN,COlVf4dUjoF;(1E!>CZJG+4p3;&g@,f+&YXL3>$cX%dg*^
%R1mV>NkKD66VFeI4;Y'$e?DD\dNAUuj%HV81"osKLctU$:cl[aF1k"'Q/lDk?JE*UV.+grm@jHsF(hC(]b2Vj$?8]280aqoqFjBh
%Le/Af4&@FT2Q7\2esFO!7.J;H8QAoo?%A_FOr=n$)J6RDDUQm/oL$BC*L535Z**+2WDJ?17c)PmD,`DUa](P"7q`_P\aFR*Y#Mco
%F:eIs+jVLOc19i-Ysdllbl@[_s*X_e[e?HkA/k(9*Q='8%Y7r7#M0hX"oKF,Vg&]a&V;L*(!o\^.BQ_?REN6Z4*/XH`?,NF`D8c4
%L.CF2fRRN._j,Io_.1R8d.q_FbS:r26l-O]>7[KJId5S7<ki<^1Hs#Z25%n)30]cC'f>'pL@LrJe_Ls69-oU1e>rO+R[;?>,1doL
%Ic1-Z&.c.GSE85$jGM!j"KprXmF&W[&K#q['FTL(R(U8c#?S?>6"^_3&OK<EXSDnS(TeU[=".\b%^rq(G.OhM.%%\TTZ;fX[k?_W
%,``s.;Ln>^FqiA?%nJR'KL-l#3qGDJ=6)(X_:/ts0Wg:W*Wg?2Z8T&Y67?[&rQ47?mQb]Fgec:e`CFfG%n`'!NDsrG(Tgi.^OWue
%</58aMp#,hFL*03M*A'4lr7bVIi&DF5Y@h8[n/l\mf91oBH_"S4Wqnh4@/Vsj*AFJA8fOe<dL<:a#kBW@K0@B8h-CDYN(^l73TD7
%%&#B<'f&3APtCcT82:F4%ra[Eh02G0[XscGRCmCY2W^BNcB-:%7?uY%g`5%0AVp-j2cWqYeX--TB7Vu%bIMiSYZAkM2g[Q<F5p[J
%+W'3Zlru]A4+`.lmYM;M2l?''7/6aG>X!/GV4Sm;9th)%CkHWadfWL@#nR=FU$B)aBO>YX!<j0iS#>K3Q;g:u];\<L5HtNWgmcA=
%_EfbEhMn[5o:f>WCoN@E'?]:i+Fi5iG8nKa+90F3&bp;QQTrVsbK!2oq^Q;r<PoX$emjbr'SKAuN*qQ>h$2lLN!,Ki$-F1T83";V
%aK!/G%I2`KI$3d+C3!o:I>ZOT3X?N]<1Hm`*52*uq"p,aBuge2?'MbRn'aM"B-=6/XD-c0TOn6P9''LZLP18K<<Dlj)DpZl#%BN@
%-k@!6dTR]l5l+C-<k.?GQ*h7h+c/VO,j$lMQh*tKPq9bFD2kC5>.'M7"q384V+eDl!fs2f8,*hAf0$,9Enl=\`5c<k81M0W!OGfZ
%U?(_h,;&a%cq9J(W]L%Y&krS`Pt_uePT7J*LMih<JIn>+r&I75#[);K+_PkN,D,S)][.kkgBP^QL]./n["@4JR!2L`_"djD-3iM*
%"U7NoU"#IF+eg+fQ^mWB#<0,H/hH2&WD<?[EtZn\p\iN2[IRF?!_Xi%UAD.K!nqfXre/ruGLVsQ7dZ84""-h10b10cJW0o;i$obR
%*8Lls@P:]q,-rsM$3Ljh[)I[K6VR_]3+cXKL'3cmjDq=!'/V5U;+]kQB#2B^Cl"Y^XAu)rDX'/26X'p>=Oi,TU8%i0?<2Ym9T%UO
%Af!CQU9&$G.-k8M*u2EGT4o_eEr]4`K]BD<Wf:k8@c<Y!m2KVeB@4@h4qKs*C1i]/9&pT'k"DZ:HV[*!hhIA]it(&Fq]ksgr\*/s
%'i5UgaSGWDLJjh<Th&F9]l<e@gZu&VO3%?trd#IEh_E>^k/6@jrmDI0HJrN#mseg_^.b\*Zd@P,Gj4AP#"eRHJYkM$BMiB'cj4=A
%+[<N_)*k0q"K3P9`E>^)*C*<Z,/j$5DfEI1C?1=W<r?4Mcb2I420N;Te1]:DZG7!or)Z5WCX>/!lDf>O:rMRC+(Lp,i.hpEBjQ1W
%5`bS`lE1k[4Eh-Em@Ass:HQP9/`kI$o5TPK\sQ;Y1D?Jc_8H%dI.e*2j239kqfI>_`ZI[eqiH@4#Q:nACcNn\K)q<7Ofo`JS(:cI
%QrI^X;4Kra>cu+t'>$7A)]A35G7?:qL]a$0E(_I?oAiEIHqHifFNH[X*lYY/2#Tp7W::AF7db#<:kW<qart3-PYnjs3[o),b74<M
%*g#7LFWkoHZ+_GcLg5uWKVt;O=h2mN7G5_0+[Csm?$6qR1#Mk1I=HK58A[dXgG_s0V\"7ra<(;aa>I@]",UJI98m.LcA"![9oQ:H
%_V*R`:\"*0L87&h224HgjNLSoePV*e2C01NLpE&@MaO41,4uG.raP0!"NjUaYeI@pVCbmLY_J!X6?;VZ>%Sg.nLuFS7A-]G;eFfb
%Y_83*#q=aO`\-l)F2'm.LKDqd=-D+_8IO:WkrdKh8;k>5Uf%Wn$IY)'`3Qi*K@,^Q%]?K3<<bP@OQbI<$3k<>];8Cu+PT(T<c0&-
%5G)I8^CQ.#''2`?l1=V]ILhUR8IO"Q&E/DuEed_g91VW<I?m\h%&%ps.T8?8Q5XZc70f2<UhbTRZYIFP4/rQ(;sGcrb@R:UPK%:n
%_\.U"B%f7CAUnF(F0;;;>`gO=8Rn;2=.iZ$"bW.^pQj9-.`0#%^?6u7@='B%K!1uU_d1AH`NKPQTM;WS3*sb$KIO@S;8t>:GjA$o
%+f?M(SF7K"IImJd4=*<5IM]UO\4M)Vh+jEg9$$=g1HAGQo3#,nPQ(Kl8GsXKm'g5+]FOIQ\L6W&K16-#HhiL8%`FpHNF4T>ViO^t
%o[dC*a_f;[^-bp7:aeR#FqUOHb.[9SA1"mu5i;I\NXjWc8]it@k[p`8-_IN.D'2Uhd7$C3+ce'D9'f,l[_Lqeh.L[u"n8$"N`-aC
%QeAiR0bV6O.u"90L;gBPau^hdE465\=fK!'3_,`oe7al@ffqC>R`2KOr.K_[,>%04oa<$L=?q(d5d>??4(3b:"!E:0I;h>lM]7jG
%VDts%*([fV9)&ro7<0A2g5^he\P.Fi)jAQ*P0"C[NuY91kj63bq2b0U4hhN@>9e1O=*SIo8C1LjV$SoSkW25gQ].P='bo<VFu3V&
%W,e#qP.7h7X-;\U\Bj:**eZC3(1Xe)&tA\J1r-'N21m00nl=/%T[S8q5:O!3T/!js8(VK*=[qc4jQ+=#QV*lnn#@iRWmf2-_7E13
%E%S\@]jq#*gg[B\9OQVZD^nA+1;/,[:;Ct1ZK.:H>UE`9*(T@q/H\X[/oUnK3Fpi\,#'t]1=G8P<Hi$4?pI9%JQXUX^8#IE0'2)6
%mOIfCa7l<C6)!%AHW'ia$mt'AQq$6LKD!-\r\4%1c&n'i^&*)L8IReCU#b+*2A]sV%YPMgPT1SMGOW]"S1CUY22deA!>;9D:llYG
%(`WciS9TG)*Tp\,b)FfK9("f!k`lmfc2KMrl2Sk&o>.3nk4e\!*<3perPRUnj*C+2_=2o$m/QG2eYh15BAq17-Y]FtM)O4Db!q&G
%5kO%$g2mCW,7dV)*8u)**kkIDD)+:0X;G-Fj\=G83Lp)).Q<9BOl)U^C>Ya[XQ6@X97/"IBmmE<5$/jJb`b9D0uNY:$j.UQNK>>O
%#dr)Hp\qam&HD-)rmUl:TE!)qs7,"H,F3B)o!ac;*,WLgTYPP)j"r'A?&E88;G*m.]gJJ5H^mTq2j@qt$,rYD%]mp)iPK=Z7+S/B
%2od**n[Vom^]Zke0&&au(ePluIYt(3Q[>2lWm5/e&0-DP;N@b4V3mFeZ:-?H[o>Z-dN)KLolqrOY+2I$%hU#]\tJ1mbgp&r-M54(
%".(HjIVAtKrelrJ>rqRPb<]?9eP%cQ>b!i*\`aP)9!E9/8%k%oHrPdo,/(P*M^e+F<gB3OB#KRCS?f7oH'"5:Db"59e.:VEV;Cpd
%;#3l:%HtCuXmol?#,K)1[&\.KMCKa3UU$[X.i;C\QsVnKVVWOj+6aQ:lY$W':[Q?$$f);)LIA8!T5#UN:*5o"PgqXNi,qK3O_9nc
%C6Fd;Y70#_ZL@j1"q%q%C98st<DNn:e)hX,[o)ljZ#e;^e=sg=p\A<k!VYk)<'?+D]L'a(&u_Jq#)U,Y+EkR0C3HH^YKdq2g\!u8
%9*\-b->*e1f$%*R@W#*s]m3%X59QO4,kanL$LtgW,0q&Ym]r6MZ"Jmo;/+uDSM7cFOgdt'Rc>>1C2p8j&:(A+=cC*^8>Vn2QJH*a
%C#4"WHG/D-6$3HIBha)5YCnos`:d45)(gSe)._AIkMX:Gg@fB7ntJ>amor:&;NWWCH@jQ+>e$Q[%Kkm6N;,[gd#uXX_=Vtu;2PZh
%i5Y!Z@7>u)W&acIAe;,I9#Ai;G?Yu^.gS*GTKr&sWK7f.Ka]R.MW&lVk5fB:6U`5o#5iJGDigNeR%iVLqZ;&RK[%<s2,+-=5-oX%
%%l+/$$eb7EFV3F,<X/lmk`@jBZ`=BYb(&^u>p;/MWl3LZ?rYXi0Uu=s4Jr"B:;!$\"jQQ]<I5D9Z0<N$+@btdgN09a\KcIm'g7cI
%Bf8"k$r8DkXCssGP`I$,%JkL<[8*3`gagSA[YQMB?9hmJa$[h_7MQ3Od!;@_D@$ZOb&G/uEit#)(<,Cj:a+.R[X^-01C8_GQ#rKu
%!Idk^p':T"oGrIP*]]3>CQSC+f['&`Villq9Iu$:5XaBu?&e2-<q4c%oK?GKfd#kX9H&N.))tI^CY59<=Mf]iC(Q:WO&KH#kJOXg
%)l$Cqoh*j?8?O+n:M!g##o3O%gB7T$)a;d4>Y[8SBXcG*$JI!]bOj#=-,EA$jL9_^ZoEi,?k*_OF?l5Q!/,`n7&H)Wijb>uZ@@@!
%s&AMaETk-n0cDh7OpJ2iiIi6rAG-)QbYWh9:7<!?';@EB9(d\N/EM)P61>PrC%2[j:WOphKhOngp3%U_@\P3n?;e;a+:"\c4Q<h@
%/VA&s<`M4+2K[eF][KFnVMRE'Z`!p=1SIP-Y!<3h@=Rh#J8r\c>WD%<*_ho&Nm#N*Nuqla%`e:=2&ne;*Cq<!2,N7f/1RrSiIm4/
%bR>[2@mEC)R8F<XWV`[Bp&iUCbYgpmU/&+[!fNqND`B<YKJZ.FV*M>S>61T&b7iVg8M0<&/DhBt4QW[716c([,Kj=4l2hDP<8g7o
%O8+a88&mR)/>U8*WX):AUhdmH8<,AdqfW,_S9!uF@;d";1!=9mrd;>EM`U1bm-q&a,=$i@.0#[_Km>"0LjnUa_to"\QBtWIK=@]A
%K>U/k9aGe3'#"Ve/$'8oN8-d3g58?/?R/mC@GY]JC*tT$A?:V;]NWP:JV*]/.P!2NORBhkblA%c9R%W:@!RCk;eujrY^fF=2cM0E
%!#0'<bN9DPAPd)qS[rJ72]%JD',B^*+OQ1UcQ='[I.F$KU@JBZXjS"^hFZ\0)QDm/jSFqOJ*U!&GMljDg[`63,uaEEcn0MdnBuEs
%@j!?SMX.o[71"/n?-%Ok=XgWYV/SarT-&bR/>OcAbYrgM*\qE*.h5cCR5+tM'Qhf7&F$.'.gONfp,U[4#)P#td&l"p4N5sFes7qP
%g!GXOE[J3C1R-(ZW_M4FlrSTT(7R-k(p$-B8IhGZ`=4st0R[+;A%8TGD^!ZW9;ElONA2`$+NIL-W!1jEUdZ"n\?IT$@`\-BLnfUQ
%,CEQh/#B>8bkPFdkA_6Q0j\s(BZe:#Zk5[RDqRg#r&EO*KDZK91kZdS1]e42X.5M<kUc616ST:3Q>=te.c:BJ"No&ogLBW!SB,6&
%E.kY2=$dH9RNfsnQBEdiU8W6Teq;31X*9Tu+o9BEafZQOZ^X$I4eSg#mJ0"LKb\2#!"o?gn\BD<UHd,CQ]6Q9cBgV9#l1$1#/$EU
%&!3NYQW6tOkFHOW:LP^"AKQ=LPUX2gYbZ^s#uN_ia53gK^.1mHq.<7,&0*73D!GKj<\e+cB+S_`a`U".l!Y3dgGM\,0>A5LV8=!+
%U/"#^coTF`J]Zq\\SoXOY@99Nft*$aG2(l3eV<N^^uMH.o$('?-WCutW\#]$m<Z'*OFG;ZMej,%#0-.n0p>1AGdD\01_L^CYfelG
%>XRrA'.9F>aCAfOZ4s0;nR[((%6"-/Z=unBmPJ0mo8cH?;N>+aj6_S\<FEl(":JEa2j<lNXF'mU%dLCPoA#B,h7f?]?jLCcatXi+
%XA-n"AmH[?JR(_N8gik55DBO#.U^JLZ=b"DYcT+U#G.F@0>f2@C@]Jo_F8!V4B<4;*!K,W/?qU^bk5eVTdg_%>*iN]Jn+E)IXLdn
%/ecVAbF\)V3IV:1<6]!BUahqibBQ$k]\>ED_"3p[L^((%qj:%Gr6%:9=]MulLk?IZ0=otbkR$kImE=3C8uCa$PlTFY[kQ&4Z4u4O
%QD:Vh0#QHjP9n`FIu<d3O5ZN[J<W>&(F=uE)Wb7oPGQZb6o8/LpM#j]@,$B*/$36lMrQa2PH`1WbH,/!_8(Uj]XUcR=2$R#[/c?H
%(I+.dr)PR!.ZWbFaWPFA<cGiNb2JB"2;.%-\KK?d%4P_X[Wmd]dW:6/(u1eZV<.Y5;3k5US(@NpoF`tt3NnS#_$gIZ$S#uGn9,]2
%%EWLF_8$tC/=.DfH9djCnQRs=)f%.O0$:sl&/qo@(t!^-l5g@)F('>81l)a0EMC.5P7=[W_JWAR34D/c'"@qroPgB;?HEHXEH*0+
%&m'5Gj?Z9QY&\iN8s33#P5I!#SK#4kQrFqP(&0(<_CQm%`_SbKi52+4CgT3:ChJ/)-=3KM-!rMf=9YidbY%O9PFe3if4E.ll$+i/
%D:dhKqTRZUls#Q:2:_np$GuM'-P=Z.YthSC1$CH"9u)KP1d:sjeW.J/7ggq1$XSoWSpM.V')M+$NZ[C.]0=O+2tXT(;(dYqZtk>t
%M)D=?,BFR'!MT'6O_b0J2=I5Fd?qdUH!-u=!!kHQhsP`9&o,o]&[0E-T&bFkfKS+mX<i@B&rI^1@FJm%r<7\c7`5*Ds.)?9+=09b
%lK'>2FPV0+fimKMY0-a"5)C=gn6<Sjr$5Mj5!93*@ho((J_O4(iZ&0#770o2=B=p4&+^X(dr7hrQ3D!X@%lLJ5ueVo0q[b)'f_X4
%_5:ST:FRLo#[)Ck8*\/O]^OAZMZHR_jNAr,\TEFN+Hm4rJ,&ALkqfg/3i.6T0^opfqf\L)/%8h453?ZRBCL'u,]3FA*?QY"Kjj0C
%S=*Q*p;>U6g:#>LJGXMJN6u^"!0r)_2U=YkU#S][s8.WUr7l/Mqp?^pmW@=s3:K:.;se`@\t&'KaFmVI8nX-9'ihC^2L%<7;#j@C
%cZ)oo88gp]o0C@kh+mkCjMu)b`<0qH&-4db'B_n3R#\>Xf7B-;Pe2q0qbiMrjP03iaK5"/SBHjk7afV6(_Z-uWlM*,.eT9$bM29M
%Jtl5mN+7)r\LcpJ%[#5\DYSUXB-(f!NbY*_1C*H_3=%g-;+JS$e9#8Ba?Zln[nm:3=FAC6#s]go7E>kTAJm+ZV0#<8k#?I*l>7D/
%7kkCG0Y[`O#`.t'8GCNcX<5MA6#V=kE>LFfE.d6?/J7!KZsHTbe@kQe8qMfqeIV--(MlbdA(7uECD/AR_!\(5Ir^2Uq00r'bD[WW
%3"]AVkYr.bi%bu@Od67B,[;]3Rd!u`6=W""M`K.3'hZe4"-8n@C0R4#7E-rHKaA=6a`u5,qF0lrr">G9/jhUEG<`H4Ol-7,FYFlI
%*&86A-h%AG)QDR&WUYf?Fen.NZN7>R*)P=_*%EFHpoUuhrX`QQB,H$6qX30m>9CF?4OoSB)Q(E]r.-+hj^F0qV=5%ZAHdhlb)00i
%FQ5'0YPhZi-?U%CZ>mI0o8g%uUlAc\d6C0/_#:X!BK("cE#FJYaiHta(*)YUUJ'=TDVkYb'^d\K<I&hj<k9>Fb!]XmU9)Sn)huOZ
%3UIOF0X/L1"7-66`le06A-1@5qr/,^ilb#>FSdN>aEdcph6Gi=,d37@Xs0Z2V3f675l\\SK6d.ENJPqY'+]/)e*kV1>o'VerD^H/
%gLJ0i/h!a[qgU-d^-QuB)C68ln*lT3&fS4K@]O)Rl]9e%"4]VQcM4VnH34K(Smd4S%LAG.6Rd^-l$^JrW(Pf/UOe8B2?oPpfR8+c
%hoCSO-UEn'XH7?@-n*e8&0X3B][M!+qT=Ak)1FLkN'+h"/,@["[)G/L-1X41Zfoi9<9W=ELjIYQ=qK)J,/FG5oXDYS8qT-G(>bl<
%Ng;b_-:=i>3!fiJ-B31_N`0ml6R/:lNLC<gC"\WO[/=^#$)"f1#UW)o$0TLloY<Ri]ZoK0]Y]>tdY-J(.VqRh'd2Qg7Jr-S'o5YQ
%g`.[`Q"f5o#qhfaRP>u/;,mfs_$JcmL*VRGH3dC<J@:[nB2uT8%#iQ^7Q+'n52b:nHR'[]_m(pVX-I&lY:`bn'u(SfB^ff-r(%WU
%R,5U;ZA@T%.?I(dL/u`!@#TVJiWOJAX_VN7]H\ld5d658g:\FH-=4@h/$%J)^D5g/Pe0hIGLG45*i1-G`4$o1+>TL,nFSY^.Ften
%%[c+`(?=60f\gJ)4Mr:0c1uTm1W`Sckpu(RW^B\N]qdH3NUP4t%#-=5G]YhiDdeZgkR5^*IFdGHAb`:539g$nb&5"r^l2d5!,StD
%`t6sg>F4Ela$O)=1^_njE"H"7NH4_fVID!QM]ieQc.OZ;*&.$9E?WPP4V?G>V3/j/f$k*"APrWJi1S79T3Q1+_/Hl_ZuFtYa=)up
%T@LhJ5)RsWa"%cd2/>?h\)WSDm;H2RXHa%(qGC?j#X<c/"ONB))"qtiE8bm:nqodu@p%*)o*bF!B\kKQnDRMt2X=?t.TWgi?hc3l
%m@[X9F7V1CS*C@SiA;@>Cl?_m7S&7]7#@&k.]Bq5,%KCrgXM52E=PMb/1W_j#718teEo-l&lDlZ8`=ALil=Yh.M7p6OPBJ=9b)iu
%!*._>.,mLX4Sq]Dj%'RFE^:8mZ8ntAE7d'mkEk?ieH<4f*ftbF\JM7!Lqft<Q@qp8CMls!3;IV$T88:7eQ+G$*r#\)0&,Fq9IM'[
%oN[%i@0GT(;1VV9V"aQHK?LRrYQ*eUD^<,6man)0k<[i!\!Bb=(q(_R)f?E:TgJiaH48!3[5l=.K1/N/I2rnt2OcLd4R(0g$(1Y[
%==l4MiQplCcBt;Y1,Una9=[HJ"NoK=4I__thjpcTji8#YQ%ic1)'Ji6?YUuP/64>3V'q1YXLeK,04.1@[17';WV;\\'jm5!(!@rn
%Gqm%%2)3G"hsCh[LG<We"`^mXK'g&=Zs9=GM'WH<lNPfaW?ZrJc5u5AF_!UTX"IHO!e!fR=/4h[!KlX@j<sT&kSOnhSHCV>#=5pX
%!#A'&mg[agccDX<3&etRft2O1@jg[=WcWE-:F"4:21*/SZe/>$%_D8ZoeMc"Xnh5^8t+Fu-(uuJ(_lgSP7sq,\Who3@@IXlWFVX:
%)2T=Yh?O*T#7,MlI(l+H^ISBqT7NCM6XG+'!_coElBeANkgP49I!eo9MS:=V<p'>IkX9n,k",*SMJA>C$-l[M'O-'ZY?s4H9+L6\
%+(03i4$Zmt!gNe]E&!Ih8CaoLKZ:@c_e%Fq*TZ#'n_1Imn8X?!4LW!mFb3@$H)!Pmn].;$T%cn>B%SA+/`rSPFpSXSej44+&Gl.k
%;t)'Hhsp"pM2XkS&u]/t-W0K:'0?qA=9A`&B2(Kh5]oI+\jrWG_u)5Crt+,neOaS[KKDc>Fo$`cS`n5#E[)$hArDd[)kcQXgN.gL
%WD6u?j0E3N2J65k03&A&<caE3=e:c'PK_tXEh!8DC0F[To5Z[LI$r[k3(H-F2sQ4BL!`e*C6lXZ7no@,X@c.rRC;;t"s#FRQr;"d
%b;?$H\,/51M=3)/DpDm=J5#3:*JX"!_na=M,hTa@e:);KZ[Z]McTV!:ACK+1]iAT+#I%A'HO4+r&k_uU&m&rN:amZ!i[h!+8#IV<
%<ZsTk?^a49me?C[Oln#niE3t2"&%aaciIQ,a&rh-[.V(D_N2l\]sG'Iam=aaIM!N%I6Fd^R>S-F>0Cn,cupD0I5V9'e#!,S4+.QN
%n"A4Cp2,-_A[eR3#Tt35[OM8\ULH<;T,O-m:V.Z#>PYuno$PWts3/sHg"BkV#[!UV(`m8:!lnW,r0<DJ%K/rfKu\Qhf@KspTM?9C
%5Y-&M?8b2l4R1&<5Zp5ZWah0A(2Lq:QjV;gBs_m?L2uH_2@s,BZ+@_MqHM"#bS8`BDH2Q$Q4haea%S00gl8n($mU_XA,DDg/@Csq
%Lj*Z8lR0qJ2lt*7Ts`S?/n.ZMCiY$I?,YRWg'aUeaa!R509NCk]Rl_l2.t=\?+]P1";scaq`(goDnA/%L^%Qq"L"$WBep5[Vq;p&
%".]2$K-opa4sRLMYK]$uJ`-@0l_ebGkDo@sQflEaF^h)+/Uom$`W/Y=Z%M<\._'tO=Wi.ekKPtVeE-&MC7&r:qV*$#,onDpYf2Wi
%oXEsq@PT,%1Wg4S$Z,2g%1\B4^"Q:&Xjb[r]2B9*Rh?Ino![TsI]-ShjM%A;_=P_EOaI=rBFQ!SGBI8g30\%s=S/\IgXesVq0h6c
%WM6OiZluLDgFe8_O^=u-O(kE#L%JoZr#`D,&c2[pS$>1oY:#4%^Mar-dPEf(rBmlo0rZRU`jtL2.40:P3_phYNCgr$'L"mV@hh2h
%leC5RD5=0c-^*ptbQSXl@F!DPbDtOa%^/.s+08tn9i'W8&?BAS'M25n<g/qtduhYk7&KQS6Rf0S3"u\ZlFigmW_+4VJ'_u;f+L&$
%O/J!?OEhH.Drk:K_eD2S:LDbrHEh4p5F`FVa8gd\As9jbLR?rkY;Q]1;M*#f\Cp1(r9`E>0l,XZDkW(F4SeV]5aY=e07R8JlQRU5
%D]5e+P=Y5<#N>;5ns``(H2f8m8b0f9H$i=3Id+)$7$^Qp2U)WZ[jsS`P]jX%cUUJhH\s[#0D*ko\,:@W@B$_*hq8t`h::b!R,@O7
%`g?JT?B3"[(4Rtu#G$(50+'9bL,.TJ2B([b3+(h8+o^"E_1XFii/9E$/Tq,[lnBU=-[p`__,9lhAYi[X\7/Wr[tm'j#T6<CF(ENg
%E,4tR6hqr>Y_K(^'?#h)dYXcI$G0:*K@4>6f;P'+e<@Yn`.kQkfZuY5.Eb(e(RCS8P$+]p>,4tXQ<ku\nV0K?K9o4d5l*(SmKEc]
%79Zddig^"ca3@#hlRLK`l\;2YGjjh!j-%qQ'K/&T\_g1*&ub#2J%Rf'P>MFIQ!-U<0n9Q&Lp&Nc8s6$aIO5'Pbe&%+dX8WT"psJ[
%IP1_<FWMq`]"NoLkOmAS59C-G5\`$G24.c`C=smSXQ=b#d'oH_LP<h]%"VlE<3jX?AI9+7]VL1;eAE9jKLe-h$JJs"qNs^S>!$nc
%b-BW!]\cBgW+nAG>D!)'^XZ;WA?%S^7RG=m@R$e0!$M.q2_l\I9I59\+DK2AhPU,.Pt2"O"<(ShN48HS0[2O:MO!K]dOA9$qhJ24
%@@<74Q\E:B(!V:Z(72p41t)rcCAFA,P;>X2*?(H-"O/'/0N37t&t/M-!CWtMWm=7!9&_*nOIJI1XQa72W^ROSBNsl*B<aITk^Nn=
%.ZL;b=GU^RWbP^h-NtY=.1@03CXaScH*.8.N+=\W(5#GTlL4`/eU0+X0C+6,`AMElb&1Tj!@Il81O45?p-im8igGR_-]sJ%dWXPM
%KF.nI\6(HRUm"Uk!Ds,(:XUE6$71h08;F+h=l^'$BoL-HbS:WJ_t6Yp8KH<u0e(,*C5*jWq[k+b->&pFjW7-L)n/?"f5&a&!%g'd
%V`RN0FBV(&R5$jlg.?CuV,!Hs:aEo(6j=i0RR36&;Pq%B=]$&_j#n68#*28l6(W]bkk:?sH"#+pV(aN(D69_S/1H&$mW-=a:mL$l
%UqbGrVV-Re6CT:5^)2Z(&Rf+&C2m8=hbW@mK74l]Za/hoWWF4n]E/8g13MLhRBA5Tl.a;/56>ab1:QM1Aq`A&!e?YA5c+RX40jW=
%PfBdd,Y)9##=J_=6=bQKUd^!j@U4SQ]EcU]aWZ6]76iIM>>0_fJiG.!Pd,Cg7i!+]-II1hL"['!#fk@)9cg/<P$?bt7QI!&)2\;"
%7-_kZ?k<=cT[kNK[GhZe8P5j192]m-M56qRQGfO<Q:1*aFZ<2i^^VM5c+SDe-HdN4jign<::)9apR`<Lj0M>Xa!GSH/b_UrNjM&,
%2)$bFU+6LCP4+T6j\-dahVh>;KiQPFq/URWju$!liY*REent"U!TNAL9*5L#<3sl2-Y8SNV\arOOQL/;(0hPIcUED7ogp#D.3;"d
%0RO`_QfM%X"@U*65-%mFmpHJ]$MY4S-eTOC2F*Y%$A>*.$4)\1%4.&>qX`\c2P.Z4H4PcV":o(WD07bJ#Jp`0174!PVR4f+Tk@RS
%*Jt.QC@9L]H[8&:r\P?2l`28.Dt%]-I_q=tm-(Us9Jf+Mn?Q<\s"X4"8Wr+;PNE3u%sJ,$KciX2(e5$Vr/9VqVOc1>J"(neLM#rq
%eP`^^9u9IHnMj<Eb3W$5me.\*K'r:.?7>p&Yao)Dm!\EE@!tu2KDM4q8!l2VoZhQFaiUpUYYC+*?6NTR57pKu5Hh&;NdKU0dh[Wa
%jUY5i5pB34MC:9[K!V?e%^Nq8#[N>M[a.Sd>X]0;[AN7`Dc*\.msKK'fhe*`UT0Q!&3ggc90/\`ZOO[`DY6Md',<hLoQ@e;dLL0/
%HO!M;E4sG>@]N`t\_kEq3W+97SX0j/H]41I*$pnt]:)"A0;:CT.?CBHiZE6Lb542-/Dg:AH5P1>FRA?Ojp*!Q4[3<1Mj>DRd.@*%
%G^d(!nVWH7359hHoq2aAC@f-W$UQZq?^-&$oBV/:Ut3'<a3Vq&0TrHCRVDp$2;]'F%rg@`[p[WBlVk2E;d1H"7&+Jt5\S%3I29q%
%]G7&38aTZOp(FR<,O/\*'oBA`cG\%_X8]>Uc@fBYi[LYPp"9Eiq8'E8fI6s?eF[Q*#Ka+HZ0<6I3h0ROVP@m5!LGmk>iuF!>EJ/:
%Adr:"Yslt#JS*(>j51S4,+MHn@]"=+a3sle=27]V8r0oX+c[olc23S\D'.jK%Tr^0%T8MhaA:Yc*+'-fTpQO57>Drh[S76Peb%$b
%d1P`5g^"ILSa5rs0/kQ!:Df@k:PdAhUSuEM*qY"0[OQE$j4X699@_47g>(Yk;r,GMEDDP994]7)"o*,0Wc"6aqY.h,\nt*D4ianS
%GZT6@T&WQ3$WI?n#C]SjhMJX>AcX+dR#jMULF,H*!hk[GdH!UK+1=`+V*"ZjZo"%=&IE]`)aT]_^MP)ZUea3l-%Y*p;Ri46A,NaP
%gtLJID@lEVITUfQFQ5hnJINWBR`<NO'GPTR&#3$N"N.>SAUW!1Y_n#=)cb7#"^PJ0=a^=[8eT!pMbQfF2i^=bP.RB$mEH1%>>IU"
%f%WgKL$Q`e/6a1:Jn6#n5NjrYDE$7#h^E&7YY_:O7KKl.C:@/E1+cfWcrJSeW;LbdJ71UKGV27pWnY_90m]W.r]'AlN#G-&gNAm'
%f3o9(O0Z"ka'si^C&;Q*=^"9leT68f6L-D,)6U-?9)U=+]*<6Z:J@gAepmgI]i[LuU1[r"jG*"eQkWOTQ_X-,cECpG^Eu_QJFpqM
%.,j%WKnl#sL7qh9:kIoB0baXlZ,Ml;U[gj&jN@dX9ff;nXF$fUUSqe\`6iLqXC=7KRj%a8::'1D0#")s5(,25^t\i4IpXJ:DSRZS
%XOg6M#u4t5lG-NDLZ#YB<C*aG4!^)EoNo"*gbVonVtl!G<_a/\oFYP7TJV!"\YCQ:99<l-dWte)[CD`mYeKJW?BO$[a+g<``.K[!
%Pe<lBo]t26R2c^Q"52)k'/mn!n=^T9*\6c`dVmLB(d/@\.G;=++UJDM\fS9(9FBUZ4%;fX*TXil[^J/ue<#o^;ER&fK"'Df?3;K;
%^J`I7V(KCr''W6'679?B/V6JDs%PG*^X]-mLqUqX;Ps4B69+gH;nGj*!+*QTGAZc7X"7l3U[RSFn]M2DZPj(Z6cN!l0NIl5qqY#;
%XeWCY[EI]dXsb^ue`gdsmJQOkXM_u=nX@MSJ`-k/c(mcDomMs#W`7k^WGoEjDIL5:AHGf)Iu`(!ma]a:opX7jARE*l0\@cYbm6nK
%j!of7K!^IOdik"MEM4lIAK_('9\<aC]e[%h84ohmR\E?,hb^f6=o\=Ur!\oDWhfB(g@5o>43`gOQ_H_5C_!d/ort2@fqgh\8kk$1
%Bne**pJ_M>)=Ghoga36"4m]g$XoXAAQ?Ho$&Y=q4a59>k>baV]Z'YFVjtCsR,_F+jgu,*)?@-Ll2aQS;mN%]@DrfVcp_@GQo4W/Z
%b`LEC8noaJ<_uDl3I+dea78-`VOjr]4$j.[fk%7PX]e[9qQJd7ApcGN>mt<%=AIoZ;(Ef'bojK^)44u8_NIRT)k81.AtXT9,BjVL
%KgSSjHogLYMqi1:QKAILg<D6@-[E(5j&X`q-s$Dp8RZ[u-dE6$@tn`J?`2s*BR0gfm<B^>iVKFefGte?*I"?L>`.o5GWO8(/(2(j
%:m!8W.*2)#h)#qICS#79ISf\J=tUGnl+YsC#S4.HnZJ<oFZ>>m/0u&NVSimq1B!'9RcX@L<sl`sH@pK,\"GIn;b`$(coafamT#Ee
%m@M+S$[YXl09BJ=#Pr<'h(4k<@OuUek2(D[7M2X6jV"s_e`4F#>adEm8NCR,YD7K<G#.oQX$%HXh5lJ'<5L.9#"^[WX*t5aS)]+L
%LdGPYEYe<%fh]Pp5;'V"6Y*sVq4f=2Y3IPCNG)FiD*d!5#.66D[7[9cN4i.p.u9&(fUY&gPiIlD=+o&#hN%Dl`J,9Kdb&3",8E#2
%&.D!>),-E1dC%jY;cV,B=o)$<jZ`$&6q)5^*9K;O:U?>o6509'V-kl\Q.t])3fDV\/-lh,P4:A=Zi?t3(pW]fo=_3K*a4&\N\!)J
%TQW9a4**jUd[,eCrD*W'a\TXS3*33p9#I=25M,(Ap"KRA1oeBEN1P<ZV3Ha%\p>]>fEiON.W/>!l^=o-QC5H%^lV6J1>I4@+!FmY
%6uVNt3R2%^`espK#Yp-3Nr6K[Nd%;*(P6sK)=("?b@@;)m+X!kOR,L"VEXY),[Hr%e8-6;d@i50+B8j44Hjka?A"396oL/AK]Cn.
%;:J:P05IS3d[r$cgbP;o8.?]2(\o.ELf"*OAN^0E3pq6E,^Y8iSh$mq8sI`#a6"]U.J9/7726.DcU\Vk</*r%+XMdS?pT+YF%*)%
%j2,(O5GGK9*58&-G/qO`gI*f8As)YCZH/h<Ct`A/FQGbW:0irSftuXt/9Y<ccrk*<QJ_q8ek\jN=HME@/5B,O?$8BE>4NVsVq1H!
%TqXLG..CKlXJI&GJt.<0c*(-#<QCI>Te6HZ`(CX&HK,6&%^g1Q(J<*kN=e<::$II0pnOgo\8orZ+M!H9Rk$Rj`&k'\a@KY%"JcF-
%45k80F$"4Vj6$c$o@oA\6TUIJj8+9_p9g[*CZ^&=2Cm5>>o?eANKA[K7kc!Yk+V;2=`P#u6Nfgar(cDDB:Akp])o7:nb]]MMT(/H
%2-A9Ee%%R`.g1cT>P>b'3D.0]]N;aaKsXoBk93"`gZY;+^lO0Mfht>9dts"iSi^L>CriT1P,HUicFK]BI>("D]:p<4IrM0-hWN7"
%nknBfXb<0&Q.[f`pb!_g4mY7><Hk&J_\GQVj>)AU*87K%TKL>8!"8"DpKhshTtV1TL-4:XcD8JF-NpVo;KT!lY"iM=G?Y0[mqY\*
%r7if4LWT45FR'gVM=HKL]\2mSo\uB03'jEBOe5/L0I)FLI/i9B6MmE<bD^*1g3\.jKtEUjXeR=sNa;q23".B[*gH>[\W@IpBC;pj
%Yca9pj*)`("'L6gT)Z^7j<7NbAUspu$-D]9fC?!!chR?(D%VB&dfH8r]7SP+?Z@+iKe0L.:!1p]9N:;)dN!8IQ.#0Odbp_ERAU:J
%;QM4jR<VjjRhZU^`elb/'Ee-J'Dn[UVKb(BZQ-"Df.e?s^6'\-@B'n7[O=H:Ht9f7]L.td03I'55>BB9\r!0<"$'or47u41fea_h
%l]F_T3q@A]O!*?j?/mkS5D\!7AKMr/#Tj\sEl#lih\93SoFrEF(>EE85G4.NO?:O3INWh+'C>%),^4Ad;l9<c_CY6d,Kf]&5.Mp3
%<4sgro>uKCZ;C!R$O"Eo;2A9cX[`!HRCHKnoeqa`^[0-"=*d0]aDasO9J.=2MPZjrFTpOqi`h)06>flrjFI%d.m.%ST4<nEH.W2n
%(N=Lh@BOFh,$<f>.fCj+6Ga_HZ'!P+<hYZ'hQ1&rIMg0H=][kL.lU!rn=GFZk(nJ:.O04QEqRD.W+Jt5:F"$_k+m$kb,,&KS>4pc
%quZpOM:uQFrdrLtS3Wqdeg3O)gN6GePcV5u]jK"ZnR?tIl#$Ae>T:;Zrb,K,mcaL+T_6l(8FSZS<dLf3&3X<3kVb_somn6+AK2..
%6EGd5^Eh.ak7.B@'nc&0-f(`g9$dt#R,R9dS<>J?ELbLlZ+StHBe,+?S(:3D&#'^b`mg`YIj.g:rT>d!UX[h*8YB&GXljYjml#sO
%W^KOIaWTV!^NJi]!8N$Z_rZE#nt8tDnS`%*N*I%;bUBKgEjH;G[;l/[#02iJ8\!Kqb);A%">W;6eD*<e@P)@k#h(4T"N"`0,Dc-d
%L@l6F+84I8q>A2LjMpn$IhR;h;4X:DeRsd.h)tpN&4M$EoWG+l#/8C=T/5Q#RQ2`aBG:tO2b1se+2ib2"Jo9V/bS(CJnaU+/YPp)
%9RR=#*%>d6T"kU)X_9UEWN%aDM1,V8>=GbnN`C24Q/[qCg5:<:S@$7%U%1\sUa*kZJi&MA<ul!?+gagn-u:.Nlki#j\dmJ%E5`IE
%OL$9E;ud&6;9`Td-(IkD>O"ba?3k3+lV=fq*=7V-jiW"^*3RA$ILT7!F$!p]]Ej`pR@)*:b@U1b[CN@rG++9;"'oMK=8;H(a!sk_
%AW*QF+X9XEPTha'qWU[5*>9+\s2!T:mLe&Q7B^A03)VWI_tf<<M(O"M2`=\s4G]XfEX];HfiSIXM!0!NUiI@&[Wg#M#H:`<iE6*O
%@HZNhPlbI8Tji1FYE-iNcjLP%fS.eR=k`f^?_A>G2(,@JS<;l\+]5&_re@(b-dccO-#HCX`01B(g.o'7*<^!"gY<Zf<RsI[/28;\
%eO7R'7T)t,Fa+KL7p^YIVdFRGXGK@lOf?70D%!MP`4te'E)k(-d+KmGe*0ubEYRUO48UE#qT9@LZ_].'FBURkb]#2Ze>-$JOe2!L
%K/[&lFN+,t@^J-EVe!]U6]so,*FI\SVO>\+hR`_bo/C^$W"k^)V8pntoWId@#=WTX\Zg7f=7Nb\^)V7<]LD.F7(*t"?3=1"D"D'e
%ZebK%$jiBPTTmn>dTpVRr.k?BN)Cq7X`Z&&b\?1Xk3b+kKHCtH9RohOL0=M\PLlc*,6$;3MMi!b=^k:KrbH*/m+uqe!I6<RDO$1?
%AVii=8okQi=q;6Bh6dmKSi,l;e:Hgp?40T5Pmrf(Sd=3Fd4Wc#_ZuS]T?A+M1J'D[WsBad:B0.gg6VnH`L$<.>eUVP5pMktT1E#P
%E4Ygk[2>0hVdd@^l14[2h7X4<_b`X`gCDka\a,GnF-0bB\(O=#-m1fZLDfbP`9lKdEOpTB2O)@d;f&\_ZDEemKAB.(?=mlu3"'fR
%@@_-]'$83f:hD[grc6%hn.FWd"^Wu=rTAutqT6^Zq&6c@l[!dhm5CThk&H,?)^:"d$*n@d?UVn?'+6Y/ZdN"PNT:a3S"olseLg";
%]^A06Lf++qVt"rV*h(#RSM9VXgF<]>QIZ,n`7FOnbQcUX8uQ-UW2f\1Gu4saaS%UC;S945VLWWTAsOPIeJR[NCIB>2;d-!YMK-MV
%apgcjY;iTJZm_7u)5PfdG!:Z(654;P&lWgr$f@c)[uo]k-C(q5aO?mtX5(d$0usW?.9YW8K?Nft^[[r\EO$jdp0&WB3"`4(!h;T;
%._NgYo>'*Ll^DId-'I<%H?r-/qPKq;[0\36alBJM70eYdW.Z/#g$0VU4n_pnmn=&4lUBD7>p?EHM*ekVO52U%7I;W+@X*9d6oY?Z
%^7pnKq12Bef*S1++!Gh+FUSeIQ#-Z*DhFud$$!Q`>+ug/OS-\O^?^N,nSg6`ql/D9A)hTYCEFmK"uqj?pS]="Ur-dp`ZdDYooX",
%I]ij]HA@8G"&\hTiR(obpKIZ/9'_==66YEsbI=[TaVcQ'<[lpGN;0WX.6_fX.?[(2A:uU9;Td`k(T"A5b_:7g<ar9uQYV4?KuVaW
%"r.#4!pr6:HW;\kf;KgFf`SYP+:--B47tK]5J0l7Zs0V8C(jQ20Q%Yb;EEKkfE*ZE:<c[%.KcIT[j0r'g>is?>+J@qOfm3M9"K+A
%&2I!uf'!=4b*T'CFQj_Q_?B?u8TfnT)QFYYf?'pJBta2(S;>hX%pN('mSo#*]]aBso"V>`MdWXIYpj#kTnu"g^+EWk@Rdt'Rp+!g
%he%^%n&SH9_QO,0@p>$N#Q1uF,g*].PB0rbo+D>AS^!_nB32mqVZk<Q<HU9bP`qZX8P+Th%<<D9<X#e4`/1PI#qTLsOUdG`beH!!
%K7]t!Z1G``I9g*'a3V9j<T8@1Gud9)Pdn7t9'prBF_+%sKBf=!k6(+9a0f5M1op;MBF/tTfW+bUP3i&T/HdX'9l!o7[X?QUL,hGt
%0`CP1%/i4/.LrRd";46O@^PP$CXb5RRVAi_5q^"%9]jCm._Q#IH7CGB&eT1k.r,4fRL2XAe=b80DLC!-Crf>YJgb1*m6\bd6u]_]
%#H-7oE=d#c7uhQ5b#Q@8cJ*QkMEWbK]'GoMFVIWVON?>I0JqqJ]-^agQ?PSWXip))S^?qP2Ro<6^b;&!Qop9B,;p.EouL(QS32([
%T5XQ"U\f'A>0Tj`6iV9`]1#-71"k.`J,.mn5e.)fD@mlW@oa>W=-Z*I$CXl,:L!+K_fWG8r[@L![8KYm*sq]![8T;l4;NV-Ef.49
%]@]30Z0e<rr3],PJ?QrOEd<ki?E&Ggi[.a:Aj,Jh5rN!P@S9Nqfd&DlVT2i:1"7Jnc-FaYiCc`Q7Ah#Wph'k$DZjV=4H[d9@lK2^
%!6/&^GEB?JRD`m#YTQoc2'SFKk_Rp;I_54'/K!YmM"rS?c+g1c4=prm?(U\.7hpY#NE4AZ9V6]62:t]Xqc9YTWorQS4,G:q?-qqD
%mSpJ(pUi"F*)$D(]MO;=i+.8m])%Z^rVU*R)8d,9IQs)fS_*%;QDCl*Xtg_e8hD4#Ia8l-Gj%5kM+%uG!)QBR*Tm5g3qQpB5,)T6
%<7YVBdN+qI,E).r'u0\\HV#>J_=1'hT2ZZ+BMj'/C`hJ2]ULG,neua@ThG''/(,XlFClr)BAODckKcM-U,YW@@>R!1E$BI0F<O:*
%XbufNn^iOrejRZYK`^KjSsQk-:?2rM+Ajpr`!QZSTe[`U-cEE(.o_n?2Xh!P,hb[&hTb[]R+nB,K;gu3oCEHa;ek':G`Xb'r;poX
%_/rh4JOA*#3DprTP0tSYi;n)ZMfiDITk[Dhn,^#Wr%ICBd=(k&Jd6Ke.bC?`Din8#V6AoXb3P7mTU"%8kl;nR`JPj"W>d:i#PiVk
%cc`Cs'eUahmL\Om71jQ.qV)O=Q27*:MaSanUeV06.?/oAeL`/%!WEo2LQTTLWo_Y:*,L*cQ?@)HZSo`:ns7TtIk4\#58/^9cte&'
%U.56ZVV86Rk<f5:3Wr9'3q1i%o-a\?Dj.Pu792`\[LdZ*eI":93MP*H097nfE36&EG)S5Lh[<6C5lY)Y57Y-Z+hVYPU<"4Q,5,B=
%mRWL(8rQ'</N/JtjJj4qXZECS2(6/d#;BB'>oS)H1([H=^$53,iKJ!;`M/gk=pAm8Qn'.hC'_CLAEZR^OAkOBC,gf+RRSKa8dsN%
%[f/Vd9iQ=]m$3=#f>4kFa:AWG_eW$*hUP1ZVm>J`2M+Sj>E%s47A#uo&7fDjS+9WFhH^q(/&1%BS#rm*e)qE#Y^j@$If8F7K_kC$
%ORM!>^H(l6&91NuCu0GH.nYn`])oAP<GbWZ8)?O1GYc[GBfMjc=ooFjVI-qT)CHOhdF/]14H%14Kg)u[4YtS%`eTf0$-'^57sLm,
%C-o$f09ho1["^-B$,*[!=/`Ye'TZ=oBtNFa_Q,"$'.<Dj>3dY8;%oF.!.WsF`jSsuo:S86+=qn\S\+1jSa+?bp&7:ujbUo0@hV)"
%.h;P22-X(USG4Op[%H$4'ft)*7bsL-'E6:jX<LHVK5,<oG6aaec4lrm[J?dMpu7?#Q\>1fr<'W`hR%@Pm`5nucF5e^'h'af</H[8
%#CDQL@H4j^"T<N-21DHsdc<4C58!I4hh)RG+8S)DUT3ft)t3`^X/\8Qa&T\r6=;h&Z>FJ_]iR*]&>F";>j(fMlI_A$?:R!3%qN]Y
%=?'43ni*Hb;XDmFX,oZ]T_q.E\6WU=UTX:E.Xbn=Uup\o$+frfjmB(YkB@334NitU^K5N^%_ft?CGJ"fB:Id^mm5VINb'd^0h6'.
%D449SVo8PUa$eXI2VMgu^au0j+EqJ6!'.pW-m/#k9X*XHB9h!?&0e,3M_YId+WXG:TQ4%4;.4WiSUT*srsk_5@<.W`_*ig2S>&^"
%d?p1[KLGD/>7W_iV-<!FGN_rRg%-"K:Lce'5SLmD%AYXSS(RVDl0uu*4*c5;8*N(l\).d0b])?NdhrX`Q$\8ID(R7TS?3]7T,62p
%g&H<gC,S$<_t/;,IW-\`X%(n7rPeXKdDu!o5UW:5?`/r'O(=uuB,S-#n#'bAF^e^UlZdZGC0%C!KPC#$HmF-8NV4n7JJ9t(lUYcV
%PcR&a9aG2;T1`(5"*5g=b/G]_-*.mVO)&JQDt2L07]CDj]?)J#lH`1;PUP=n2p'17p%@"QY-8Oeh<;k%ro1U9Ss7$*Vgc)!OnciW
%hYP;M5?mX+3)J?dNLmMmII-*Rf@psMf2p2o`(9A=X;?$9-r$1J9MbPiXfG+]RR+WQ<MsUf'fjK9'Ve7LZmj%=*sQ6J.Yj'J15;%A
%S0n4pC8e-aHB)2ZG4`jBk;<X4I)B.UnhS^1ln7AiBmZ$#]@,+*qBM!cbj*$\0@rUKY;XFVJagiM$]Qn2GL4Am_<O"RT)2ud!;RCK
%)[?;9f)(6-,NsfNZ7I1ZZHhLJDTYMjn8+W:$V.),lmm,"5RR@:Z1We,;<*R3W-jj\`#mHjNf[7BQ&UX%_sHd.(.H&JSF^U%U??[+
%YBDMbS?l2?0n@e#K&j^W-%D)o]WGnEo]BF?H1p[5Z%bjt`]6aHeckuUi^q#!q)cS[4U<s;b9Lt1ao1Hbr)TT.OV3t7%t+>rd:fUl
%(dPKOWA<,T8TBbHo2A)<k3JF*W-_luA@+G\iAq1n!gq.LBZFCW,quZ+#pi?W4-cFfW<I'30dkh='YJb"DC=oGN_P]j+(m(n7S8:#
%1IO!;W)Wg?SI8X$M6QpOC@kQ,?8m+B=Rp:XMDAKS1]%S$0Tjt&N9WO2'otPj[UFGsW*M;pAeakKm=kA(Y)p#1gFH^Np5m=t)7rYY
%Jqc`9c8.ljGV+g>.oku01_B^F^6s<)R8\_$iSa+&6)qqJhaD!.o"%n#_Z#e/D]@"i*hm*Kfsg=($\boh^V\O*N@_L"e>a"-5t$+l
%F0iajQ,Q)K68:#r.U`OuSeEs4m*D/q%$ugUfsn0j<8aim_e/X#%thGg`mJP&'dH!4SR)*7;#Gj)NE]4o9_iK<Nhq"^.`%uX?qM!m
%4&Z=2HU7EK]I>EdSp7jFNOJB+X$Afkg:3ECoF-G$/]%R2fs2h/*Dd+!-jU\NocX*QB2NF:,>t19qMpN/Fg!Go/J+"I5P])6[X>hA
%P;'H\JJ9t<Cu%@N)1R)/_eTtMZm@"4722M+ZFY2p#0<@MG0g0T[`W!)F5W0lThK=dChHB),?h^*Zsa\VR![VrpaB#:9/-WeI%]LX
%K#A<(^3EFp^GV*l8+1ha;cT3_7>#6e%j^T<Z/*Krh1`U*ncrlC!A[g1$eh=,eS[YX%R7"M*Ae#<.ON87S]f([:;?K76VI'(gFMCV
%9_i7`gcRE^B6QaO*<#TZ4!FDVX.K2j_hWWB`1u))"FdL7=g,_315L,LW):(;^#^ui6?3]TARI]>U9rc3k3%r,h#47X7Csiu&Z,9(
%-cV$FY4;XWbVd.B5;7Wh(V2EI:=uag*"Y(@OZXXbC:ka86`9`dO,c*V;_CI!p!!t>[e<*Pl:PlXVMaDo*7Z`+kJq_C'sdj;meAb<
%00U#Je&,26$>s_S>34UYeAY;ha5]1d!d>fNZmo:k.M=hd&^_8a=*03L#^jXV74"JfT2'<>=*Vj3-TSC&[F-Y6jh7Qu]9L[d[.EDN
%W"kfdrVhg,N4[)rYC66Yq_g%OMJ0]dcY5E5cWPFgO7qm],aA3eCCeIOh_Vn3e>7Us!@fX;I-t/fMUAqVoiY*#"1bV=.hB#=>)'d*
%kbr?1.0u^^\M\-<+!Vat.g20p(rV^daC[6_#EblpjpJPb1D.k]0D'DjCC@OqU\:cn@37dg!'W>#0`kK&qq2-Ap#Ar@B<Q+c/_09W
%4V\MLl"BSkZ?]S71_<r]T3Jj&X+`Z_4qcH<rTCWhSBL$.hq,LPcWS.fa6r4\iXYRj6]Ne=m^#`\ER8$_=.N7lR^+^u\M*\W#fOQk
%3a0M.jGJTQ!*1Yt'oAOf[2H:&W-+iPmXT/ZSo\8,FVtIYX/)Z<Kd]8@)_fWnjhgFK3W&nCc1<;lClBCC(Lt5lEZO7PQ'p+*6d'SC
%F4O.pDf%E*4$cg%'XlOM@S>.7=3jSmjMop&bS8Q'nZbY5@\qUR+oQ-PH%EqLUcQfQodoPho=UqOpp=).>X-J:I]JO*fY5"@HBLIO
%A??:SDa2f0ldid;g"_2KHb\4qKSXKIQ4_Ffds:nZq?kMDEe^2M!?2##62;!oRkHiI7&63::%`c1CEK\bS(MFb3^*r/F'c+npO]2M
%LWe`,"2].%2F?CQ]br7?LC,L=C)K2u03"D]9J72V5Oru.+F`)f;FSkS6!?uX?7[2(CAnZu1C'p3"Y(^tB4Aa#oa*Vd\6Ys]&=%K:
%MO%YL>1E9pgoHJ]L_anO<5F$O<FHEqF[Y4]J'MS#)LF"sbTV3j&teu2>(mFm%giY30%Bu]X)M+_*4-%U(JhPO_iH8"F4b-Qbo)k?
%H'oj\-H%dcjq,BZ3:^":n>:7LNN;YS<(h,k)[VhZGt_?56kqg%>bS$a^(0=(%%T[PbiYea;:$=P!c`fJ?PETPjp6iF3Kc#>+bM]W
%1Pq6Qh(FG6YA`(LmdC)=Y"X0f`[P(;CAZbjOL.$odX5'[f1fL"]1%HGX4#MG_\)K.OrRPfe&=W?psf_$2'HP2WE6(9_lk$Re,$:<
%'0!P4<BSa:$"O*YTSPc;F^a*XoPS8W26o6PZ=^M=#ms<N/UMWrNNao4ETB^T1*V</Wp$'eqC`n2'o:noZ<%pSlp@/jntQleTpIR9
%pMi9^R'JQ^;>=)A9UbQ@Q6Aqji^P`%[JWi,6598M"W0_K.[h"e4:cMg-dLgJNCfd&R)X;10XZ<r<C6RMcU?V=?dUe#`BoWj(9,M!
%=KT[e9EK*%Q2,PpZJptF&;kLBGoWRUZHpQ!OSPtcT'e:g/n-W6:tNOF&HY:N_RsD-,>Uk1$0f[T+d"grq@eXki.U\p@PSNss0M\!
%"oR!mIsKM5=8X*B3VAB=CPjP"2M5H0p8lu1D;#o9fCna.0O;c'U_V;\h44pDXMi>ArA<E;=aR,T%^3$AJg=^:iPJp)NGh"<WmY'I
%G*!X<EJJIpOu;%C+"5\4,Q*'k/P;X'<BOuWDKto_(*YG)'6:hrV/I2r\tg!=(=75J9qp211QiRVJj`TRonQl]AZ-L2P$Q#0GGOHc
%$K^da@AY<*B.8EOP!"YqoN*]<o(fgsA)ZOlS9-mO8D>je/=JmS4G>f\*Ue&('K'1/.ZsR54VcWe*(2K`.k>&+pm>FJL2':f?N.X`
%%\OrFBqaZcOuR+#Zh)*eef<s,a)D%BG,P+YJ4J?W9a(Cm=fTtIBc*rJClh"2(Y-3.<fpIZ5N9+9TW<)uGEVY^Z1_/1$Y\%OBi&o>
%p=qh&AZNF;W9_?77G!tCAGJsE*YRO`=?j3tNYifmmAQ-EfAVo6B0sj:g(Dgl8*NmGW(=OrH=0<FM_C@jg2G;CfCt+BQ0JL^UmP;:
%/AmMHMT[VDR_,:_[I)n'iM!sfJLJW^DsWJpMsmVj_q#QC#,/sZW+#61:PT]\bjsfbK=kfhT6R3J(@kLH1Kp$En[>c^.')G@.S+TZ
%C-goW'Z')uFB?&VD/%8a^-D'X`<.e[jhlcSnpOqfe^\$,Vg94:JrZ(I:`:61(F#3ecBEr0C+e>WdS+<V'(o#lQd,B7jq9rG<T@t^
%8-^b-\c+W="OT5d+<bC-;Jr3Zq!IETbY!T+%hkpLot5&j,kBuahk"@*]qO/1NF"d[3B,fO>)Q/Xd54%K&p@?Hh[+ag$I0sXXn>25
%Rr9GtllS_eBD2Wlh&Ajg]$h*\RuVm9gTc+5Zo#650t3"e.1;l+Rlf>lYY$uaI_'G*,qDO:j7_p0gD08+]Zt"'$JE#NR</[np'KR"
%9dC#K#$!)OSsHH89+mLP%2Ifmr_u2HQ2J$6Fd>FgFDY,<[5gr7b=0I4p7@-F%r3WlFs_N>8fimF$3I*YP^fWqR<i'1AUHesmS&V`
%SYNDAe!95o+em>X:a%@]!K#CAok-$!h8j2=(;[$NIX=:doC#2SbVNG/J[kHhhMi0\.o\S[KZf,&.6eror9Aqg<96>m7W?0m/lr1T
%^10:l!9.E+8]pd:im]5cL(dA.Wg6c@BehPT`V>4_,#N\8gqE4J]q>,`O/lVnKm4uN0B;c0SfnT]h3qZDlRn_B-%8gp\6#af.P8!6
%e+&?fWZnCA\45IPQ6#8<$9D>)j`K`15PU$[Hu#^%kU#D"`Qm**pl?eFm*:6dCC?832ADGEIh\otriH$(g#6".@kW5Lru*2?'Qe]R
%O&m[lNe%d"U)135]<'q=+]S+33B)k2XNjIc<-LWD5,'1YYl;:RkQnpg?_=k=h.8c!6B`mVkKKLcKF5]4C.lKLK.$5/Bgm6#?\1R*
%_TtR5%5Sng=IL/s)LU9hTOplR`R\Q%m5l-#)XuJlic:epSY&%60ls%HVgeOJs#(/SU#%CH72<+CDms!#A'Kg+d0,braeP#m`i8QD
%)]^Gn_f$blFamhlNiD-X_5?AL-DQBY&GTbJ23hnikB\[Am8(5@?VEc=1_@/\-6lQOqesW[KK@t5mt^iJoDBCd<J?Ni>N<nq-"qIi
%''a?-EoD/3+8.EE5hic-'s/i$5%[%'m8b4hDn@"b+Yu`Up!0a+q"?H61H+<$FpM'K8n_q(P<bQ!SSZR*]+C2bh%)H?_)PgZrX.p]
%hA:L=O.elTl[QnN@;I,=D_L>ccp&"1-ULd](Ib(Sk&>TY-s>1]H$aP2@eY'<G^D#J$QhR+KW6q;o##Z6.P+aG-K-uFC"$OHqAk+k
%*Tm*!d;udJlTn>[i!8&t_g)3lI^6,4!>i9JD>sPR^"hm(<3>Ig",?sn.]?9f;Po!A&6Ap4^K`=,%d(*lg.oDo[<]@c?I@EsXDl1m
%<^g>qQ'kt4lT\2-T$CnrgjFq2<$^%C;e6+0kG7XC+uBII?VX3u,5gh_D+p;W8*H!:K+Fr=&Sg[u-#oA"P,JHYZTG2V%QWgkdgb!9
%[Wta8<H.:o"_cAIBCmr68th^Km6Z.T&o:]VA_1aM[V$<TL6VI.FX\nQVo]0s3l+KSR//H5*IZmiN>,7e';)KLp@9_P!J(X,YbF=,
%8+(Ll;h#pGpOe`\%f9Xn&=Gm>G<1+O)eE>:V*;R+4FQ)"gKJ(Q<j"Ai"U[G0%^OoLC"7/#N8*,eC2gdOV6,d>_l@gF=g.K*1.+L0
%XP*h".p)M5_M<eJ$3ZW7^=[%c[L!nEeiEQD.]?ii<`*iSpAZ'(?[+[5dU0/m00_a87u+RPr!=/)2N->EmqDSAB.aGNIlj8\ltr(:
%,H."iW;I[Z"atNO&G\?<L\LH$Whr\Hrm_Hncp/7*/UpLT9LA]&F_l`&[NFq0:a_&?2c6beq;[boan&GkrTSFp7VjcDGD[Z'NQLa"
%[IIV;"A[+me_#u']e@lq:Hl"1B*&:^.Oo?a>;LK7YQV=sKea+(reOLsZO2(t85S$(dlJ+OGd<'Nmm'^i!4`Bt,FkF#Bsp8-Lm6X&
%4)T[YV>I\A_IELLr2<(i'2(u9%P((fU`20*q1lufGu:3]'E9)3Y6qTIW^&Jf_&+Jb6lb.iSe#HJ'IJbD20AhNlHal!g])6O".b)l
%=]1//?Fe'<1HDpbTDu,6A&aFY^iQu4#[2t^eg?n!E>GU#X\;\2[Q^Ar2KKdDObPEB!KBX*&VBq!f0WRgl$XSkRX9O1,U[DWj26$8
%jg"-/$cRkrLS%E^c"D;5jm,@2fbKLP78gG>U,Nt]A@Ts&Ua2Lk@ePf8RiYr/F1Z`[X^="AHaedmeL61hJ$RUgI/9%sSaD?m$/P7M
%igp)HC%5eWN_ok\eO]WAhc.g4["T7;T:0*-Vs>Wn+=5[g:&'PTa+gu6VJ$I%TB.L7^IRD5GC*!,9p\=_'!B<iDauZ5%mH,5AL/iU
%D^'ZVke4W1<,efeE\4F(TSAU(>.tJ:WphQ*Qa;!-BZMAQVX=uH=As^BkC#_o#qKSND\N\Jb7,dO6Yh1a\j*jfh`:F1"1<?`@8;bh
%\aLaqS@9ui/DiN#Y0mu/I63J(4k:lnjZ2n`>i-OQoFH/j0s"47m3=]!n@qH1a/U[/<l#NI..+b$d#-&8o<56T?QRn/Bn7MqCb(ST
%7IC5V#(d5VgT*LSJ\u:fSGeh0M?@@8M1J\h#WHGZO]EeeVX_=#OVh,2)l1dK8C"e?c_ToOb"7':cD9>#eC%8P7,4L(3,TsSKRlrc
%bY>]b4$jC^/3+:p(psU.,:XE!b#h1>I_1a7bm4R)Rjo3/`WMpB,s5eh<1jYfTs)2UW-F,(KC"AN(L6,*oedbait7.)QPHe_<q/KE
%TfU-NA5W$RonC;Dnr[6[EJInul.F#oedr*b"XTopRRG,sJ=Q6tclb2M6I1E_Z,6i2UQ+m\\jfdmTE36gl[5X1']t,kjM%?U1$0K)
%N/ba!*?"1;/^Ok,QPhE6P0S;.Mh'ShkT\TNfZ*i:1[8X+K4ANccu4#IB^bc(1H!nY7p&h4Go5hT0EoC:&<&j:/CL,.8JNPFp/_<_
%d6g[F4<V_<ZBb$a2daEMlKC1cekSH#TQ!"b_HfnT/0[8^+^X$-SiLP.E9aFZ8]fZ?Z<&31iTXT'@\r.lm^i]V]86/",U?/GN'cVU
%Eo7]-Xf/.5?dH?)'UrobK8&FWRoE.5LH/7s_fes:s-P6bV`BTS5"ue"Y+_8YbY2*?UM;RPeXs*RdD(;p<=#Sjp0W3XC%m,6r3RNW
%6=Dbr3<'5jro0B#*bRW46,^AD>m2P3pDmObRPe\CYAN3I1<h8a3q9)F[?Eq?/iGH7<M9BQjQdPTUV-Um"$^JFLDo2JL)4kP6P]PD
%-1fl$j.9M$CdH)g,]Q94K\=1`;jG;R+lDOL*PEFY!V,"l`'6Rbl77b!9]4]T]&CfcO4A33#hk^-0(%o+TZYmtP]-hg991p=W=J6+
%F+6QlML=RqMH[jR6!O=2K]+&>!CW4;ni^g]$@-_)HQ"SkZ@q0c1<83n]'r*a[Z]s`3!s0AaLHhZ*t,2>Ip@-4\,2*I@kso!C9_#A
%$i&ALKIVe$hYq<<%8u_d*7PCF*@[o6[[W&D[LB6XQ*KM;:d_9k-YSJco*aVM,fP!%%eT8Y5?mXq]j8u#`CTj".C6Q;l\o!7$+?5o
%*dTf#-Y><UXTnD.W@B.HC7,,fM+Xsq1bL*?A`iVZ-k0I@UP4Pbr]ik+4S@3eC!R)<.,s7Bh#rhB_8f7E;Qdd&`Rq5RE9e#XfJM3N
%dPCY^Hn\NW8J]nQ(Ge^.H;:$Z@=QY=+8#0Y<n`[#T_87:Sm`:0]Q`_*C\;jjT$BVE?[Bc=K419OOFdJ,&+,`"0T@]_kVmjH1oj9@
%(&nPJ,PN$u4JjX69I\PbTYaRu=qlk:?omIRYMMQpHU9d`^He\8JA4AnAMuE4*NKsm5NNMUcEQ-]!a?IGTQ6NG.n.',H.gMM@1HKo
%gqN0),*D-pM3V-1g4:EBdtQu+<fMf,1'(CdUA8j-50@p"j;46W42S+O<bi"]:s1;dS<:u]+hp/5'0W)P!a=\)$ZWjucjFmpi@h?Y
%ABp1.47#r?XFS&aSs8Fk83VNMNYZlO*6QW2&Bl*R&RH50lO<WAY.F":23ut[DbrDr^5aL>"4Vfa9)ldRG;i-Nr?K7%YCe/S>83Of
%9Ak':8PONHRq>;S^T!/tgBb*t]Xn85>'pdD.$GIgk'a'$+-9%T6U&TX\W2a^,1Iin;Se<7l(:e.T7L0XW/J4*XQ2p6>(WsOh"J-p
%o.3;!JZb:HpO2p1SG?)WR^J<`:59-E?Q'3\;*eK.i?glJ0N8E\,>H;_GHTgp],_9CFdJ_=ZW0iLX+MaT&Af`d=^rn`#'-2bK':_m
%+;.""pShkP6]\aX!T?LVr]fQF],_;J:B$USXd.eOr1NtmaoLVbTXpIb8OTG*5K@9F%EtOPFdl%k05#a8lcF3Qc!+2L0T3@!#O^'D
%Kmbhs-YKmlSUrA_O(UKbcia#LPT!9&okeP@+Hf>NS[i8*n>TDt4_J1tS_b2ik'mp&4n!D9&C@iVP%EY11FOHFChEVSA>sEc/YN$"
%3u_=)UN_8+C`q&H1WY$,ERe>,V$EjGKrrStZDH^jj>[NpZXo('h:96P8%(\dSIDdr>lT4iHen;HU)ZCj\RJ>2S1rh-BomO&Y,\#a
%B/7WdDbM:amN^JZ*>1b3a"h0O<^CdR2XN)2)1C1/G!.T\7]6?,c!`[Me;nm@/O<J_A%Nh./l!1^N8j22qoYBhhS7WN7/Srh]1*)E
%$A-UJNnTm[!2ji8gg+2;@qYOYW.Y\'%I`a\iUChkR<m>/$1iq^NKCS(6(MU*i=PS`4kB5GBoRJcjCtJ\YCbe0jC$J;lT%8Z\;;A4
%[Mbu'(@gL;BqJ>pm9-mHCb8,[l#4u3/nhX.BVl.B1SMf$d"]b\kI0fk;f0n(X@UuC<J7LI\!?^l/M#4i7AS3\DsHt_I$o`C#GJU-
%Q!B=FHY*i@8?<cT&$r5"kq8U%RPO95ATjS>39mI<6g[$5X0i$'OeGsQX649Uca;N*T)h"=YH?mk\_ZEZ13X2`k:p_H&I\--VJK7P
%fE9iFIeCaq'=C>3AS#4sg#JA!Y4a7=$f/'H=S;G)XcHdu0/o[6oq!^sT'&G4B0.#;FF0SOCNoE!)[2_/DdmQ8^*D-FqDjnOq#2nG
%\ILES<m0(9L#tE_34R.c#0L:W[tQ&P)pNG3\0o`%qNZn(m$RAI,(C(P,uQPmhKO;#CoV0*1n.^9?,'tPnBb)rLA9;j"XA&@duqgU
%o>nM$&abJT-;`q6$UgaW+9>rcM]9U<8du/K5HgI";iJh%,2S7Yo#7(r%?o[i\F1AcpduL[b<O2qbHICH8h(P^KHMGoCL%l&KKMaj
%;3DKZXu4=BdbE>)$Z0rm"Z!o_+:@u_g.`(_C2a)<V_tT=Atu6^WCTJ'QlH2)=cISt/sW)LV9<bc(5Ulsco%E"f=4-r0k=uT=8=aA
%MV@:KREXi*kk'bJ+D5;$Jf1.j2NsD,=:4OTFLPOITIP7#l@fU<a5?n'HH'9`A,$#LKiZIK2]tZa(J<!P+U#f_T/im-Er0GIh[-E`
%%"I]4G#6bRW?JW8T.1(/gk@n=+6\HC^ciu:X$7&=K:pcKXuEAaYoYe>BK!lJ?207_=)f$[#7j1C/lu`QCT#Y5>60*[CdE"$"&g"r
%:j6$`O\D1D(4.SJ(aMT-5sLpeURoSn"(]*SRnI+Lb+D=A$?sSifou3kXB+'Ma"plZ5c^R)/^f\rBI4uOe?,l%!Hn.qNpa:+CVKZ&
%Th?8&8(T^g=o`,a)S1RFSrr4o!:BCRWUgB9"mn<LHTNR*38<\)C,HsY=_Bj@'uhf.Q5'm-pi64t<4]ZhK=n?:1//,3S]Q*HHUJ*r
%#h=a*")^*$DYgn6N@aEofBD,3qQ)=KV8<Cnbh\O7r_WE^ZqZ=sjF"U;^ffU+Eg]):e,=]GlCobc&aFgY`.X0CC=E0UV/W7Ig)<sB
%Kos&=BH5m\SAYtGO'fgQ?D5O^.DUF,7)1T9pk57A);0)n3D9]4gi3#Ce9U-6$;UW*QEl!\I(VG5o5k%5^`'TFo^cl%9ak9T#AT)(
%&W<`Qq%2"$(N'4Tad8LdIQ_8^BGt4GQM,:XXS6K;kF*ZVcFif;Sntf(Y1B5Mbs)"s9=LRh<sd(;^NR3Y?1g@I9<Ei,6M#RHOQf9U
%',4P\3j#[Lp7PK\DA&8,4/%i1S6Lkg4PPnE<t6"q+Y&:*WsFF&NeT,la!/O;C8fg%W`9krncr'6rENK$B-I[2)<H]>dIAceU\,u]
%O_:roVZRPn[;dIMJbK'!(cmiaI_jA;ga;t2Y8X:!p),Zt.Rk!S*j`kpC/7\:)sGLg>nlpI>5JSYMcEuL8S%8/ed19(!KcZGEN8L"
%h.>g33%')k4WF$]E652fi^@hM9D-g3XACg;&A&F;4VCnKP/ZTXorY?fkWGDmpln,6S/#I$^-g'-@uF?[MWndtpjB[e2l0jhLf.Dk
%VA4C;BJ_)rfYK(f+uJ7cEUVG3VV/S&+MDP6.>^'[Hls+hHK)>Rj?tr9UIqa^05@gL3Itp,NnQos=>L9L*h:<LMrY9qec96mrf1Sc
%7[f7-69*DLK%c@@37R$AF_Al<Y4/6=Sguan:YJ7444#1K-1YSfG,RlA`iOl@fe`#9SWYpYJ$eJ$2\:-/K$Gj,OqQSo`,3LS?4R:e
%SWEhJ4#?T!la^q$72Zl2,8[q=S9h[d>NhG?p6s=.W`cQ`iM7B2"PK_XV<^UQ?Whm$6/R.9WbocFH&/jShW6m[Z3KQq9G%dBUn^Nn
%45[>,lVD&]c"#S&U7NiDq\f;-dqN)LO6HmkBm`8uD0kQ9Y(jU6qi\5%2PRdiqXT?CW=p!&P@i5H+Tt_"oULA1@dH(unSLU$MFA&^
%K=cQaQ(K5\OC>h+l9Sk7"sV/8#bGgQQ`o1P[PCR<U4g*:L:<8`r))8O71/?0XPDctc:Ej#\T3TSF?%"t:/[=pTi&"uf3LW7.&J(S
%]B,cCB?(0sWa\"Ep:OKFV@]c$g#L$>"+QC,Qf+.*)#6;lf3Br;S%J&DoXJ*(*^LH1R`OGT!^rk%?/+e0<4_Mkp*eFqY?dH]m(4OV
%P^q+E0G@r9M;PCXJR.onlL71&a0[K;$ZgllO[hF68=Qjjm$?-[OGW%t2]7@_l)?Xgh9Tro@I&U'p,sB(P+3R.<]ad:6KVDss*+8r
%];Ho>V>U(Q$ct+)p&')/]aS2[)@t5W2^R!LY)tbl=2e7A?SOL&k&HBP)Q(g8p>q"(L3&6NgEh8(Q(BfIA8FfVp0/$BlCs:'U+_f+
%NP`"qACp<.UR5Eu^0XT)Qmb3nlQP>h$>]>5S()S]A56>aX;>bW]W=U6AEKM44oE8cEth/8EOaW]?#rfS!]$Fnf!pq7cHtkCS[MNi
%#d0GtQeO?_X-$Z(5PHt"eHJRl"tpt89UDL2Xp_o2Su^4rAF,8XOOD>I0ln*lre?hS\]Sm%@sPVf3($t7%k?-;!Z&9&e?ZgiAE$]W
%HTu#(P<sk;q>$&gWTDkL$$_9NQ)(n,EK%S/!scE70:[/*$$;8k5M#97B;n,8N.fR>6a*<,/U95$WoKhp<OG,Pel;8G<%jX[l*_us
%;!W[=41B,IN_;\2I7B@+M$d>HQ_7pUITOZfCmHDF7+!Uc(`\kpD[rJ,b;@OMLhJ=<r&F91E%a#uS/\,j2C&GT]f@L2$oukBn)NEn
%eXrj;PAUYSD.\\e9n"@L;k/a3N-`&uj125WP7TDL=<r>="`h:9MIS:9Zsj'_Y5@pjMYp#oN'\nhY!HSknSZlrS^k3tUY\Yr`Uj8k
%/L0f@<eaL##0#/Ak6<q8KH53g,r%eS4kPUCf]ibKSNSo[;FlZb=]%r]d0+t7b[XBKh(7?fK[;%-:aN8WQ-l>qE;8[XHPIfA5`r0s
%?hmi<GVZ^1[E@^/.T[5:4>A''NB?TJE#f8&.PB>P7loRXoQ;Ld"'Y%h/L8%qQ%PVu:?FkeP(M,>/;O?8KgG#/O-JEnacTGZOI<J,
%+XNn7g8Mcpl3'/Jb4g]u(kGm)fmH,S:X,m#%#s1-W-j_j`-qA4!+!p3\5TX&%BZno->UmE!0-0MWUbcZla]d86*NAnpKM>sd?,0>
%S`I88<e#d[_[^&+1I%?DH`;_=*!T$)N[!G+YKneMe24h+m>.IR/@Y&k:7)cF4/VnHmotd'K\G8^IA@gtr-_)F!:DUs'G$eCUmrUC
%dZS)'i4^]M/1dD@#P&VCIU(KS+H_m&EF?@%<I:E+D)>Ed<Y+#o"K#7;[-5C^G.KgG'Wp1\/`ruFkt6'34$U'<Me!GI\*bA/\enDf
%o2$Qi\T(Cm"o<59/VQpq8LVMlU&k-0'd-O[3a@jSm[^W*Wb+o^@EV16OiuF<#S>)&o/u97"10e-+'0aR<buZM_0@K9$qK!I[thPW
%^m#Q_kS,i&Bl#5k">E/Y5mAB@NED=HmIto2]"t,fn'GiEr_G-d]aS7g%dC,SFQB@^Qc`]Rca/UZ`!3@$E:8/Xl=A#GcIb$:'mnP'
%(BsMlee!q<i.>PFT!#8$-Maj=?dZUr/Ya[EMi'I5jr$cWJuh)WdkC2*HnP",%.m>uS%C;km_,4EV'&p?+L^a)X5YpTOH'=[75QiA
%%k'aR*O5G(iNKL=IbH(k/Ej0*??9J)`ht8PYHo=7d1&m?FN=!=8Vm$hI).(Vno^kRo.796&)1QDcUtdj.k5>#TL.([mV^'Uh?oi&
%(MQM%%=.o%@SNgtf-tmp#@%G<OIh9J=(oTiIp)nQYd7qaT64+8\"c`*QS>G>5i`dPWu_RSb&1BRJ!MW%hO=$o]4rcdqY!\pTkm&D
%NhEPO]IrC/_p`XX>eS@Ma%9.Bpc1@)9"e4'T&YMA-OE</:5^-)`LncQ41Bm<GRU2m"FB_7R:.o\'l#%5WGrT_MLicc71_mU5THt/
%)?APu*^ud`Y,boXqQ@!7EEdeack%AKV;'96]'kp@>p<1NbL-VgPNE;'XrVgc`7T)e;)D[&bHe[9jVc0'9ctS-FJ-KpIH5@.>\G"]
%(Gr!bZ-,P8S6)td0#uL`Y^JkJSIb@]mJi@`n2Na:lK/aGY'Ln>kq_8L4$'iTJsJaZ*[K6^^e2cl;#N7%Z92FM3UT&HKoX8s\J&Zm
%Pb3;hDR0H^YE1&\;HaUR/-T2\]r"upR%#0Z'VFbe&Z012?I6hXBU-a3NEmN1GDeIj!AL0^feQ1GPiUY\<1mK?7*aReX6LE6j,ZHI
%6jn$4%UJGeHJZjD2"'5'h71F8:i5A?mtDd@??aJQ13U9Ar/a.aG*rh0+H!O2ph5;*^S>u'<Od[Emh0.3qI@,G!GI3#mHNOA#B3AL
%D>d`K9=#]\l&uci^;,KNh9*UZ_CtO#,S0Tu@aFa0J'h[+6.B`Y,,6Pb\3X`S6:@$X$U^nXNCI4;<RdJf@Y!ka>)A#!r?<5*)+Ep.
%'AW$&$_"CEfD1>f@dN9l75g9G$Oh?jXGAt'(qsolqqC;SQAjYN9lDHm!-0;aleu0:dr;T!9>`/UPQpk$r;2Bc,,$-Z\:A2jhEFmt
%KU[%9/qLXSq.]!0'K:WCW"VUR<l#q/REEL4<Gt.\DJ<.L@XK6]fb]eUf;#nYgZ>H&r/+9lc<Q/A!i4h\Dbr<MMUiNOWDuBXTPZa@
%.r=SIIV&j_ga=Zc1[HWbBM/@8HnJ"U28?_mS)TNS_M*aimq.,fgV<-`fn=,PQE5iN*GDq\Ho0T2&,HC^X950aibQ_jqEUo+C+JDD
%o3p]nfr=Omef.+3n<eYXiuS@QZ>""7cgA?Za+bZ&G*.g`knuZ@87$gA:Q2f3j`mCRliCnQ=L53eY4hf6\kRbO%/"/^#1.E3B5s+g
%S8!><3i6`sCS-a-9$Yd`Igg`k1i%OK'c4\Rj)\n/c\2ooqi.nKcfXpg+<*H+bIZs:)*@18$balF7=C"nSo]<T![2>AO)-s+UT6#[
%rW)VCmUqXlaN<?bBSh>6=n#L=l2C17XT3YK8;Bil!OosN7n(GCOcjr351qq91oV3Rc1!5mX)fP:_U.ThTulG<WfQ:eIVna??&nQ^
%`HdWG<U7-r9tu2i>\/8XO:Ds7;0H/Sl,7l/Ul2\Cb:d9!:sC.$<qK_/n1.()R^2&uCk6UA<,1ILg*+qq>9VOqKO8=H4)0V*&mGo>
%bHup<s7^`E>sBrh63$ji?$OBT]o1W>@0\hFY4[mSM2J(_H>r'fP+jGo\OqfdjAH]6n:gb)"uZlE,'@L7P`j310")We6\rJ3@OT;s
%lTK)`;3dN'BFmi'&(LbYGQN[?\dQ65o]Q[OAnE)2?d;b0Hbp&FkpC'[f<]8NTdh[lYkMGZcL\8q!SmojCMl^K>1_qcf,/QA3i@W(
%*>):EhT?4N6ZfWaf^<Xll(ikV3-HFs:4Xhf(:9.oIG]1&bKarC5\=,&G0%EbYgtsI$_9A!h+ST,c\V8L:pK,1\Z^Ld)E:_(bYCJ6
%pdq_OG3(>T;t\PiHtHC9eQR?c>nt@<AOPhLdN&TR4RQ7pWXj3S*uA69*&W'B]^YpqMuStKWUCBZ*SkS+5D99TO#%=\!R7!r#72]<
%WSB0r3CKup>>!Ye*@AkgBhH(1r<\I]Mfq:>>>&>L_ZF]=%"I&2mlQFr(07u62:sP*%mdG;!4c*Y]pH+QJXm1REdk0VW:]X@XEise
%meL::S\0=l=u3H9?Blbefrrti\St&OUdpVuE2!^e9t:%3<%Hihs(&=%s4m"BIQ8ElS(PKOf:>N=q34Y^'2j6/4,c4HmK?eQl";ZH
%<$68e=H=.lO:Xj0@/%-6],sL/g][(HjM)/O,ec8/VkL`$gtpiRC;-J+_U!Z8@`+e<-mDXk[rMV5:W8"MBr5sBV;lOloDO4jk1?Ai
%P&/*p3cZKD*(`U66Rk];Jlr#lpDFuU$HYsYF#c8O94QXf[o'jfOOFMF$ptj(IQ3b`Cj3Y<Kq@t1l7%OcBemJe:jpo4-HC7S"OM6p
%NHdc7H2tOYEh)Y!4`%"$6.RnjGj&f)'<'\ZAX"lZRKca!?Kb"O`HoP!2=l_*!<3OB1)Rg]@al0P&0`J;aQb'qEj3=V.-T^\m^dZq
%TON%u:;pKPWF<gQH$PpBW4#ST-s`(41t]`-#Z\7Ya?\,9%p]NB<Ub8VUj#_:dj);@Q\2=oT4:9S`4Z(K#Rq/B`W;EVlY=aI]W&c7
%oEkm4KO!lgWp0qV"WCZ,B(+icc#7ZKLEf0_>mI"g/B:-N?h2K2oL\2^:eY\aZqY(#.(V<LG-+#UP]ODP`/rVTng2&EJ,_q(pk!C)
%TgYi5qj?C8H#,dDr%.'@<Uj\m(Y5c*5r^-XGr9KeVQ/XuB7iHM/"LXj5?&mdjb<0@-)mR"VP+99j?qUW=qM`2O],@)=7io97.q"A
%DBmLGjZ3&l!O["#fQIk6&IN[#Rg2k'EA8m=>+k%`YR5/2(fWb&JV*$iHsE:VDVM4=FH&>.+O!J[7CFZP#1%-ueXN9R'R=>;5XBaJ
%8$;GG79^6p.O>7QlHK_0-7QAmk]KjPAHJYsB%(dITtmZoMgcWeloqJ+lPeZS=`4`f\7b.VF>c?do$;nm>Hsa71j#0&g=9LIb4]ZM
%\<Yei76X@X,IC&1/l^g"F_5MXa[8n6HP0\nIUpi88%Wln].[?Q,J-,h3k0h>I!.[#_k!RnV>%4Mn]RGPVFtF.PndhZ]lngk@gSC$
%?CQ3c]T6fQk782/=]K%1FdK=sNaIAAWnVnrcMMnJAbJebrIM<kJQNP:Y3W&.ZN:3OfN!)p;!(JtVL$JS$67%A>,`5UX9u3hVe0`)
%;i5mh=g?c-m.5EK$>1Q\gZLVc/Ua8Y&-Cihif]WmC_`^sfN2(aHB$5Yq]2]I'BM`+k`o\oes<E6OgEtl\?:K/`=>i:'mg"5;f%Fr
%>Yl/W`)PEp:<5bA-CGr9L<Z-dFk\cdM],Z<acB;PFC^Z(PF0*7eR+^t0m0qt`d[k?CAPBkdANOVre.Eu=mSa%N'"CNr4%69k&aJJ
%T8k'\DV]kB9_qQ`\4ZZn<I[d/pZ'Xu.h4U+;'ah7@Ch,[B#s,md`Tr61s]9JlqZ/dLnB[8ks;nkp6gr[/dP(;[,obC^71cp:5Cu#
%%Q@4b44FHfoXaKFg/4n#a>0s]ja1jYrTIhmlko@4qgi(k2[R0W+L1eEc2=uD7L-;A9BMA;%^->?iEj8-kc0d>5'#,YW1`(mg\S1W
%E^+ljL[KFMoROh;LSfu%m_!&$9$3bp!m'fKHT.'*1j$##<(^uML[ncNgL=WOr,M&h;Qq4Z6PS^Nfs>d]G%df+0u@#D?(n;>_lTM_
%aL_>U+s/t@SdlG$6;=VJS)CWC&A.^1Fn<WO[X+XJY>:$&[T*fq@dg[gNn"N`5T#6jXBt,=#9T5?07;'5DG@uSm*)asp1uTCX%=u.
%N^0=;OE,r;Hdrd6o&lfEjaQh;?-eL4;/<m98`PfY/pqp<7DH,Zr?*qo!j[+bB"GSl.kP?\AN[LY.(J1Nc-d\m&`Waa^'o2V3GMnh
%UMgs$]p/NIh.sXgB5NoQCpVCB[ED=`eQ&*"Q\1Oj*Dr[#FrTc*+f:t4T[UMWo@\b0Rj3nN3,DUO@?,DR!9&/?JbL%BDc<o]?ACDA
%a%Scid[ZB.g=*'\aC<ko5B5:CQAp57([[76O?TVf7?o[cbnihg:YhphqQNU/^B08G.%mO[@Ig;XQ&fpsrIj@Wp3p'UbXL\rXhDH+
%k+$BR[Z8Zh'e1UfNNM7&-uOtUb1_3/OP<m_cj0u\qcG`s"@^F$1_b8.^H?\-=:LKDobG%>XZ6a2fDUFr1[tDINIo;:K$^!2$J37c
%^@:-/#gt%11jYb(%G.\3ZG6]6bZkoR&bZp/_B%'C5ukOV@;%;ar)Ej(;qa;7@7(,;k"CURBZ;C*,CUR`%NmD^&`K78?[UqH`'lZ_
%Wj1'tJMrFkm`IS`b/*MP9-+\>b?>-4)UUmF,f@r^kiNl<-\+0@7Y`uJn+[!#T,4&_97I'3B9\=0`Rea*d[g(gK&F]2a1'hd&jo/'
%^>q#\!!Jn*e'kuWB=$7rF?T2YcH-1>AQQ#ArLt-dA8)Dh,M0<cRm)N+09jK[1+B0oJCG/2AD4oj:3j1)*KD439QEGg.181b">6T]
%`LZWUn8pcU.cip4(ShTKLmd\>IsQj8dcS!i!T`:DB<ML(4_'U;W3N45m.YiSR\gr:>F[/[J_CO'*YNWRp95=Sm2.3tSIL]OXcW.U
%mJmK$D2JhW/(N<BXuhWuHc/nQ_+*A\DU6B]F!1Tm+Esu@FMgJ:'q%i;MMGsN+u]<%68.]s-VOabJ(8JNOsscPrHr``I-FBJU,*SP
%R>;G=JDMu$Gl$3XSB/d\SM&4QQ^-sQ9oHs_4eL$t\aEr9pWEgKMjhYWTM!qF2*^9*Z9(5CfGb1n-=B$`E&`R%A?CQWQ6EHaOn95;
%\lnDL0+t;brs<hKRfh@Dr5`f-g47W(28AJl>m\pGS]N7dSg=8g+.J^JmFf.O%EmGu7hBu2T46e[An[45^<Etn61@`s8KVD&:QHad
%#G^O-:0@tXBVFD]mmPKQ0%kt,9mRStgpUBAG+.Z"HNdL,(5![)P.<0Ql90-!Ql69X5bB^6N0b_'MG$4#1_I?s',?n2%_Cqug.t=Q
%FQ^^JF][Pd%*?W&>H'T%MVK6k,BcK/)or[\:l4Of6esqTdK2CL<0:5^nhu'%?8kjPkH_/(D`H8[+$*:)HM'XKET='t'p<YT?`=7t
%N]-GePTTGuqPPr&eSL!?D=k3KUZtjAgu.ldF?GjJIetI9^-toXK$NOP.ROJ`m%jM4,&h"]/`l'HZQB"L-Bh7OS]fbBUePh&8tkO'
%.P4]hERhVMAk#t'/E4'&GF_l5:Aq?-g@..nao$P!:cAG9"=9qalY8:8!AU-MaJn3CFX,Hmd-J'mN/jLXD%u7B_rp[.j)-kCGb]M"
%pWV"e#?&S$ff5%q6VdmK];3Cg6\B(0IZ(MD/L&[YdT`P`\ZF,9r7T7L=jF;S3)s]jSSA!G/5HCE2>CL*V1';cfkKs=24_-7St0,m
%4.F8*$24tP3;ER+ZOBTu]6uY@0$#npg*p6,pl6>:"N7SRKY[S@*idClWS-.qVqW.nOPH(DmTq,::F,SVZ;:Lb[*8$p2QR;dq4_c(
%NQ&AC2Lnr;3S=no6*P!)nG:oe(W\M&S=pQja7<!94EVo]`b)F!P`F&8OqU?0RmC:la3NB)Q([?ofhJf2MH@oC&BMUb4(D&"kfAHG
%-O^mV^":'^:8)`2k7''pZ>d_0U-L=^3CB>,3*tr!B;u,dgt[$qe%u)fH<^&2GCHTQ1%3p29m7T83S@083H$"nq=kXY?&pMqP>Y7i
%-(dIC6W#7Yk=Nl0l:S/O*5"!KcM$/95BFp@9QRj05lZYXAnJSZp?g/crG1`B*Yjdhk$E&(fNsX!ongs9fCeh>3o7?ZngpouR$d)S
%S"/DHB\V+:rHd'226O,miRRdN(%I8*@u2(O32ijsF1h2EkAIb1f@X4@J(-m_/Z4[@XoX"Y?aP^Sb2:T=7a'a;J*`p[);D_eB8&r!
%ch?/e/`fHa%?P/7jE`I(dC4$c>Lu9O,MOga\H'lTQ(W::<-C/uo6H'ua66f:cd4WA3^!E33]gSZ-rh6I$I7F+0s&jmgJ""fKH6Je
%R!0i\7k^?5D95UQeHt<DW/>HHIeJIP;5dIg^;oENcm7#lZW6YhCOttNnF(n&Wf&lWPC5:Gj8Q8b#gh6&D0r_&&/D-fbbq;d$IdJG
%Uir1c0LLWA`HI\uN3.-mN28D[nKQ:"nUZX35IS!pCMl>B+^<PMn`L!Wos/>?1N]Id\XCFZ><-\Lan<*TpM<"[GXj?=g<pbjo5/Q5
%X6NsD-U@FM<UY"p3C6o\JXm5AC4uE"O0Y<VVuHWTnrg[GZo8MfDb8D"gJj:nV;:4ESH*pF]fTg'a$+q:`Ki\cU'0O??el"^opG%9
%W(mPpZ$*B7ddhqSMf;=mSr-E)f<Kg+983PRJsO$,e2=/jTd&*SkYpN]I-dM<6f=?Z]>rhndVD0LR#RN!I[8fmX2\JB._Wj1#o+-J
%\<("#Z/kV8bOiH^b(P)9lc4-4OfJ]7`<L"<H's$b)riZCVT(6qOa<sLV3Xn1Vs/_UcW4TkTgs4TMS0,U4H_(V7I#<u)#bc4\';V?
%h*p?hNnfoh@)dYgrXuooK9'?97X+0[TeWakS9J7lZ:Co>E->cijm#ke_2%bO:KO8oH[JA;b#SO7ZhgY!PmLu4G5B5P=>_pH3'mj7
%\&cWA5HZe19sHV*O7j87$6>OmU$a8<[Algrjj+bn=jhEQAaFU9[a93mR<+1_SSiQ,[j3'Q*HnAVRFP50#m6*/3Zn^s`5u5tA!_Ua
%C'\r=&TWtn_+>e;pd,IuO!mZP[tuho4%d$MITguOe]RRJm^q[Q#"dpIW_YQ2<qMlib+5H(h>r0Qe$RN-WXLZ/<*ccZYA*X1`m09,
%I+?PKhD[][I9)hN11$WU>"mU#Y3/;+\*a9NCaG(C\a)3H4*8k4!P4/Q"ITLflc`'O[0IlU678r4B^7#D.b"^K(C2b20@3l!rYJD=
%VVe&\1A#D]CS*<o@%mBf4#4BJpMTGcAKs]&<2[,AF;4N]/^QapkcI<g,dD6:aEQh?GI5!#9#JRDEE[;3,$W+akjAZ/o32m<:o\Nj
%Oa`pOd5A%(Q0i\l0reCUb"EQX"<*iS:GWt;o@+\r@>1qbMfe'linroN=GH0^mu)k[A^[rqpV"XDcmg:aHU#_%rJ@5X_?-Tu1UhKX
%%%<A9J$/YFhi%RU'__'S>/82/$q)l4o;I!l'lYM.;1'KVo6HrDcS-]uK.b/sU/l4=CP>s.)geXTFV-KY7)K0#q[)leZm1>%_1p#.
%,`'5uYn7D*`7U-a1Nj$_BIs$7JVo`p>Nu"0?\.>$n:)$U3.,ufj2RVhH)f[!H?_9h^9ntdk]c7g$2$NCmB.)@n:.$U-gD[)'^2n3
%OsJfflNh/Wed]2tSVLD[4iq-a_??\6D<#VCU+'.`-q'W`Zm1"STBRS,o/dt65ME+Qb9Y.mo;7TA2&$S^W^#Y\lFM&mT/gJ=@KKEl
%@n8C<\$]D9^a"n1)iuG>\;,U9Gg@q3aZZc3Kpg6LJ"A,B,:=*#os%aEd`Ki]pk:W]ctMhO3WdQ0*4,4ql`liBF;Ou8=nF`HBi,Xl
%5;XO#51Lf?mbeejnKhfrU4HqJ=@_k6N4VPSpJ&J7ZoujC1%61qeks0]-rM?dmu375_G9VHOG.QTFb25%<9-.?G_R95(/rEAE(LC^
%/oPe%E.Q%:@Fhm?`7QTV3B3fK`Gdi\O_kd?77cg*rMb%Odan\!MS)&c8$A&+N[7cC_aBBJOff&lmAKCam9+;rS(BLV0`fPm/tk!+
%mnRhfP/Y$c9L[5t=TfFGX`?.7Eie"qW>%+j>nGc)TRI-?jWe9YT%H,kg!,"?V%\m=H'be"!_LO[mUG4dq.WjfA'PSHM/'[E>*'b?
%nLj&uClpM"1a,:bae2/8%hUmE-IdH.I.q3#>&pn`/]LQA:?X^T"IGgbgOVnuP<Y+q4j_BYdb$AQ'3'*+`T'9pA]6D)$9@/=.hh!r
%*./WHI#ICC<[NsWc?7dH5Y0R)1:YK:;"?dp9C_@(fpU"rB*_jjDL11%pH[*<7^ChO2ZM?ljO@OK(0((kDBWi5m_10Pfs8_O[dB@f
%=%m)3?U(2\70"q(Ee,lR^N5s&#pB,uL\j7(3,Dg$Zdm^@J8Pf@&2W<Ej&V8,4)j.nrjRZ[Xs\LnqPJQ$*p5RiBN:"5*MPlTV?+ju
%iaPhG*ZOu5D#mI>qItemN*V`9fr%i0"??uF-m]e^mgS5gR:V2tn'Lr.;@h:CcfL?2G4uGG,kd&-"kP+;[;*d#:U*s>%#:fiJbo$\
%l])D#A,3QO#\G"*M\Qn!1\midXpT!F0jn@D0;PfQBXr%kQZef+T[[Z]]Ol/b9%_%C-UIR(:RR[I=mm9oRU^SI=0?VY[1UmV/t%?K
%fqbk::o9QQ*[.,O('EbUhsE<d23=s+4,%krqkg<7_H:s#qok[baT*_'cZcaG>^70Lh'ng%`9n:=(Yb$3/S1rXWYY*(ld?YlfAS(!
%?=LsUarhi#*EMM.4^,p^pR8gO)sC.1B4Fn`\&H6q?(C@22VFbMmVd*C7F>A[c&WM5*a'IE)l%/SpC++.pZ$BD7,kLm[7c@drAO?C
%FE\L1f7-M)HCL`:^g'gD#8Aiqo$<a7[q)/T4<O*7MT("<d)mUi6iA=CfW<tQPUk:smHOIn>#*uaQO5RGm'iCLho+UE4s`"P.u^Ue
%'WZ4eJ+\J`-.-q7\Mn"MGRhQ9o0&i8EMrULaQC>[f"i:$TJ)(FICg&r5=9(Fiu)S-R)[FIJ>h1/RYdOFF8aI8fSf$D?1W>Lf31D=
%H9dU5'WoHt=EBD<M-gWsD/!(kMKfQ*7/JsG6"l97li--`\Sl.CIpDdFNW8(VisN-m@c#Ah+_@Z'C*m6_-m^Dp4`QOdW6U<>ONrc&
%:kGT3+&Le#+G8@RU6uL%;bM0cM2\Xr]'&hR.$+M!"jL!KY,atj1biQc"!'2g%fL"GGXL(-:A#(Hk4]<GpNNDZS:g$YjU!QK?iX?'
%@CVC.V#.Q\LOT.7%B]2&Lfg(=<D[?IN*>mPjUTndD(UG2ZE[[5HmS)mB(u,6W@qrbET+DjJ%hSUDu't:]#c@gP3Y<h2gJ4$,@@.N
%DYqMJ\<l.F4\%jC-t898>&grq8VZ5cB5(nEQ?^U1=U2BM9B=&"`Y(pFK)&M"+,Vf@46C?JD.`OgI79+4.q?hbX_-n_=ok'=Dn=ct
%@rFbaB8l<+Gs<hW'CGbqL$cofMjc91Z>D$JJgtKThL0DGM_\@g48&,-7`BB%C>jV1jZ.dD7-A(d,!2GXT<[ub6h5oSZ"Srp_K$(8
%aH9:_Ot(*@MCj@],Cf))+sgpi4NXPc"DsCS"AR%]4].M[C?ETaT9(/+;5^gU=/"jfk`?%$jId!^4VY9&A!A9J"V&fr/*%NNSZulO
%*t.]X"/4llfV^;WQPTZ7p8j80cuhRm>.l=q2j\AQZbujGD.Ci,.%pN@QSpkC[sM@79V$Ks<+gKPo-.3sHe\S*IYBfsEKoQ4LcW/[
%GbBTLgP.A<Ur1Ds)!n\P`!7hc(ttl>TfA6fI=-f3%gWCV:.DFjiUT7E/E>"rp9%4XHZk1^V#Z*Bb>uh@K\:_3e.d"q:[d$l8%MM`
%l7u8=H6W?BphXQr!')Ptf:FYP9H>N0k82VW_l[jA>BtfAeLR<k1k1U'5$mR#+%&14Vmt:$hN-u=>,6qG"`J_D\H/"d4n4r4$4D!e
%m%hZELM5KeL#_uM:8KHh!"FYX>,mCR4">iRRtDCQq-2ILE(-AuMKqbAjV`$/Bj=j%.d5l?pX2JE[/8<b_`%gSm$:19X*=1s>T=B.
%7E[d04*20n=Fh9t*@4_:-p9<bJ6,hD`6:acYCK5INB#Fo?QE[T'X/LVTK;$"OP1OW/$2hg%Yn0#gIg\Ra!/IZ2>aRt6U\uBW)gGA
%cNb@=n[e6="Wlh?fNT,85sLIFR&f!C=NHi&KWMPS*]9L[JDr[AU/lFdHZ>.#0kVb11UK6o_`keY6D10N2m6hlf$`f=AVEqSopcc2
%8!6Ue1KS%o]q,A<W5O#nL\B6ie5"&K&*TXSqk+pSG0h.@<NEr^IRpr8*&6QMjN/A'RtB$_CC/FpcWK@<TUg"fj3.g"$6$Co->+^)
%4=iLc7u`4*oGp8Rl[E.HaOa:<h='o]ZS+SdZI6?bLK+"@HPc:'W%=+Kb$d<2I(#;NGA/t`?g:bPLP"T2oUW6;2)8;RHR..VA(/-8
%nC%OAQ_i-a]@'I<YR4Q,JK)rR`,u\GUpFhQnOj=.GFlAd.3*<jDEUu^Bh\Z'V(V4eUt8u$\oG#o8)@Mc6?c$B,%[)\<K3j;$#(:o
%=QI8^$;F;ZEl&i<4'Z#8SKXUXFE</Fc^p]q6D1W)5DtSdpm,_i'pmf.6X^#uR<SZ0q,BJgL'QrZf<KJI#lJ8iQa<@5=hi;Qe?HG2
%M@TQZk<]CWOE@Hd(CU!:-j]W:41<-Fkk2j52i)dRDe#.01-b4H$'ro8>E50&f_cA\V9f'!^LUK.j3!i@X[j._C[B2dkSj?+qamYW
%q:Cu%UR]^.2=FXTdgd4VRD0>.WB$9HCHd<]rD9mp%Af-3WAkPpn:]U8$!1E7!)&WVEV)l#rTM2V:s`_kO)Q#4HSVYkq5nq1I/UZf
%7o0PL5G?^"I.!J/q+M=4X*Cd4Bd4I[B:n3]2.NsPY;e)[&HcTg*&aaGXEYt&.f6&cT,<#%@D=rVdJK9L99t(q>M^&4Sr=\bB>`e1
%]$OhsB74X8^28Jkg+^k=WDIWO]slqS5Bk),m$8n%g-O@01Xotk3ii,=&s6,sq:'N6NB==.Q%#DL(o9jJ5piNOYITud;"UQWnS7O@
%Pg"&WQr@<XWqe<[*6ljjqS9#Q(-g(:&p31qf,+PYA%t9!)OXGM3cYaqPmgr"6/>@HD*ZEDZ8mHbK2J5ibJ-A8Pkl+F.uC4-T:*j&
%-E/DO0/d3I6Mbc_8\D$Y;<#kFjid+OZ$.M&T[BXt9B'nBaMgiePF]1=`-sZR3#Fqi&JZ!->L;&.TOmCIBYWa-[VeK!KAtlBCS.,B
%&f;I9S7/sAMa$I@TBO\;?`45-`u!1/O%M?L$YYilpJ$.S>rbcX]Z6u6S,"5dap55jV23d3_TlHZ/MOk>pTS\L[Z#pKOX`5H6AoT"
%k"4u@GJK9`=EdGA?(+R";b:\DqJF;rUp/LtZ3QVJ^2kI1f&mN9QD)<9pk%^VKbJsVck^@N<ljlD:FXi]P=-u!-\XSM+:^bWUZa3h
%4P#4rL<^ir'*;J.rD`E7$PLW2?,M"Rmq"JCW+&$@m\#a$*'-2#Q3Tp`j*&hC$+hdZEJ88I3=mWKbju^A^k,P5'k3lpn0e<a@`L_t
%2q=&A]X>7)ETAGO`$.gfE=9luYNm]*r%\ApAbGoKh/#>ZOpY5Bs44-E8aF()DsDL#Mo(OoKl0(A`'FR#5^$!X-&Hi5?Og#V)BC><
%(V?"Vn^mm(7@gT8b^J;@h-a%%Y;J+gTL7+@6f`d#p6:dL^&??C-_>d\gDf&3hB``Ec%V87b7dB*e`ceSGNdgHU$(#?rr@b9<?*Qo
%S/KaLJ1SHa,s'$Z8+lR/.9GFt$gLLM?YM/)A9'tM<1p8db@<1ICY*!t$UGOO\IMCu+c..FThNXH#tFG=LB=A=fg;FM"P!Bhc1Z%7
%`FQTLq7hWr?h.)h23?'8I>YEgoJC?J-\7/PJbH7'Ws](Wm%L7"?i682I\PHjET-g%X]>,o6shbAn"?hY7"XR&>E@La[/0qci.R33
%r=B.'VdHJm'.<]GWHu2e7oQ&jdOuQ,j(AgK@q5=#UqHDodcUf)@6/:]Vp.qh.>E5l6ZuuE5/8\M8C>]t,c3=q+ru7(]e\/L5!gu"
%"M"P#cta-d[W,9emG_j"NY8aa]ZM->BPJ;5*S\DZ^CuXAZ(3&`f[Jq"@lqaAjATpRCY_8DOq^<_j-ReU]hkY4F!+OV!KA2B)E$#D
%*%[g!:+8._J7r[!ZJdh#Kjp->AQ(W@g*+Os.>#,VB#Rs8(;S#<AFa$P@JWZV/(1Cuim&\"$P`\KZY6SeT_Y71)pOk_Rd2a4V=s1H
%;8/^AU9juKbBI1j[=N[1[S?X=Q`r;](:Tu:Us!))em(]d_cCl'AZ?lZN*rImJCOJ;&P1H\ct(R:7(mnn8$/,9Ym$sr5X`HIZS8u6
%oiHGAa:T`;#Xho*AA<n]6[l*tL6BA7SEK4g7-"?&,4gC!Tj9;Baj:/WV-khl8jV3p?P69Qo.Z7VAQE8o)7ud]ekZsA)T(;qZW`Pl
%O=N5Na`aVj9,kcgYr1=80$'S.b.<bq(3I,[*D3iQDlZc$W_cHO9n=P"DXD(gOpp,(p1nKZ1)<)D:upjiiR'IqjF"d<+7<-=m?uf[
%%g?s+::UL!iW,eZjRCimTb,tgHJlkK^9+TA_fU7.U_G&:_Y')*/LgCscl3N2d=R0_n/8o1(&O%+!iX)3o@93DY.Z425MG:bU.2<!
%Vk\l\$K3N'q_<$.X0iI*Q`\:I\i5i,[;,Qe.l^LCUQo7s3`=O*eP3AC'%e.;qsW'>ja`CcOH5s)#\l?d>W.R<d,)1R(F[%6[Tka5
%BOBYjIe<Be2gV#Z0&/\jh!"VGA!PaBr[;R]T-)`TM$aTtdtbbNDfE6([p&ok[skmB4R\,tSSuoeQGE$Ti$s#^\d8fDrR^/]p<,jZ
%.A!1O9oln;P5n"kYb3K?TS@[?VWn6AW_WV7NfRo[m97PN@h@!sln52^pg*\T/*%8$6BuF:.8D:$cW4O_5<J<Z`mcKKC_bROO%@s%
%TZCOJ^%3r,-\ihRr<gCok@ci,gdfVGkIao*fF\6X9e&Cfq/:$SY\Bd]Q*DcN>K[G'SS#r!'e7Sm$F21W*-3%_!>?;V?<fbK6.]li
%j[hY/4eG5&7A3OWK7J,<XUK5mK(pQUUb4G=\Pg\D\8A\]G?s"!n%q(UY;%l8Z]&^kN`YVr^#sdMfgu,;\oVEMVb!eGL0^'@'I,Aq
%duEcf.-X\5Xo,RN=qir::2NKoJJ'S:)u%#S1#95RopUo;TL=X'Z5;6%-mJ1>./Qc$WQMT[mHGTNHQJB)`8*/^ClF^/6h]24_Tf!p
%!n<(J40!BfIOe#eaX?baSMImLWf)qEp5VB[kN,iEof4\O%gbMD0"L?c<.1uX+_oZE6/jQnjfqes$`3=Q_WodC2K69s]6tm&3.8_g
%DC%NL<_L"["blL35kTI(7E8Imf]R!,(<0@C])1L$h:`JW\2not?G.bhqn-BS:Z2>6mYc_/]*pMjo!b;hS[:(`Ao&B&,Qst'>lV<J
%,\MK>]-HIfNk:%#fVG?o7o0I_&S*s$f0]-S%YOX@C[<#-1QS%Y?h#5Z`ro#4qf9Yj5#LNV7At1H]p!bE(`R@ZmV90E;$(2uEUU?8
%C>]+Q<@Od9@;^.,*AKO6,lK8<dc]X//h:Uc??P3Ckb%mU$Ra2bmo';d(PUn_5F?sh_8P*:?4Utpn4rMS5.Z#H6D/2=o-)_d4cOJ\
%BTM'fXmOhih""*VU)8):GX2\CF26QXf@s&afAZ?k>7SFZk[ZdQ!bmr"b0MqF\id$/j<unm]RhLEMkq'<YjA8t%Fk<RMCG+pnX)XF
%W5*'9n:p:(&lh$]H3b1K'A7N<GD[jMQ\0CPa;qkK#J'`dFs8F^VU)IgImVbc5NSfQ5"L*KWJ`3@VlC1Y1m<sTTQSr2%E%O)at-k:
%A?AiIW=ogJe1HA8faGr<;B^5Yf3qr3Qf-#0Ln1FGo99TAiV+CJ<=J>3f6\%U)mpKLKids?5nSM!\@$Sd7tM/'N%NcX1GLq5iO4h(
%X+'aQjOCrg>-2gKe#SQ5H_&mjrXo)jW4?Rk4(a:<^=$UJF9geer6ADCgF,cB!?FN=B,!G/Td"o],!eGTL5N#a`.q@_cu!nD/c"!p
%R[sAt__T:A?)C^,`O+&(Jbft-!Mp'e=RNe1UaYj`9&"P_6G\>eM4jc7^I'q@Oh-B4/.p?/=jU.eEmEI,$2"%OLGboWeXQR/%\NLq
%LR1/9I?L1Gq"<D'0>\4eT<+gt:mc;WQXY7,RJ"K,Y,CfuYH`uWJ%Z-u`R!<<c4!qWom'IDlJI-i7;7=W*/0ct>@'`/@QI4,1BBa;
%;`S4IqZS`b[ieE5T/Wn:hPq04geItC1cgN?Ct,CfF>QTtiZX#N7Bc9!pMhC0)GB33W^u/O84!F9TeddeQh$;QL"4H&Pu&!PmHpXe
%Y3N$+f"J$e^7s[3%J><`?5[2bNeKCc1Xt%$lr2'YRcO&D6,F!D9%qJ-$B1OPa!V<T^[$[MHDJpH&$J!WiDR.!.+sEWs(a<!=@2hZ
%b5ReT,:o?j=i.KTET.[YS8[W8Fo)::a-X3a_TYT,VBGHHAs$!s\tB?"MDd<V6JkWXs$3X[7CA/`i$B:X+Ulb6_K::`AI"'K<W2Vs
%_ITNZm,:Cq-C"i>-);Yp6205'4aD<hQp!o\2>AGPMtp'*XB[PXo=(3o4PgFI@p4TGQ_1h#A%VK:-AAt)'K8^Af#<3Qm]bX^i7?Q.
%P;sD6*?F!gNc<B(.ku/pNm40MSl5Q[oAFQ5O7UVrI97ac'BEu;-r>DZ%9A-*Ns(nFHPj["Ep%(AXR(!!r#e6^m2-Pq`JG=Z"etUN
%O]n\Dlla%.&sg1gBbNAU5<NjB)Y)_@<p*SnO8_!TR`[_HJ=nSomNat"V>j`>r0>OdXKZig(,cu#I^_ba08K[m^J)oimpE$DRah'[
%it0:klL=d$G'K$^/Jkb3Lb8c<GSi!sHZT\g:8bNLQuIC)lRYHXVR=J3naD0#+]^K)nrHf_I_Hh^4"]L-&i_RffDQP+GL<h!(:14<
%&[7q&FREFEH_dI7,tS'=&;Z#l,!6'?($Sr>&`&Qc\&)#"HQLKi3imY'MHR([hPrl)3`?I:T-$5&6%=!AdKZu7IuT1U8]j%S]`0V6
%8ncD[#EVAP">t3VpS.j,-QkYON4l2=cfMEO6LKZ9r8DAfR-d-<bLSJ#ftUi4K56kS%E^3gj)R2;bZ4h6*%_/bnpDV(eVu<EIpD^C
%Vf)O6DtimLEVPC-OSTc52d,EkH]I":/R=Co3Uu[G]<!Q?k5ua&jtU,3aXPoDld>pjdqLLoP4`^hq6rHn45ID:3>\j!mUD8XY;6u8
%-?_qo]6tiH46j$BCHe/uMgA8Q2:PLjL2"o;1>6i3/(A*EQg_3M'd&=?b)-SY*p'63]Klm.-8^HoBOkoeZPe&gFZN<+c4#0sObhT?
%\"(PjqE%p)U</Oaq60g1iZ(%FGMS]nQ^dtsLCijHUQP^`W#$VO2G$(U]GL+-jKcdRAaH\]fIE21qBj**l(l=8RaV"\)sZ+HhJ,oJ
%f:<e;\.;F(gWL2bcdVQbDt,&-+MKQcT8LGV&t!C/0ug!$1*CIIs'&7oqR,6pS4=KP<>fBT+%]dAPsAnhBaGFkX&`S/=VsGeXAqAV
%hRfFm*bC5J>+Tt#NoRl68V9H"4SMQ0-Td;O@8@.okc@R:lm.\#%Q+?!7JpRleA8$o[V#=,r8?3hs1d^1XOXWE]'`jss%k?MbG=LT
%2p%7hFs'VCO9Y$qLhkrdW[&f^$3'ZZUR>odF72]7OOSo%@`n:(kFUM22:lZa*((W5($,)Pj5C+aif^Hr8&SDAWB`4\6QT(KlIp,F
%IGkKI?Ef"sS8hSDDWk*Ioeqd\@;foc%MqAe&H=O:[!:-N(nr"QPj68^5H^(N&/?2?/$a9pR%n9;O/#0pfZ%12BTRCk2Ggalk@V2V
%ZV91T'pSf'1HHAX"B0f!pPA2ZPX][%P9V(Nl\K]Z.7p>C0(N=tGAB,7('aJUKH$e9$:7:MiR#OSK[_U)gicAI2&RGK14t@@#dQ'a
%S+oJtqNSi#]'0Q_\)G05>t0&9!Nl3Y8OEr>hL65b24hnf:uDCL#MMG36p-F,Z+,5")c?RVZ33!YDTY.sp8(?c7A#>bJQ?b^,+bl'
%59_cmhAR>-1_Eai'*CIKf-L4Vp[]M\8Ic^>@be_Nhks\/0>;2_fqbThAcl>EZUn4j;e!s=+Da3->^4u=Wg/.*6)pFp/53V_<kfr_
%1TsI6^M1ZW+>'*Y3*J;_"JhAXA9%3"=/99OoYHb+;]>HD<)i.Ka`0%$fP\[GW[Itg%WlDrW\tGS72$cm(kR/2X/9&*ef?"10X[\0
%gU*33#NI4I<&Dp(U#`!GLpS"G:,t!Nm-rD[:\4aKDp4]s#qmWa0X*fdJaAP6`1jGakMGRu#WF"T)Veb"'b.3Nij\EoW)M:85=c25
%\G@`GGIcsS:@@<K&FM@4;ZnMuSig<&_Bk^69EKc!MD1M[^<:CD^.KG6r2@M'i(XO3pi*plcRHNBd"X1H]DS'`Ca;)_[m]Su46!ei
%AsSLK-sZlrBCYhdVM2ph(jbpq(QRIPk:%oNj]'XD95^duTg@Mp'&1!h6#eOPakFWtRsN1EloFA]j-6g7KF.-RX,3L:`1f6@_5_$`
%X(Ffq>oXRl*j[h%-$3L??V:j?>B+2Vd"RR6e;9_r["(IT%bSq@"r>"d#Q3]5aOoEMSqL@5AZ<IC&a"mK]4),&[2,9a8cg_k`hrE=
%B<)idCM<jMl)gZ+JL@HH"!!Y<_6"P_i@#?`#'LLPh<j5`]4QqHNf)DH_,qA<_/mQkpiK:CUJi_&'4=(1dL:FJL!GLGB(Z]@f;QY8
%EP#5i'!P<Na&Kc'T"2pSff$_lYWUm-3j%:ahokJO[GB!iEMdnNCV=cNRZ+F\9/*Z=rUB0=_86IPb8-EHB10@^2["/d<CR^P])fT!
%c0i_$E>:0%acb]1nMc#^Om6RYN%="=A!*`B:*(LRYt<H8D^n#-;RU0L@-L&$ek'P*b.Ki#7*]AqY+8]VC95qHPPS[LLis5-=@\&X
%eRO#Tbm<eF>@<YI[!Q1UB&W@!1=l;>.J*qNUe("H?.Qj#5AN3hm],BfF@b^:(TgAb*8(f`[P;Zl);$_=!K`#rl#=r'S_%qc<K).g
%#rK1lIZ@83^:KIO`@AIaHDWL'22DP<U8#@_@15hlG#pNGl/[([&2Xg`U8l^"s+N>kW[3._?8;-4SWUotWg:<N&k=f&qF3[-7>u(R
%+J^ci%]Xo+;#oE;A'A*jpKeJ!)HJ.JZm*bF8Ln+dd"gq@l1*;9PNAqB6,ppsj34SDcQh6K6f/*D1')#U@[J'bhc-J2IMY+c99/:_
%[k(+d,aEQ8V-12l?Ah4HfW4SH7cG*@V9!RT$eiJjqE[.!>+X9C*;`T9E4[A^Ck=Kff?r`6[IkrR`93S4_@d@]/8W=0(u0(Y=B5#&
%?1GM0P2bC3=NPXHs19.NK8`1B7[.\-'6p]uUL:(K>OK;CE.h8mW=^_pme75jf)eU6FF(4ZFNjd\J(+1Ue^VAIJC3iSZAMb@S-9g_
%*5RUFXNTJ\e&;K<GT=GBQ:aj-@D.DuSkU[]^],o"f'-S-Br[U_L`4MUXF-&p(,ZqNLPCdWJ5uNXg?_E\LddLgDd^n1BhB7MXl7$Y
%55<!*f*>^NW/$_L=*9b6pc(B;]ZP=H8j\Yq8=4J\)F^,Z^/0@YU2dCq6e.bg[mEPc-JA(P,ak]`=l[61NcFp;UbBOVW[^]#kL\S(
%CH6!(hH"P34Dq<Q*7#c$#B-_49dWK72[XlrL/sEBRt.)H&a9Su=H="*</L_E,$F1Kj/:R(@aHkV7d\CFn"Kj(];63aA0"4/fW9/`
%F<bdX!%fh$kY*&4H^7AcOeA7R5V@%>5\Z-GK&ThB\1^uU3o(R5=JFS"Nq;O;^iiQ-8!*uYEVgZFZFCYnBYuT/gU"6A&<n0i-\KE%
%GL(HgrZ[4&nJ?t!UMDt@`3)fCYJ2BgDfc-E)7kZPC?Qr)Uk[$-Lr4u[&ptc<PM31t@;JCD$4SY'(um;bd7G\+j2H)+lZm`H?i9k0
%rmgK;n2LC>p4n.oh/@fAqg\S:DdiNepg68cg&CVV^\m`)^\diQreTjCr[7;eIeE$IrA#P6g;YF6j]QD*0gZ^KYUN[RDEq6Q[Q"(W
%/0Y'I0MTcBg(2p^_^+9H9[X7lk3&6p6lH@d+_QPO46nYB$0b.(3$T]lfM98%,YCp5`?RpS'2,@o9ok7+\3]po>UeE$h&oOO7'YCq
%.7PQVLu'"^Al6PjT3fd>MF>@G.S(XFoChI#IFGo\,SJ[5'Hllb96(S/`XiQBQf'hmiud&9YR#-gU4Sek@3jNOT:5D,QBV[;34OS+
%7F&_SW:O(I\Q_&'LJ&tU%UVUU+!CZ^KeV>,Y&kq;p?fiLqkiX:&/$Cmbofq'UBn.^Ie/E]D585he/';k9#2+deP.?@95E)R2@%DZ
%o8G:%$aL4!aeUSID&l'hAU91,(D.0?b?KA6/qb(jGMU$j2)6A9`BG?5%XS0l^c,>lOTPRk=<=7HK/k(DS2%=-1,-^_BHb8#Uo(p-
%G^f,KeO@Eq9l"1!]q?o^gbq>$A-HLJK.n0?7*#oO\RTmoNcYa4DDc!a2+M!^lEQ4ZN_1jF>0/24b6t>ipr0^DQP&\/\U>!q'a>>c
%lT&TmYQFYq5%;/7&tBQN"/uT_gbDD>'[P?];@QuG#!9K:H'FNS$e)];Fk+fr1R:(9X+tUX1GV9r;7jElMmEnWmXo&?T/lJ9.%78f
%AjsWOK@$nn7QB3prHO*9YAW*Uj/h29gS3IG(,=_a!4EZo)";D)eWW0hI4>6Rj%O2jifmPP;QrMgSR"oCX.YVCkJfW7[5YGS[-TMr
%%OLXT70Q!P=LMTcMp00SWgacGBRr>bP_6'HrJ/jS;@+H5nEnbC?]17bqe'Xo:+tI<q17\Xq>(r"'Rl&XL/)tkb9W?Tj$Z]&Bn;EX
%bF*u.q"nN=_X_)*;@NjAhp14n9.J]Ep!@'-Y&!V0<=g=&"t3sXpOKkflA8LH(9C\m8Gu5!iMOlZinD,RUH[IVCmO-'6=jY=`Y#2:
%K`d>G*WJr[F(e=*;QQCE5o7um%uLnh,_ZLWg$s%8Eq(4,gD[Y-OD&HBNqmW3Z$</[(Qu'alMr2aY'"[`(Fs,8fLGidY-+JV)lp#n
%S8&F"*SDb&PF'=m_"+^K`:a`]*-h!VJJ2WH\T^.8nQ67iiAsh$jn&"'hd0T94S.jsq6i_ar8%@("=R]S8gaGa.%laHW\4)k*f>$X
%,A6/3!t+!KV2g\B@_*6%9-8ZQmF>4T,O^f:qi%i,o$MN;-ok+j]1$9_-P4ee1iD(=7iBd6b:F9N2e'9h?0-@3Z\r$#j4=aL"tasC
%>+`X[m_NV/TrdpM[KOE&g^#tujCQO4;i7GR;m#*IeLgRIcuWYZL:T<<WsLSZi[Vk$(HIc==Yr)^lo_3bK;FUtJS+c2C/sGe#)6G*
%^8Q87<H0+A8Gr#&%mTpal:QGX//`N;,nG#eI[AH7]g12FC>(AkTH>NA6R,"M3@YMEdV^Dr,GC:*nYao=4PGC$k@l(rF.2bF](@Z$
%_ktGViI&m_jE]Q!qFiL9eU[Pf/1m@d=Yo^F([839l]1bCFb\`7edum5Z'f<PP%O5D11Y?k+"j=Ug;Yq0FDUg[jA?WZ@4c*)_CuD!
%%!\ElXP?i`cC*tV-96PTj=^a0:W<X\WD2h^o@r<?(Z_>nR[_c;L!'_8Uq!CXX)-J-6t".LY>\SU]s15,d1q<R#gm7Gi+)X`22e^l
%/UUQRik=c+).0ss9<e1;(.CB('AamRR+Y9COP0KA1N$GKX322>TO/DeGnq4`=H&kN&=1eF4P-(J4mBrDBA)<nHhm;CTq@Z*RYIrT
%dTc3AJDc>rOBh_6[+\LW>9SDf2Y0&T:qR<KG^X+*[@!@]_d:lN8!n5cnD$,^[8IAPT)Z)[<7XHnR*\?<pIt]:BW*a<iMQR62ZR`n
%2,&fShR9?:V)Hr[bD5T3#dEI?RY1o=8&R9%5gH"(W<A8di^>;"_ZhWg^Pg.eU7NTIYs"[*ngrM3M0"f9U+K<pRE_G?f6Cu__Ru:G
%#>%sWTa0.*a_G=&Nu*$!QOa+sOlu,l/gb>",JVOTVDC/[<nKc3U/^!aJjV(WM4(G[b\G\'cK`#?V+I_]8W*(5onafa1md,hmP5W'
%l*&b@'0WQ0*RD@0Lt`lBI>ih$I9Td84@XjB=V?MW8Cf.'5U<'Pq.JWP>-(M>HXU`*VCJINU!I`J&#@`($]ZIXeB3%r+h!4+PF2qE
%KXInc"H]"tM*Mk/[m!>c+XL"W;%l&>-n_BEH87&QVqND!<tD6-GWRB/@^MWL5g*:39Z"?]jZn?j[XFc.>qsAtm^NKeNo`K=9T.5o
%6qI`\<cdtZ-^8i%'<Oj48)98j,('I>DCS80l?/Hrp#BhGh)Kuu#]^W(F5MZYe0JEKViq-i#1]LrU3r(.Yk.@/FMp=i&^kfDl'OC!
%);f$V!R5@b"$Aaqd/0dslM][V^)bk)+^h^7]]o=>n+/_6&;VG2Srl_F#d@EFj[9]k57'$\0SDC"8+$q[!Bn<s8VY6kT.8\&WF*sR
%CVi#1"iiCDKV_.l$V,pG+`:B:eNA,(GotmElN5fnST3Ou'f@a,Je>Sha^MP?VS@2=o,`M-"%e$3ZE(se5mqs(V6HE=Wk]k*P+K._
%h=MO6^KJPK/MPd7+/6SoTLdl#\eGNo+j44WHEG3A%sO65ZWkE8,2s:[Fk(3/.U1rFCc&.rO]bFeT0V-K^_U8IElQBH#e2NRb7a=i
%Qss9K83JJfGf[?(g4qISF"55Rgpt(bh8KOkW$&i9P8(Q^ckY#,qA6gd$]C^=^lHU3&LML8<pV<U(C<Yp8,i:tA#3gPch"UZ<oNdc
%lOqkgp:b0>="o2q6]$<,AFgDkp!=9ob0U`gUTJHC;:7#cCun<Y``df'R-P<mU+9Og3m?KRX\C'Zik+0:0hOfB6u+N6_hn3#!ZZ'M
%-L-!^,i\`*Jf8mLic[WGArV@lgLV^coeOq0@fiR+o',s^(tZO9]T_!1djhM8knHR+r6TE?PBe;&L(QgF]I<u]Z\tusKqPX[Q?[;(
%@L6rC@C+E^VIUX4[-rfUYg==X.[Po.aFYt>@D5bPSXYP$[5Qug9:QsWMF0KHB9>gOef5hM;:AR49rN!uFi/BjS`gW;X6<^AIltth
%l66U/-L9W5>1HqA@*,mY.A0$;L*,YBkkp1o_ci/HQ"V&UX@+N=K;5[1d\!fjpKF#ds.Z]#P8g"9/8aCsA(sb)jth[QnZ+g^3$Nb\
%1Hp!Z:j\EVlQLG@H]--R/q-^-1:K$@RgCU<3;aALM.Tf3N]11NVaUjrV=(-S=op1T:8q_eS:t7)Os.E*]#6kir(sI"I5b`2<8Lq6
%mRRYj@41,+6%m/p,%C+PmY3RVrp'oo^Z?ceEiI]s6G_hZ2%nAQ_?6HgbHf'fk)A4,$,EcJOm-Ts46$>mB'FAY<fXa?Q3OB+<uNt[
%$MO2a5->i(E(R#mF;qtFQP7l(P(S;-_doon`'DFEs%qj"-&kp)()2q]IRL]'=s;Mj;,/Znd+0j,;a\#][mdu82HQ46?.*0*-j1^'
%CEX9]U0JJ+QHMW0'*L`5IQ&PHRTXX6gi^46nb2N&`8`;"?8D.*d,Y&,:MWcXB<)cPs2!^sX;5@t^M`%aW%.\S;aC%e`l44PQShdb
%5=UN=ef+c8!([C;#&c09`MmP^ViGt>c2\8bW1+[V9;2UA8j;#ueAhl`R;>JX*ka[^hBGhp9R$Srb^f%&@fZB>Fe)-hA<pp9hpd"I
%md+SDqP!Sh?.A#LPTLS#*jKKI<!Ka%-M(1JC[=h3"MgWYnH9?d&(gXNlJg^Q1hW,QMJJ[Gbtl6F?kJo@,2@kskBq%smW\;%7NUj%
%'_A_A=Gc>U+TMjac/?D/K5[rr,1]]!Z<]Ckm^r<j3h0&EUcr-kPbLFK\U\H\",kr'&&0f6P_6FP1ED_/aI"]'b+_1?XrZAK/t9lV
%_^36R)eP$Qd_<,f^Y?7dW6<4L3$KKX<7>NC:pAp6cVEUEq+N\Pf$0ZrWq]jP<kK1@1Jhl@etqDb6#$djfBr.89&U&BZ2F*DND8*!
%qc)Z[Fmr[>TH:*ST^E,c%Xp`MR!D7_hi3:Zkk24pdu>f%ZBTaf"f&r\D4$NuKl/p)a\,^.1*!@fR^^5l-?uH#hhk4/b6A/S*(Mpq
%:kQb&>fJBZ-<^\Wkba[.%kb?eq_YuHN3!#SNg0H1j]hr^&$:6PGOXaY_k[gdiEO)SmRR`t_h_+[Nk<Ao!*ja'"aFfT)E6G?mV4%1
%i@[NHdr2`(c;VPB*8C_eT<+".E>LWn%dq2>TQGmIGMt09]l#LF^g1K6OPXsnGt?H`_Hg]J(o9IW/hlOI.c,lkaNO7rK=gpJRC?6.
%m+,kuo_Af<Z0eA?i!!j=o8^FJq0VOR\;T?7rPDhS]kjc>r[c2BFcPVp'7;b[84[BXdrILJMn%%[fZ!`GpJ%=k7%q[@mK3%_(B">Z
%6->`:D(UuK_$&>-Q[qd3>dV^uK3b-^659'C?(`U0YjUq`Mtbg7cPo3=0L*B+L8*!%FlC;bTe<W'm1-]5`g[?X&_3BZFKt0BT0O4]
%0B%N@80Hq!F@"i,^4@oBH[Zdp,(#kDJM+7#`=6p?X$VVeJM$p;7P4!6FRf>cih^5no0.^X5U(q2mK-Z>ZJ+I\kQ8t3*!O*0/oifJ
%%dJWGDhNiMFcfs,GsYd:<8APp#^)8\ho69hYR=9<nZgt[(V(r-\R64%Fe[B3_(Iq,j4gURpB*FG;>9g=M,@:b%d\eSFleXq^q;Og
%m5s_;9Mf7D41GZ_:-7HfK=cYTj66F^G<s55@O_G'Of%oa0&/l6$K:E_$NuNUn;4qdUhGi1gr5%QI!^"nfD;>lr%mabb/kIfU.>p[
%L:\jWGB_h2hU6)KE#0WA'6l`\(QUN$[,DM,TPI%kIpa(k79>]a&+0LAE[lLmE#5<.`MX46Jp_5phf0Hn-+`!O0&GK.CmV7>m1\h1
%&'seefL<70lik!$*?YYSm][)[(S#+uYR;GZ"@O6^7G_o'h-h*A/gD-M0gEPrG*/d0Rh+k;V1#kn"1u?^r`nh.Fo__1VA_,?"aJHW
%Tp1:;+DKkNH%K=``ZAJLYR=G/.1:9[(EY:&mFCmM@n1!uqD7\oK,E6[#C-?-3s6-3nq(,ZGW#5JO\gQLfK_\Tn>A#r634dpn;D4g
%/gDEaF*Mh_?6&!V?D&8cqVVIh5eeh5&Fp=E_#"_[qLMrQiula@"2-reJbZ$&oE+2(\+,#U,]Z4Wa:%Y<(h;?`(E`'1GK(==-)ius
%!q2YcW>G+,Kam]_%e>5,U25/4O;B0]XlMn[j98QF4-$@,?@;[u[oZYj.jSgd]=SmM,0*Q/+YTXC7Y]&N?:ZYf]L-"9OlbA\(GNDc
%)TW;T<_/S\nq(m/45H#8r6M@N)t\_C)eQCjTGO$L@(md;@%f("KtPK!Y0&QkK)-6SV!WnCO:&\-1)8FLr2^/0maqp<R86tF]qDZn
%HH1TMT_)@6qn93M+.rMn,q1MHN4m#K8g2@;?n]sV9jH<YepI2H2s:Ekq')t&cjM=EkBV\dJ8!O+a#E>g95Yqa2teFoA#l[mp4CN1
%,WrhO09A>51#rT5ijuIK]spa3fF&A4hQ[m9[$;I&!f'Vjoc<hej5[c&]&1@6I$)O4-A=a<0=:_ToIfW%N[X9$HpJ<pXtmd/A:3j?
%)E.@W]"EDu2t."F8K[g6^4=<T8--H7m?:c;+#MR0T>//X=Il4B`$3#6caOkOM\co?:C$c/969+p?dL9!LVXe6'VRGo^<!7n%K4O:
%?XRfX&p'a"1..%_nK[lS\"p8"$%67J]V.!aC4kQ$^;qk"oK*WCmH&3[r`E=[pQ+A63ZA$][5@f5WWduS(k+dH(\ULoha05RGebs\
%;mBCH2\:m>i^3-t$[tCh$ji("r.6C2/JKpr^S"n$)>P/"n_ual#-6^0GPhVE<D%ClRsfA7TW.=;^YfWikj@:]nA_GTE8`Gu:JtI^
%-2`?E4mP9/Jf65j&.\I=(MFG%_siTEjIb?Hn3.Q<^#0^Zh85O"pdJdobia;)?dR2"%Mf<I!^:"39InI+>Y8/;^_ck,ETK/&;1(:u
%!Z0ifofumB+CY$E$%5*V%]6`@I=^ju#Ti1;WR:3-DWlup0.jVB28K$J^>McP\o"2qGg$XUliMV*=N/+hH:)&TJI@$VckcbN"n2RX
%8XZV,i5LT^M(>rlk7d=d+'3&uJ/>_/0sVnZ"[5@@N[N`g?E-g-J\/^gYgdt"0Bgp9Ek$W9r$D`J%e,'#KQ8^NG]CLX$[D4$5(%tg
%pdL!`"("N>RN!`,(GJ!Y]BM6,"N90ELs@#c+dE+8PCXNljYMDrKJ?<C/nNA'"nI7[C6WEma9r?eR8UuE$VIpO1V!_ZJuT&E/'l!=
%rp7^DGS>=AoSK2j(R!D[W5of:c?.\\i.Zhe\?^"f$Yi54jW)&DC3QZk'Yk+!Lbe#)"#'F8O6?mp5uj8n&P`E]GcHTqlNY"`fQW;O
%Z0+[>8o`>tGTdf>[9tZG`JaI2.igJWc08NLMn@NT$Z(/]DBIej%a\o>L&bOjU/bt?/F%=^;LZ3=(N;<4s*R.>]XXEr"BS]E7pauQ
%7UG9akM$O."\^tTm`5dIZ'k%$$Q`SgUBgALG!S(J`VhQO]TB*2.RW:9o?@F/il.J,Q7TjIEC4&/KG-0B(\309UMY5P=ngnWYKQn:
%5[I9uIV7+s.co;\2nG(eRItKn!WmU43QDl)Ns&d.7uCJ(J/8nYPR"f$0+aUd3oBuk1-'X4aUd;5V=N8#\-"C'h!>qYenc=)O@]s@
%J/?Y+l@rCDn,eZ?oq)V:6'Fj^$,#162nFi'"*hWrWllmM74))R%iPK0Q<^V'H6t\'(U1'm%>)],#?I"tJ/?_o'?fhRGX3cFN^a3A
%Js(gLq)XlZ;bs[#GJFRo6Q.Gj$6Dnjm`[m''U^sB"*[$9/3a]]$`oN"L'\K[9/0^\"EI"=:p&8a5"8ko`%p?R?JI(Jmc)46Nc]5o
%]&"+g,)bpfL:]^/]T,)?!nC0X+5C9@W)cKK.UX'o8IU@*!P?FgZQt8D2qS:c"iWM=lloM2J8`5].g<Ne00\76Fbc79L3MDVMKDue
%GMk)Mj_+,R_Hl)d$9-oaGEKKJU^MC/MsDW)mXe5If6=`_6mACSa'Bgne_!7I/r5lcXhDVXJ9cgeTaQ&F&J'If%d`2t>48\R&'lAi
%c#d[i$$MFuAbEoGTJi;HbriKDQl<egGMkoeEo$S6!A@89Dp9[<!AB6bQL`$)GX:ifqK0V\5T#0jd",J-(OX8/I(YGScpW$E47JtV
%',k2mMjX"IJ/?+VpJ8S_AeO/,]ZB)P]RUfZLU*>PglWCuRa'e60=J^i#C5ju6Jl*TrVMc?*I3d_"m<^2+YOD30@,mjGsU]7et/!?
%W$E$nG*!N^N-#;M5rP4#T90p3Xs2Fr2pUKE]\k]fT012QS2GtK@5%+>B75M@Ya'%cK!6%6.Y8ArKtY"r?skWO>XU]clET>1p>Rh3
%p4B:[\_jV-E,-"fHGWtg;$rY3@4s$oaRXI]0CW;@p%*jMi2^SfL:tBp;DC;L(Vo4_oA/@AX?QB-_d?6rP22H)@,Nj)Pro($pdIS*
%#CsY"bcXbB0V0fr^u1Yi=""%c<";?*.KC;N"LAkf#@O315c!:'?mPJm0*K:+\KNXZ@j!I'Q*/Ac^jp"-iI;CUTQ#M6g4d=%h3EW.
%TI$dS"NH3cnI^>75Q0+ss',YC9l/?_ifr>mXi\b_Rt';M3@IZ)bLl*kRGQGR&Z&,;ER(D^R(c,NrbaKrqO7iVQ^(!hSj!e;_3Ij$
%St5S_DC594.T:&@qZh%`@:Hb`\,0c8BKhDbq)%`:9(TRGnYK*&V7mJd>!s\;][Qncg<HQVf,4CNgui'j>[J1U&#>Y*#phl@/RgEV
%>(MHU^5V99MJA?:%[8]C3>u-<$m!uq00S3r0"E*X&nHOc;);Op2mS:daHg6=+")@tjO,HJBYLY;h,W[urlG-6kC5>M2]@bh_1nS3
%pk/6r6Ao5JJr"hD,RWA4%!&b:ru`s&f]9#S=4j`^.d93#V_c4#lQ^@6nXqiV`'JX98D)[>Cu)0hIqpH0SNk^k!R-lL58tBn1H6OL
%I2GFm[EV/RiV6V9e*TXYlaaUmYFU#bEO2o(s5s;/)I-9_h[*gZj>],"$KR?q<eQC4iZ-GG;&h+^`AVHbkKamcTpKo:W\EC?ORb6c
%Xi,sTT[Dqp]1c!rj0HZ.?@VCu`f'_B4!\=F-+5TO4D=pq'SG!$`kdgoBV4G`H,#dJ7kS+B-slUiZY$GH0!aC;Csc*_5,P5JGZc2+
%M1WnCk9+kc?V(TS^dH\As"e<h'>=;=rloP7B#f5#kk[s8\mO7NlP8Iar3Vg-phGT^`)aJCgrGu]H<%^^r\$1O:[P$#JKOXKb:WX@
%ot4D]:ODA/?Yu(#fMgDaqm](%YO*-qi5JamWBGAVnAQ/k]pCsd%rhJj^_sm+#fEqG@jNOU*3e?RkNL0qgofls,&RRdhX,5)Ur8)B
%m75(4,QUT@jO-.47'Wqg@XS-bbB3d;bBbf0qK(g@52PX!p[[?>Y]D2<&,"`8a/AT[I]2Gl?G)qt2tuSd]QdIAoh`ur]m*%#?fm:>
%"`uFt<o'S/3L-'KOHQ";>lo0uc[If94cEmqAA7h\qeI(QB\ct`1%A[oPs'%-Cm5m0\%d)hSt<p+T$+bFg:<'$GC(pGa,,JX2FLqU
%4$k>'gLH)6g-_-O`5lW9i*Yr>&kWGa<NSqD]"=5u7Z-khc+0RVF>r%DjK\ie5htJokFb.lY4;HcCuPPMmL_4bl[tI#\E3_Q0%9cC
%Dq;G6ld)-VpisQ&K)_I@s*<YNbO;NbO/qQD<o7$b0,F0&Fms.^]NA3![Jo1^?7b6*X8^XMoZMSf9';JR=s6,8Pccn<EFlk3V6AbS
%Wtk1=9BfW$+'7UJ-1&nODC4>g?SY"V[7$JB4J9`meh(pPXegX'>&u>bU,\Rh"-]V(W2R"MY1bL*)'dnr;b<@IPspS5m,epBCmF`"
%e(uZ+h^S6n&QJK\`>V(=LfdJ2H-"bL^h@n0'+tf9h;pMH<pm#iNREoq@SH]hXAeK6^ki+@$.IoLD4)^hqJ%P7ZEmCSBW&-u91iuY
%X^hdFMM2uTKZu\jp/ZeoePmapEXsQ#EIk#eL3f93<+3q?c)IE9K=8U:-N`[7c@tgJqTeGo.O+&XD)O^XBSr^F)`5j</[HAAp$fOD
%7\jiInHq6:9[`0uY`'H.!Q@W9hlW^7q'KUXbQD7IaN`):e(Ofo%?NZ90f_Ej`f)Kt;9%"t4t7sYBhZ\@VZ6)J<nKCR\Kcgq?M3("
%kFq/RMp]&t#ok_R^0uU91e#u2d%Wbm:F-k;hrD>T,5Zq'_:Ahlc)R<7b_u_OVttX&C3hIN]4rpZJ"Z@b4c/]VJquA7</Z2+8W<1F
%M_*N0<_Pm>GD1OC2B:).BZj@.?e""fb,65+N=S4IE'K&9g9qfpmMNXim'Vp0.@-B=Ls6j$SC<AsHR$f4<Wr*dLe[X=g*Zlb<mkb*
%Jp?ii5`37%/G&4DJOK;,;J0:+mlndd:.2p;0VmCOC0ImTp+!egM>kFp=f8gqQ`e6W/kLc!B![Jnlc2<.il;/OLIiP1bQWQm%@]t9
%2.Wf/VLfV`8]`(I(lnbS.6dCMO<^I'`+h8*"k@F4m0_`!jJg-_TRfe$&?Hn2*:+)SF<@BCL\cdeMtIuk;tA1TROFr[8d#GoBd_dm
%jV-Tlf48'V.0@!\GUfe=bq@jab4A:[=5rr<dZo;\,HCG3Y,&(*c&I5bi%^R*F37Y"s4nilA*,X+nXk6,`mLg^Q_49J^\m'bs7G&q
%r:FWOrRZPlp@cPqs7pkgpbb85b>80#`a[.rfQ-OW-\1_EF2uQYNBWCQNMO@Fc4UYS%c/_*C0!EN03n)Ui7[R%O;$2".9hPc)H\$k
%B?2n_7m!Q>J2bHB!MD6K?r>+;NYWiPPR5EA.i8Ml1;`9=ri`EbLrj51ntMg>TjQktYsOfW@^9Y5+=?h)Csj2OWs+dJf<?l3HVWU'
%g%Bu?TnmW&g>oB[*1l'!Ug\Nb=pa>E;XI$S+RA]FZI>F$>0EgGAHQ0eO$']ZLA7s;"fr+)<2pHLq[Y)XF.Aae.F8Csl<Q4DjraW<
%kkZtl[B-?jpCad3'D+s3JV;Z4C&:gT))1]&/UdN$M\R]lUo^M`bUEQ6m\C_pr9?;E"H9!4+_GK/oHR%gl\PB`Pp)Yc;R_OfdA@ud
%CD="oW:X.;c6-E3)aZc\Zt&lH7)s]&JMW,/TP&mTo2d#$1G1ab_-ujq]?7aZXb2l=Tb9-I:i$jh17T8DdkT$&Xd+HAc:(L9X4N!Q
%@*T>.WBeqFG[*JaH2RL<Q6ZA.iG\\Bk7<1H;;2sk1f:kWB)\1]V>Bh27"ZfraZu6RI]&9*"P1r<psJ;rh3ZH2!4>$g+_IG@qc1)U
%7Dj_M-lm(@e(08@`7@ne@m^ugCb%@4pe_H"pDV&co[*sReG6GWMgGWjo],^di0>Pm!Tl4l3a]:Za3m?6I%,KnHK7sPgGj34f?c5j
%7p9CElQW3s8cd%`(Lr?V+t6/ip8_5*dHFa8O@4u5R=21dj$Kr6`WA[[h)YV^=i3:d[%N:u.D,gD77A`(kKgl8LI=pYAa^#nXCQ)M
%GS-gha]^/MD$GBL9+N&1Zo*gIlQe`XOoWrI:R8"0iu6$@:Bep;/1afF2qkbT-,dT1\:fsb'Pa;M_pC&o!ALXum@Qqu!09C1+e)Mi
%/)&.N-q'91hZss]CR;FcT.]%5*E#+m6;Gu:?6hRM8Ek`4n!gE'P%s%XH<e7_[%i]8a7>QG6>B2o-I3j/8QU;N6dciRq,kU2"Mb<S
%b@kn<%aXk\4]s#f#@d7n*nhhYB^t7&h*]#&]2nDl-LeqR<V#,*RcHm/(5M@QcD!*#<jmNm77=R\r0(U:"rXS`[2p]+onTP;XI'6+
%;1jE5(og"]8!^,Jr]+B[Q66-3)LiNWC\[G/L*kh&qG*?3GA=K1]hU=*-imZ<aY"HlH`+a2Pd*"<__rK@7Z"qZ8Ra`a_Qb<X^eIL@
%ToQ&F<Gq;G"^.=V1J<bGRuT02jL*1"W-:Rk0&Z-2W>!"C<]A#F0X:bqZS[ep=%]dj.<V3`%-E?mHD16tXA$1XQE#8\fY'l*/d2/E
%5],*ictT'H1GBZp^(Prm#$mTEN13*Gm;9\e^DTU3/(/H)VeRX]?T#QhqA+grV!?,HNL[nrI'.gkDuJ30lL+@NO2]qmg&V-(SKhce
%^c$>b-LM!?N1!d[54b!Z6T/OZT^Wq&<4\;:Z^]A`/j^4Bk7:NGrC#"md:`S=P$87YZLTU?f9T`Ro(8j*+8#np\G<o\"pcI2c]f8#
%O=P>C+m@Zm)dDgB?Y(7H!ne7h/7FgL":n:99Y@fS8L??2_"cPCGSj7mB>j?9iB[FJ&`Je35bJmYN=;dt\tt5rO@f#-VD!W/;OYHB
%*)+8GI9ZZU2]^?_gdr^Ji=RYIGoXU&[PA8Vg`<2uduFLJDIdSd65@,^Vfo&f\,lqSNNa%3.POQhdpGZ[,XT@d06;@l&ZMlVNj^qA
%=W]+5Z5ks,>n!n.U3VH88PL%7Fn-HF_GN)#+S?6h*+6aIe;HIbIZtpB43/7]7m,/J,_rNOn4MSK>o"?r6,"(](\N*RDMC+g^KDid
%7>\#Zk=\BtO"M7kqC68nfo,34V<0a[4>q^20OkNS^)6!kapA:`L%GB])B#!)7@dMUf5*I!L*6`/9o6F#1Gu'FaE2_[*4&\q`aF>T
%]hhA`1`&]=d1UO<YSAlZ&#&8o66OQ?SsW_5/$-ES`-?l70GfnJO&9:lkKgT=*$0BdK41]1k$b/h\hq;AT@E,sUW4=n7+0G5!ARFf
%&NT8Oj:ni*aF5.ec.21+8r]3Z#RRY\_d(;B=gNdP+h<?C#-V]sh%<tR@qj:f%.3c/RqX7OOT$.IinK:)10>VQ/'I\?JqOg_gnQ@%
%8>>+?HYY"6S#Mm+Z';cfa+G-O*=2tT\.S$FoA>_@B+u(n6gGODE/#;p)>B^9UIrbL.tL"E(*OqE]/Cfl4P#PfU'ZJ`(0UisoGAh`
%kA#e?Qi`66D8FBR(O;jg1h8C1B'>I'Mu+>)*6jrclD0kH_XdjmbVu@J;p:>Z\150/RKV(\A?;S[X9h$kKY)Eu<J3]Y6`CPid)N:c
%WpDnl72j(h$bHV/S`U3FSSN0mX#;]?AsGlRoW?I@HpfZWjF?@EIrHEFEIc<\Q&_.%>t[q`F:,Qf]jk2hZ2@Ku0f,.-k*4fD+_\$Q
%GnT?o:e5#?+T:]V?Cq1K8];#tdO?rMbWu]?%25TuAQ\"9K=*Ln_XNG-]4&S#1n7(a5u(<`ZN=Ob0.FPWiL.7L3HI<r@RR^-@njdd
%=XFC50ob(B$56!MVZ'uIK0:9BQ9'^5M\\"E[(jbn1i#J)4Im62S^Q>19iKg#]LF#P-Ug:&R8/0r+J1I*9gUEBTPY6'dCR_%$aS:L
%,EI3aeR!f`pK+%ddqIl:D-_Vlemd34K^<-J;Z#T4;gjhdcXC[0N;0*tVrP+C>!B*1k0UZX)Z$1dDgC(,79KY8,k61MJ`37LB!f#e
%kp+K@kEu`5RgrG&D10'445Is":dW/MP8ak:&L<>1qdS'Pb3k@J'8sGi*/@\57"bf+AgBm&#/uRZ(G[uK!guKZG@gk2[C,tm8!U.t
%c_ajik$$/Fq53O7lllgmn``>\I&ui4^gS0H0oLf%0hdhL]p?A+3PJ!S90NjE`I42%aI?eK?^^)7VB5._GA"<>mVYa=7lj?kpRG;I
%:iQ>?MuA:t(oB<N2d419Hdc-M=3NKJKfa'hjcG(/<h:Z`%6Ho!W&q!OhFX)Z;$OY"+u<'7PT`C\:SM`GI?s*NFV8:`aH>MSpb@bF
%9,Qg?$buE`?=Td%/8bfc@U/_Q07.C@TV)dX.h3Ut/f:h%bfOqO5\Yt>U+&-R34Hhn#$ECupXk7R@K.J5B_A"X8UuZRPg:W,@ZqDq
%R<_9#2c3!t?T)pbn*NTP50i!dZ1Z@B%^0i=(OY\>"OP?1l5MVG9T@6V8R@E7fS/f]BI*hGIqN=%9nQtelFc<(<AIabJE@9;m%8`[
%W<g1FW`=$;a2srIQihf6RXF0jf*UF53bQ891T,5oZYC2>j(n@e39@L[_6BaYPnRT,G_5Xoq5Sfl#4Rf%9d[B(eW*2(J:]!-D+;mV
%;_SK.kcLF),`D:D3sie)HhC@(VT#OmI[f@g`=n!<Gs81J7ktKD*foj"AbX5uB.YqB^lr-*DZielCep-hlJa?ldSJp!mcE]033H?)
%BB&%c+8EXRI;*_6O'kH7Mj,scfUA"oQdd=`:6#qu"lD06+mp)V6S`*0d7?6>EPeuD$>PsNScmW"8un*07H2_*`n=GQ[n3L51U`31
%*;"=A2_:'c&NnL2CYegeB]<Cg:1+jSlkB2ep."d1B*B/22l8BVZig#X>q"8ENHD[GK2A9i&"$lACqeS$8GiUu_9MQh3N0SM)G=`m
%ip\MTmTG3U4@D\`#cbrV^8PYIp4_o:,9Z\Z@2bdnLq"j'EM53r$CZW1O!a\;-dU^ONcG-F170?]Kfut:r5",[l.Y56o8epp8e#Nc
%h$rG=[G.DIePGJ@B93`W1b6;ng60Pm.VQZ><MXm]!kLEE@i!CjY?#^tQpYs0./5Aqj=,8G\TT7J=,cr7_Pf7EEW5/[LNFmTU+AIM
%B2AP[6[fH7l@8m+j"aORGRQS53[fccI8Y7pE?Ol3"PIP([$G1MdQ(90-V<,Jmah&)0`JQ*o@-?RK"c4sf;;iirii8])mG46*"O]r
%eRIj7H?^S';a67OV'>@4\d@J2^_'4WINrZ&_DFf4`WN8Gg)CK^,s`"PW2N-R[`:GR%?Zfe<FF&Y[jEKZ)HdSd^55-T'-W+cKm?BI
%h5WX]BaWi@V^N=gOqCjG9'It3Ds!0jeVrnVSE/69@:<`R?_ik(E9ZnAo]36u0QpU)1u5&:*kWi<QGje\_Y8JD[E[d'8K%n>ql1]H
%l_C&t/h,dfCR85AlD&$UP=QK^fS[@7VG[O\-YWgoo<N$J+!.006T&YDAX8;"Qr5[9qc22s^&sTTg+)VS>KP#3K/\9,fgDK)Y'8I+
%>VeY]/HDk'V^oc(7>j]%2P+'*'=V6\[/<pI,eSdj0rA,!?lN`]`bCp(*0PTVO!+5UC;D<F<!Lo5f91HdVbX4KJT-ua"/0XOV@q)_
%6[EM16rkfIYB9q,p=83%AUC$0EL,0ceKtAdY'QpQpa4b7of46R),bUm(*i&u,+HE<AljLeN',,:Zj#^US,>l*iAS/#3]bJ+X.mfe
%3A=4^Y@LS8/jaJS4kO>IZ?4[kWdknHal-L)p--GocQ@SjT6C1)ida%7C1ZJ!XTml\W;]I[@O1:*%Ym(pd"M&BklcuZ_)G)p5N;C<
%oukK"'uJRAXALM2?lf^/eMt>^o*?]*LVNSbkaIND9,5ZA"YbIh^<,(S4iMa!(>3cs*\5csDdhHl]:IcZ0,iC]!Y_e9Ub7je\RV;?
%ABf:]j#0nMH37@T-<3JHE?j&RaQ?<8L-;fc0MZBkVrj'Aek3Y+3l%_h@3HtpH)E>pqPN5uXf)rH'lu8DOXaZSi^!QLcQDF=?,,X)
%`RAR-S165Sb-un3UN'H_BqU]f!X:-(2`8Q8E+f$tPiAa#e!$1dP>auh?Ih^Pq\_uI3@%,.3q?Vd;`)`nr&Qn.8paD2m6MC:$M"gG
%g2shQ.l;<2e`:e.]G&-'6_a4V!ma(D+<QNPWJO7\LCknNeU3'sJaAtk>lbO[GHP)X$-R%R[O0KHq<(RZ$O8Kr=ZRTc-Ztn8AbC:,
%9-44J\KsQ50S0nf0s^8%Ps@h`bf'94h<G"02]I2MVP-+eO<dF4r4Wrn+1.[Q&^%Kmfd9N5XYWMVfWLBo*'/\`kpJ#Q!rb^Zn],"<
%&k`=(O+;/]*-/=#>3D,@!(0kVOGesj6:-)hI<%R+X`FXf*::DhVJM5mjmaU(Ok^W>oi&Y/=Eg$n)X<5-%WPO*qs!8->Y8A=)]<W?
%XFo7BelB=`F10u_"2r&]o@]gJncZ7W`A)Bd)XC-U8g-VJq7sfuRu#.B/ZDVu_U\!)=WOYsW3jXqa7M[8T$\@&GOBHX%c<k[;ro^#
%<\65'k=?t`Rb(Vl^Tqq'2<`Rk/Ts)VYPKN@4C(6E1&2(r,dAHr3Jo]IPo3`2N/U[%;c>@+CNH]>;fbeZ,`-8doCLLD*EK9+G]tnV
%=51D/f6niME[plth!fkVn@C&Z20SWHAiiM>7J&'kKe'72(Xn"rl;IpAWT;^@f"Ak'8L^anGD't'nr/gAI[CQFVHn<FdL@QNS,+u/
%k'<Jjee68\jCO()A"2U(K?=lu1/$"Is+!;0hun!AS:UeF`\i0,<V-lKRW&/4%@Sd:d*+<e)5lKC(Ic%!g*[1J^WBYWM),ic4A@VP
%qGO.E>X]*VUGnF6@5YG.qM)m`$iO\VgN[TdLUE0-Ra-p[(9Gc#8<)^u@cUq:9;6@G/sr;;!]#n!EQsP=B#S2N?$oe23_^">r>aTk
%K:fM+X.$S^:9fE6@fL$[2`m1p^a%"RJs55<40`EA9kZDl(L6NBgSa3$`"#hn8$NAVEflp%HoEO&SH$pba)GLpRg/-49Ru,YKlm-q
%mF[9b4IU;6P0bYmN:625<>)h2(7,Y,Qo_GIF/n(jl*9*jY=V(>laqRk1[U36c,6R8eCO?[h[,"<WW;(\2U9mlos;nM$"QDg!5Xt'
%.bh(f"<uO`Y2ZT8g0/r+*PY1_5-kJ+GL%He7;)+`lEDZ)(>#i]<1c7oEHo_sY%n%@X7r"*Y*gKOns#B=6;9Tl;205FMWX9sSBO-j
%UU6Khk*!%:AGdlBT,a/b4S;EOKB.X8A@RQ.RU.#9/QCW;p87u1`sl0_PqjZ9:65fe5.snDA&&U9#Y%dkh+;d(4(k)UY3o#;O`CJY
%$T1<_#k*dU!=AIYOP>9n8PO";"#Fs\>=T^3)BQYJ.%hM\PZRIg77(+h^?]TECYLub"4fV\k3qH$q*[($\72s-:frIK`IH.nYl(Mb
%nZE/N_(TMh5$NI,gl??pbdj5mIrme;2T;JA(0Ci)GR4&6&pBU_a@KuONpG-8$iFs)eg)0SM9:JR?(?"In10r].UfGp35A<Y\834N
%1X:7Q8_KP9./kERnM.Y.SX/=-"\Rj9ph+/[6,cq2*+c_bLnhVp=LYP!r7<F'PDWIePb@[!?()V'pniM3ng7<d[Ml9,(eV_3)<$d3
%M_0c[<%M39+\*VOSg__6%W^9%VOc8<)Nft4q'b+&#VTSn0o+<lq7BY8BVZl(C=I@\fSqTH#K9h.i$q?WY\^Z$cB1qX.lGBt=Ns)n
%O'd$l(c>H3NP_-1j:,')Tuh:=q^BV4]*!>+`g<ue2.q$'<A<A>)qC?A>>&cV:$<[dq@j*u>NNpBMD[:baL9KR]]GWbjB9t#5Y2[6
%0k5lN-V"UUmr>F4de!YcKC\+">TF1@>@c=c4>/q`7maF(!\.D=MZ@@]=JsC%QXAK2ED=]?=Ut'I`Cn1U)H'CTe#qm>9.u:"hc4uC
%TY3mk#ucXnkCFiaIr.YfTtrf[O>aF@QFYdf]L"Q#.n[@RbqV*THGjm"4*mLAED)^gZI"/;!6bi.ng@`c_m$^SF9e*!($:&[4J,5T
%p+85gN4TYSPFlAqEV:(_1tDkH-0r;9-'WTB_&Vm<[jq*&LJtTpJ6_l-^Dm/ccZFVjW_@f"27WeFaFnEV\%naI;p3^0QJ-W20HEbQ
%!F)a&6<Xr7!o]0q%83Rg4_"[EKnDL:c0Q1-L8B9+2*X"mDq,)f7uo8aGtp'\?$o?<ibAQPU#qAV7d*A[8#_O$2?p%nakC$d)F27W
%;A:qmUJM2g@P!u74I/!WD*HX1Ra-#ZZ-We%pUf8goYDp^"BAk$Mf1o&H&:"F@gJ]2jHc'"*V[Y<&sN`(oCi<#S/p*EE^Z>hig=Bc
%CQVKqMkYf:6!\SN`VP*g$>Bq79&7$XmnR%:j\?h%P^`TsX39merJ9"sn-3;tb!A'k)eN'!OJsr4`te"+Y!jpCjJr\Opd"m=OIec?
%F`4%+8H_JGauNuq/f$U(+)L(+mRsX;L!1.Hd'?4Ue-bhW?op;V8?2-YT*#5[p;N\='B%qOprh`tGD<ZT)1bEI?DerOPJ>kR0uGq6
%[M2g/<\4</3B6U[W^I>*B6LKaj!hnV+O"P7c.RNCRdVI8;/64^M?-];$E5p!:N;4VU^$B%`A*a;082gV=\iE>(F=Cl/Z;?4:Th[&
%:9"egR&6YPN?0-7CS]U#HQO/j7sGaWqV,7%VVYsJKM4bslK)D9NuhFER\<`$((\j^ZC^c67OB?Y3#KY=1aSDR0K3''X=S?G0M`Q%
%8`oA">o6T(?s2$VTdiaQD5G*"(;",DZe`k&?`/6]'kGHaY[o>[;.(`.Y`5BW+$BQ6XroQURXm[**9"N2;p\/M@T."\jndpJ#5N5&
%%0Gg1E?6$6e-&5JU#"DW+tO;OUopo>ki#7IV2N-bT)rY(>o&&HZ796%:iNZK'&QSY_<-Wr!7tmFcn<CqX]7ppdC/_RVJ9)UN5d0^
%KNjBe&8NH.i=V;h^uFtUW3++fK'li]+o26K:=WFh"h(Be,io>O:rPQ436:8:kcp+h%e<%7fYV@@\\gHt[m-q$T$QPlB:jU,/P0"a
%UUE8$K+_r3aGlqA,b1i>dLV^3fM0D+3]"8i`Q!I$cOA;N%f\I>j/o0jiM".GCK0'=A-G+<J<nZgH+'E\ke#-)5m4sRLgr?nAp6J'
%`$Fj4A^5fh+nakAWm!#1AsXXQ'L5\t=o+&kS#3;>`<1^7"XIp\W,1/@B?\%PN6B8-7NaXJ]/kprS#AsMS;66b-7H*jaR](FMuDj&
%bS%!?$2,dV0YrbMf9&rhg;5-S<`#g7Vl#S":#d.1qX3"`OY\F)K#qlY8eef?/8MdN3/U'AL`hf.Kr<2"UKC,:@@C)lc6?];=,5r-
%.GA&OP+m'Of@X+UYkQ<EiRW\%<M;q"i*-7M\<C_^_n9>H8DG.aY&l9iP"&c)IZcs?n;e%1"#)TDGr0bt'[W5+&jO.CF9!]1ER6RW
%rXKMs3`4kjS0fjnGn)4/G?A'n7+nLT(Wgud[WX)]J%C7.O"^H-)o5aO?ELH&$=?f7J$>f;X2DmKf9[SeF_kJD0hK"<YWLNs/m-6U
%I6q=GNEp3i@_"cFE<aQ!;&%jm'M&#*;^fn]e]t^[*!ZlH\2tY#/rMTofYN*Og[^boMJG5VNomp"[?#ia=,fZMdO84d]J[Lda?_l=
%jKrhU7L4MHId90W+lLDfr^+7!^q.Q0$2Sd5A.3iS'+J_5b_U3`r&4;(Jc1G`Y`@+ciXiSGiY:BV?%=S%Rq0"VTJb/\BAq9\`W2,[
%gSbKp>>K;7)!l+[RWn9^1RI&0OCchg`9@BO>)9',Er2')'EP0Vk`U[EeHS$2p>H[GW)9SB6[WU[>n:!qP)$Rp+rFO2%eZ&7*?LM>
%%La7_7>JHk/;2`n[$K$DPgB-f2!DKP'E@cR6&@'i\8["L(:30nb?-hQ+#"-"VFQhJo*;hpnK9qF`oRRqDgTJIl95]#D3>]<F,LU`
%Ee=72`$&.qL(1.!F)N[f6@I*-gfS"VOK%6?jk:p0Pa$0l]f[5<le!poec<>A105&#YjCM3AEYa0XYk96PP>?'=:aG"^UE-L[gZ?C
%r\#;5&$A[&5@;!_N.mT%B85!L>94Mb[)].&cl:YhfL60B.#I1aEBFO\Re=8=&6h8dJJ=*=RE,o(:T"TV;uucgYHDVMO&q;L_D5NE
%l+Y9.`f;qk=rnAC.fo)^\Le\OCC/?5^`39@XR6&nX8Vr$)4-o,B$F5ZG3dTR<o)H[e4RNWP6Qa:-u05q;a-%g#gG]/Yqc%#i/G!L
%5"UXGke!rs>Pg>$jC-:n#4C-^+r4ZX;F4+P5tNM8auP@#[ntC=2?9]>aUP6d#Paq)`_d88*)VNCXq75tlquA6p/h43e?ZR-N.*0@
%0dhBPp/'g3$lu+smG!18<n9pc;M.tHa\=Mc^#3R?S[l]rB5pW^BT8m2"jJjaQ,I6m\1?j;!173%-mldcaiATg@?*H`H52_c2p-r+
%**`Ka&,ec)79_b4Y['"NZ/=GN??k;;<S`3%F(5I@-uc/l]+Qt`*)%a"5s.BpjX*,e,9#KOX]tiHb`$JYM0PY6g0Hl`L/pe_0k"*L
%clVXSnmfb`!<2dDCY)\4,.X56*V9kq'1#Y'\2-fYSW$:mh^?KE:),d6e2V+A.@49^%bg$B"SLJigl:S@mjkPhPFSY+2/,$mRk`,N
%E9.p.9KSdfl>a73=Xh!mC[u`UYcJXTBDcWt$$L,"d>nP_7Kb_EZb)^gU.rrtbP'FE_8hX";1?0i:lLETh!=$c@d7rZoGOun*:8?W
%e/5,hpgje\o_@+r/0fdtVV%9OlGp*.!JQqB&7/;o[X*P_9PCrOe42nI`Fhd:0ZsZkXF]4:iC#Fd[DEg4W]gfc&MY!hZR\H,e-!ON
%LtF2"T7d*`WGTu*0VDD-Lc?[!'q*\HMD<!5=`sFscTCKF2CpbJG?@!=^nol5g?A7-<(X75RR9n*jJQDABBjjERu1cZ98i0I?mJgY
%#AWao6_4HAB,#iopC5R]C5Rt%EWLmR%fb*c0Be4NG#XW6?38\8CO#U5/&]50Zd1:qJbR`+*KQ,pG/n+eA_1a[_)jLk8VDl!!RtX=
%$F9(6KHc5$B[TQ_%Q]V_6.&Z#W9Eh37t?gf9ci395eY'$'K&K[p1:'94IHu/R2>4-?uGrL,4'#&86C1G;209B1hTR`?)AH*fikK%
%dmO>pL+?3'J>7W!``)lA\4&15)1N'>IW.]o==@^7EgDHg.`mHhL!U!\6#RQA3fpE]Obu`7P20Kb%#@1FQk(-FWFFYX=kMj4(gDVM
%%Tm\J0p(,:egRK<J'l5k!9fGoR[=AN0a5)+pEHt=i%%i9%lDrWK>SaOVq&rtPZ(5#-m*mH)'_.qAJdmsm>Dl'9G4NsBsJWUN%2h,
%6[J6OW-?FSP2Zl5)%*b^VZJAam[.#D1@,&X`cB^U1[tnI4A,4\4k/a:2"uI5>;Ra\',[AXQ:[T":oq%PP_;q&8JEeEO-W.F:2<lD
%G8>02`os*Z)$'k?Rsb@a#l.>#Dp9Z6$$J;4U"MhS"h;f5W35KO0;BSiW_3!49_p<"EGXf]bAI2DL,;si=1#C9LeqL&XOrPs;4$iB
%o[+']6%l,D!=ngZ[]'<u^8C!O57&i3=pD_]#(kYYHAAP4/s1dB#2j.T)g].Zr4EcC-bOgPNe%":Yg'g,j"CK3JWMp\FeCZ0gBQbX
%bqH;c2@tV^YQ^^G]KK(-R[_)(k3b+DW7>uCLgH$J*Rq/LBd+E<^Y'iGV@-Gik0\=.mK%P86l(GuDppC<n,5n(5.srQ<PooAT>4LC
%jW(D)XCuGY?pGea7:]:V^b*pLC/&(QW9eKCFiD[C$nH_udD2sn/3TennIa8t14s'=(7Q\G1hHA]+eNm/Gq[r]omoEBCRu$'2U@>\
%:mKQU-aKW=7!ia(WY[`oG4dR-9hPWD*YfZb:blmAk*RF4C(mit\A,2/@;>&<[ti#QVMR.Pio:'NCn@a/=#%ct'dPgt1>?8=>Xge?
%T*R#uq@tE:1@o6('O5^T&G$<i;.40,(>IY$VOIU2]S1BBdDg]H.ddGEIdoiZ8lU*A+Db,K9D43?:g,&NTLW+g&FXC45IbB1ZG%TL
%S9#,5[=6p2]>O!USsDUR36T.\ZV@GGIt4Ds@XnZ/a2mF8h9tCbS^Gpj^s81m5_/^<g.Cpd<$\Sc1pt5488q-#2JAL<_UOHKB)g%^
%fCQU)@^8cV:])]CkW-]jB^Tp_-Tfl:/Zm&c.(Z>f8"O]i8;!8qKd3T1b>NYjp.S880!4Q2`26P8X=Y*PcIQ_]g0bdEXS+-b:i[VQ
%OXqSD6&*#]Y]b3C`\:s,9Tq?K6%[Tt'0n=UIctku_<G8RId9XsXaj@f(4ph$BbJT)#p*"'*FtL!8"sHY4t9aZ'gdpIWbr4Nj'8q.
%:1@`:C;4kg]u/'n>SN-QF[=ZXY"sZ#?/d0;)O1iZ7E>t?4'!?6gs/4U8^pL*iHLd"Feahe[%bK%:A:!O5>Di)b`".VJs!c$hVa<]
%]nCO2>[f/CIQfj:4Iign-8]#HG)E*Mf;-,,\L`R@mj)0tMe8Sk7l!nV/B#EaYE8udTIE`LF!-5pgZ=mDae<P4<J3rNIbsL&`FKX6
%Y&\8,`IB[rcF-,CU3rG7n62?)CMdQpc(iSqlRq_T*6/=e$c\.#%Xkdjc%$5O5R2s*a(e7Cc0gqG\X^k`Yq+55*c]Di#aL6?N?^KL
%*5V>12t_g0&F)r*T=P2&s6m6O'1O^^IG>nE;c\OkKK0N1nu"@c!:8V%>q_4t3X/tjJHa)n%70L2-^Prm=khYTpl3hJhjf86@=D.\
%hoHr6/H?\m&^tf[*1s2'Q6YBt<*7E&?N`Ih->Qi-lSa;&R;)-X?FLf-SMK/1]kEmX9egH=ZbJT"]a`=_=oK5FfLUn8>Vf(Q>aHs(
%Y]?O@jNgM8QI:"<?h?<c8S>dbZaXoI4'_M)S([_t_o;MVXi_mlF:$(]Zl:S<IWo7K_Ho-ql+pj'dZ['V'$qB=L)7Jbh2Z)UPL9e#
%/=nVDibd?`P73Igl#*+^keil*Y]^mT&br>[QH1c)0krJ6rfXQQ!i_6=!'!a\$^>CY5nUGneO?XCXTPtb";En59\6Z3.F-u\kt)Ar
%/1ZEn3LhQ'B?7lm?\i5cqAs%/mQPmRO1SsB*\Y=B"YcQbCG[<FXjI+j'&c-82<?@"4?UP&TNh4\:?@TF=qG>#QR6'<B^B7CR.J[q
%OuoXPmBBg\bA%IG,\Ft7>2!AlHJ/pUK_.p>-Q+BqXM'j>6>B8!Il>PmDO,0/LRRq92*Z\E&;3lCKT`$.07_2FmP7?,SQVA@b[mS]
%;4Ti3WQnI3&^Ue%dD-n/CQ8(N'MRs2WZMOf-M75<q2ORrW@;A/\X$>KTHum."k6.$V6SQbC$&_k=ip_-6ksE^SMlFZd)9B5QgSHj
%&(<:pGAd+CK647[l5u-RMaUYi#?fe/`BqaPVJc,RFu)S]WZI!drm%c7L''LY5Am,U5iLYeD68BJJrLngd&!^m]c1g!()j45X1b51
%P@=c@<?-\^(dU!n=cO[lS%6=k7Xiff=3:.T"&"17CCB;$lKZI7E^>NB4;U[HQ#5\CMaHL1RXJ?e,mF]@X88l.=X+n8b$6:BhV6=$
%mr^VbiQ,Z^Jacf9rJ#A<Wo$td<=Bj2E8(Z'J?d&_8hW),*''[*@L]GP#7u4lR21,n4KIaIP\VFA&CCa)5c;rL*T]jhQs)Zr*D$>&
%eP2[AA2j<2lcbKlYKaue95"$Q*WR.A!F[<RGW2FGk7h(MA>iJ*a)NoE9prn"32T`!Q;3#e++N8f".bt@L1Gh+:>EJQ'V)i8Bc[NU
%.(dq\_!IFki.PVu:&+'%8-;;<-?Mg.Nm3.N/d^X&Q5:%oA,PmFNX?\(\"`KJW%k94%Qq3_g(M`=7_pBF5`$Qtkh(6I-JdrM[W7Op
%b9SZF-hW[*0!+2D(7@OLK-1N4B]CE]"DOs$dANa_Q].5"g.V(G,lY+CS(MU%(Ug_Q;,ESb'l)&,6spNsEJhWR97'3]1RO`ghEkfL
%X,hqn`#k&rdq%k0=`DTX%Y'c/DAk<mIMG0D/]&RSAB@Gc4a)P*3&#5-XoGq!gLs[QF`G4/A06//X4KI##ik<hi!h50_^;g&]hu5W
%e_KY;jB5']cJoWWMR\/"5M-"TA?D_`j:MdgNfJ1?hl/S.)).70<Otd^OjM*$MI2=ZA9?ThUW*h)LlTkAm/EQ4>0]&1n=5'YPln7.
%<qU]H7,7rZ[c>%[oZlG7qslgN!'pnm3b'JAY^iY0Q!K!M"\_GHXEWHa>t]&B]J.auJOI0"/u9r>*g@RD8_u%]ZJ25f5-s\1_YYr9
%?@aA5+)A8rjAr=B<cg.]IDINjpT_"6,b_'"Aoq3Ki<fgZ7-Rn68Z)\.A5J<Jm&ggWnjn"1HBM2jqh)GYl*1'YG?<geMI(WXbq[-G
%%j791ZJ<[Q+&F5;O(NT+5BreBh:,&[fqMI15XY=Y/nI[>V4bm1SdAZnOr+u42PYH>]@2B2^obYO-!Cko1`+N-`2gJ,%EoQeh?Q<N
%*fVKHWQ@,<I]X:[!:(l<(id>=.;]co"CRD.&11!12_Y`9+%H)FrYLSe>(W\iKVo"I--M[-3!:6okt?Uh"!kCHD,Kg16qEln]kLeb
%]X^22HZ?hm8kLTUKb2OAZZc^+[>/S#9hNu]HmqSB.K2h0JMA&I<s?o[XubjoJu_4)5_YcgE.lta+_`?*e_fB*Sri&+4$rLTfZ`J]
%>=n"=X[=_%,ncVdR&h![2YPMd_KV5Q.hO4FA1QI\4]$9'd!U05Q5$<kL;EF<"XTN20%^83Frb:a$C_*e>J=_af9kJ:)qPVQFA02<
%!0kX=OOg5a4PAo'4krRZ>BGiCq"43_b[OZpB-hk4r/3o]i&V$u0M(o3%9N`k2O-CdpVAl\ie@2Y=tu"kQ=l3kAN3g]0/LY2Jf:OJ
%PhR;'A5>HDEc%^mUO+h:PC9@O=pu>Sk$mYM=*7kYiom#_3ZJV4N_7Lrnq>Cg6<dtKMu`!<72^W,NbIchs$)MR1f[_;$cK*cLSPt]
%^'^4[^jpkjg?3Y-$ELS.;7/*:%+`Q&6G+lLGb3ShX;/04a7,OrPEuBE6h\r2P*%#C=C)24"?>bg\d/9QF-.b]J#G3m%*[o%(09Wg
%'a\b0#D*h,ANYD&38'"4mL0dD[F[[^J9Qb\bTiCqTk,?[,p%fS!XLt+%2`cd"]/;UXIRQ"3#O]caTXFe;7/"\.k!!OfT7i?Nn/L?
%hY;/QZf5/)<3Rfm%?G5T;V6\.*'B-hDi0C>Y^f&QJ0WK?Xob3\-q;qZC)Z>iRlqnUNl:$U_u1%1pNjb`Ku.7MU7u?DQDGAYI@n!/
%EIb#e4"b!pFn]Qr!S(CA\Ss2(<J\iML#PL&-hXaE'mPe>>LJE>g':Clc3.:YUu12UFd4O=N)&\JM[n37\p4uTk&r"C%D79?ZQnM2
%Q0XKY7Rb_q:4/7Zj<L.k?MpK'\*Nh"XQfmi_oIt$Dp#Fk<]I6*>TW(M75!`:3gRV[\.9]nZ&]7Xdaumbml'RY\gD1fh2qiNbZkiu
%Uj@a&\*/Y`F!WR+LmAn$76NsL"5Oi*k]Wo2=ekK6'P8,2bblp4[1@cVETr?`h?>i&GcZ`qi7uhX.PM#3V;.FOnP,!FA(f$H,1HfY
%0".1[?@HhaK_bGFS"2^s9uQF@bVX40*A`;E(-#ST,OtCkG\!KdN>sG=TuuTY53i=V@?Ib0/ck7YF@%,-=QU7ZTbgR)`Uo7Q_CF/:
%W\eu-##^GL6l&.eY2]W#<=i!rKTu6\!>oejG3pN9:HD?Tm(_4WRU^YOGh05Z9g]HU(7W4E@AQDaPPnU?lc0i7[W>n'_l3j#W6j^,
%\*)]AVd3'B-5jkGWMfqpN1Q0p:U:_X@&"ja;GAgma@QV;Gg$_p7`>nBc*eYBD(s9LO0b>3llM`Zi1.r1hCo"o!c(ktJM@K'q1u>9
%[fY7eW^'\fQ41adS^`C_p0-3eRKVYc;)a?HdA0)R,'0<:5QX@W^ERqN\nLO$DcgF5M`)GV0013P#Vk%f,$$hgC84d!q1cBH"$g^]
%S#i9dUi.eH2aJ?UbskUr0E[%p?XtP;PtPN3&prap2TC?=^@t^FBZ$+lNhbubABX(6ANQ$GEM#,g8g!@%U5e5XY`A"u(2$F(Mqf0"
%p3G(cW>)PX.E9&B/3c&]qiOmaa.Gtrd\gIN_p<fj55j.f5Q0m9B\W(GYCHNGggC#8rqCp>gOK"pl[SlXmlu;N(k2"IIf5>Bq6.R5
%ofmm%c0p/]Z[_n>?iQ2EI/<MSIu@\/bs+Gle#.]nrGV\s&&8#?Da+-CJ,e@)KEY^D?hhSnrq8SUqk*oTIfZ'o:@e~>
%AI9_PrivateDataEnd
